{"version":3,"file":"polythene-core-radio-group.js","sources":["../src/classes.js","../src/radio-group.js"],"sourcesContent":["\nexport default {\n  component:       \"pe-radio-group\",\n};\n","import { filterSupportedAttributes } from \"polythene-core\";\nimport classes from \"./classes\";\n\nexport const getElement = vnode =>\n  vnode.attrs.element || \"div\";\n\nexport const getInitialState = (vnode, createStream) => {\n  const checkedValue = createStream();\n  return {\n    checkedValue,\n    redrawOnUpdate: createStream.merge([checkedValue])\n  };\n};\n\nexport const createProps = (vnode, { keys: k }) => {\n  const attrs = vnode.attrs;\n  return Object.assign(\n    {},\n    filterSupportedAttributes(attrs),\n    {\n      className: [\n        classes.component,\n        attrs.className || attrs[k.class],\n      ].join(\" \"),\n    }\n  );\n};\n\nexport const createContent = (vnode, { renderer: h, RadioButton }) => {\n  const attrs = vnode.attrs;\n  const state = vnode.state;\n  const checkedValue = state.checkedValue();\n\n  const buttons = attrs.content\n    ? attrs.content\n    : attrs.buttons\n      ? attrs.buttons\n      : attrs.children || vnode.children || [];\n\n  return buttons.map(buttonOpts => {\n    // Only set defaultChecked the first time when no value has been stored yet\n    const isDefaultChecked = (buttonOpts.defaultChecked || buttonOpts.checked) && checkedValue === undefined;\n    if (buttonOpts.value === undefined) {\n      console.error(\"Option 'value' not set for radio button\"); // eslint-disable-line no-console\n    }\n    const isChecked = isDefaultChecked || checkedValue === buttonOpts.value;\n    return h(RadioButton, Object.assign(\n      {},\n      {\n        /* group attributes that may be overwritten by individual buttons */\n        name: attrs.name,\n        key: buttonOpts.value\n      },\n      /* individual button options */\n      buttonOpts,\n      {\n        /* this component's options */\n        onChange: newState => (\n          state.checkedValue(newState.value),\n          attrs.onChange && attrs.onChange(newState.value)\n        ),\n        checked: isChecked\n      }\n    ));\n  });\n};\n"],"names":["getElement","vnode","attrs","element","getInitialState","createStream","checkedValue","merge","createProps","k","keys","_extends","filterSupportedAttributes","classes","component","className","class","join","createContent","h","renderer","RadioButton","state","content","buttons","children","map","isDefaultChecked","buttonOpts","defaultChecked","checked","undefined","value","error","isChecked","name","newState","onChange"],"mappings":"yQACA,kBACmB,sLCCNA,EAAa,kBACxBC,GAAMC,MAAMC,SAAW,OAEZC,EAAkB,SAACH,EAAOI,MAC/BC,GAAeD,yCAGHA,EAAaE,OAAOD,MAI3BE,EAAc,SAACP,QAAeQ,KAANC,KAC7BR,EAAQD,EAAMC,YACbS,MAELC,4BAA0BV,eAGtBW,EAAQC,UACRZ,EAAMa,WAAab,EAAMO,EAAEO,QAC3BC,KAAK,QAKAC,EAAgB,SAACjB,QAAmBkB,KAAVC,SAAaC,IAAAA,YAC5CnB,EAAQD,EAAMC,MACdoB,EAAQrB,EAAMqB,MACdhB,EAAegB,EAAMhB,sBAEXJ,EAAMqB,QAClBrB,EAAMqB,QACNrB,EAAMsB,QACJtB,EAAMsB,QACNtB,EAAMuB,UAAYxB,EAAMwB,cAEfC,IAAI,eAEXC,IAAoBC,EAAWC,gBAAkBD,EAAWE,cAA6BC,KAAjBzB,MACrDyB,KAArBH,EAAWI,eACLC,MAAM,8CAEVC,GAAYP,GAAoBrB,IAAiBsB,EAAWI,YAC3Db,GAAEE,EAAaV,WAIZT,EAAMiC,SACPP,EAAWI,mBAMN,kBACRV,GAAMhB,aAAa8B,EAASJ,OAC5B9B,EAAMmC,UAAYnC,EAAMmC,SAASD,EAASJ,gBAEnCE"}