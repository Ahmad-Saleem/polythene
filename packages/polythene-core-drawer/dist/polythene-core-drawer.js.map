{"version":3,"file":"polythene-core-drawer.js","sources":["../../polythene-css-classes/drawer.js","../src/drawer.js","../src/vars.js","../src/transitions.js"],"sourcesContent":["\nexport default {\n  component:  \"pe-menu pe-drawer\",\n\n  // elements\n  // holder:         \"pe-drawer__holder\",\n  placeholder:    \"pe-drawer__placeholder\",\n\n  // states\n  // open:           \"pe-drawer--open\",\n  permanent:      \"pe-drawer--permanent\",\n};\n","import classes from \"polythene-css-classes/drawer\";\n\n// Don't export 'element': it will be the wrapped menu button component (set in polythene-xxx-menu)\n\n// Props to be passed to the menu component, including 'content'\nexport const createProps = (vnode, { keys: k, renderer: h }) => {\n  const attrs = vnode.attrs;\n  const content = attrs.content\n    ? attrs.content\n    : attrs.children || vnode.children;\n  return Object.assign(\n    {},\n    {\n      content: h(\"div\",\n        { className: classes.content },\n        content\n      ),\n      parentClassName: [\n        classes.component,\n        attrs.className || attrs[k.class],\n      ].join(\" \"),\n      // defaults\n      // ripple: {\n      //   center: true,\n      //   opacityDecayVelocity: 0.24\n      // },\n      // shadow: { increase: 5 },\n      // ink: true,\n      // wash: true,\n      // animateOnTap: attrs.animateOnTap !== undefined\n      //   ? attrs.animateOnTap\n      //   : true\n    },\n    attrs\n  );\n};\n\nexport const createContent = () => null;\n\n\n\n// import { filterSupportedAttributes, subscribe, unsubscribe, show, hide, isTouch, isServer } from \"polythene-core\";\n// import classes from \"polythene-css-classes/drawer\";\n\n// const SHADOW_Z         = 1;\n\n// export const getElement = vnode =>\n//   vnode.attrs.element || \"div\";\n\n// const positionDrawer = (state, attrs) => {\n//   console.log(\"positionDrawer TODO\");\n//   if (isServer) {\n//     return;\n//   }\n// };\n\n// const showDrawer = (state, attrs) => {\n//   if (attrs.onChange) {\n//     attrs.onChange({ visible: false, transitioning: true });\n//   }\n//   positionDrawer(state, attrs);\n//   const transitions = attrs.transitions;\n//   const el = state.dom();\n//   return show(Object.assign({},\n//     attrs,\n//     transitions\n//       ? transitions.show(el, attrs)\n//       : {\n//         el,\n//         showClass: classes.visible\n//       }\n//   )).then(() => {\n//     if (attrs.onChange) {\n//       attrs.onChange({ visible: true, transitioning: false });\n//     }\n//     if (attrs.didShow) {\n//       attrs.didShow(attrs.id);\n//     }\n//     state.visible(false);\n//   });\n// };\n\n// const hideDrawer = (state, attrs) => {\n//   if (attrs.onChange) {\n//     attrs.onChange({ visible: true, transitioning: true });\n//   }\n//   const transitions = attrs.transitions;\n//   const el = state.dom();\n//   return hide(Object.assign({},\n//     attrs,\n//     transitions\n//       ? transitions.hide(el, attrs)\n//       : {\n//         el,\n//         showClass: classes.visible\n//       }\n//   )).then(() => {\n//     if (attrs.onChange) {\n//       attrs.onChange({ visible: false, transitioning: false });\n//     }\n//     if (attrs.didHide) {\n//       attrs.didHide(attrs.id);\n//     }\n//     state.visible(false);\n//   });\n// };\n\n// const handleSubscriptions = (vnode, which) => {\n//   const state = vnode.state;\n//   const attrs = vnode.attrs;\n\n//   if (which === \"mount\") {\n//     subscribe(\"resize\", state.update);\n//     subscribe(\"keydown\", state.handleEscape);\n//     setTimeout(() => {\n//       state.activateDismissTap();\n//       showDrawer(state, attrs);\n//     }, 0);\n//   } else {\n//     unsubscribe(\"resize\", state.update);\n//     unsubscribe(\"keydown\", state.handleEscape);\n//     state.deActivateDismissTap();\n//   }\n// };\n\n// export const getInitialState = (vnode, createStream) => {\n//   const dom = createStream(null);\n//   const visible = createStream(false);\n//   return {\n//     dom,\n//     visible,\n//     activateDismissTap: undefined, // set in onMount\n//     deActivateDismissTap: undefined, // set in onMount\n//     handleDismissTap: undefined, // set in onMount\n//     handleEscape: undefined, // set in onMount\n//     update: undefined, // set in onMount\n//     redrawOnUpdate: createStream.merge([visible])\n//   };\n// };\n\n// export const onMount = vnode => {\n//   if (!vnode.dom) {\n//     return;\n//   }\n//   const state = vnode.state;\n//   const attrs = vnode.attrs;\n//   state.dom(vnode.dom);\n\n//   if (!attrs.permanent) {\n//     state.handleDismissTap = e => {\n//       if (e.target === state.dom()) {\n//         return;\n//       }\n//       if (e.defaultPrevented) {\n//         hideDrawer(state, attrs);\n//       } else {\n//         hideDrawer(state, Object.assign({}, attrs, {\n//           hideDelay: 0\n//         }));\n//       }\n//     };\n\n//     state.update = () => {\n//       positionDrawer(state, attrs);\n//     };\n\n//     state.activateDismissTap = () => {\n//       if (isTouch) {\n//         document.addEventListener(\"touchstart\", state.handleDismissTap);\n//       } else {\n//         document.addEventListener(\"click\", state.handleDismissTap);\n//       }\n//     };\n\n//     state.deActivateDismissTap = () => {\n//       if (isTouch) {\n//         document.removeEventListener(\"touchstart\", state.handleDismissTap);\n//       } else {\n//         document.removeEventListener(\"click\", state.handleDismissTap);\n//       }\n//     };\n\n//     state.handleEscape = e => {\n//       if (e.key === \"Escape\" || e.key === \"Esc\") {\n//         hideDrawer(state, Object.assign(\n//           {},\n//           attrs,\n//           { hideDelay: 0 }\n//         ));\n//       }\n//     };\n\n//     handleSubscriptions(vnode, \"mount\");\n//   }\n// };\n\n// export const onUnMount = vnode => {\n//   const attrs = vnode.attrs;\n//   if (!attrs.permanent) {\n//     handleSubscriptions(vnode, \"unmount\");\n//   }\n// };\n\n// export const createProps = (vnode, { keys: k }) => {\n//   const state = vnode.state;\n//   const attrs = vnode.attrs;\n//   return Object.assign(\n//     {},\n//     filterSupportedAttributes(attrs, { remove: [\"style\"] }), // style set in content, and set by show/hide transition\n//     {\n//       className: [\n//         classes.component,\n//         attrs.containerSelector ? classes.hasContainer : null,\n//         attrs.permanent ? classes.permanent : null,\n//         attrs.backdrop ? classes.backdrop : null,\n//         attrs.tone === \"dark\" ? \"pe-dark-tone\" : null,\n//         attrs.tone === \"light\" ? \"pe-light-tone\" : null,\n//         attrs.className || attrs[k.class],\n//       ].join(\" \"),\n//       // click backdrop: close dialog\n//       [k.onclick]: e => {\n//         if (e.target !== state.el) {\n//           return;\n//         }\n//         if (attrs.modal) {\n//           // not allowed\n//           return;\n//         }\n//         hideDrawer(state, Object.assign({}, attrs, {\n//           hideDelay: 0\n//         }));\n//       }\n//     }\n//   );\n// };\n\n// export const createContent = (vnode, { renderer: h, keys: k, Shadow }) => {\n//   const attrs = vnode.attrs;\n//   const z = attrs.z !== undefined ? attrs.z : SHADOW_Z;\n//   return h(\"div\",\n//     {\n//       className: classes.content,\n//       [k.onclick]: e => e.preventDefault(),\n//       style: attrs.style\n//     },\n//     [\n//       z > 0 && h(Shadow, {\n//         z,\n//         animated: true\n//       }),\n//       attrs.content\n//         ? attrs.content\n//         : vnode.children\n//     ]\n//   );\n// };\n","\nexport default {\n  color_light_backdrop_background: \"rgba(0, 0, 0, .4)\",\n  color_dark_backdrop_background:  \"rgba(0, 0, 0, .5)\",\n};\n","const ANIMATION_DURATION = .5;\n\nconst show = ({ el, showDuration, showDelay }) => ({\n  el,\n  showDuration: showDuration || ANIMATION_DURATION,\n  showDelay:    showDelay || 0,\n  beforeShow:   () => el.style.opacity = 0,\n  show:         () => el.style.opacity = 1,\n});\n\nconst hide = ({ el, hideDuration, hideDelay }) => ({\n  el,\n  hideDuration: hideDuration || ANIMATION_DURATION,\n  hideDelay:    hideDelay || 0,\n  hide:         () => el.style.opacity = 0,\n});\n\nexport default {\n  show,\n  hide\n};\n"],"names":["createProps","vnode","k","keys","h","renderer","attrs","content","children","className","classes","component","class","join","createContent","ANIMATION_DURATION","show","el","showDuration","showDelay","style","opacity","hide","hideDuration","hideDelay"],"mappings":";;;;;;AACA,cAAe;aACD,mBADC;;;;eAKG,wBALH;;;;aASG;CATlB;;;;ACDA,AAEA;;;AAGA,AAAO,IAAMA,cAAc,SAAdA,WAAc,CAACC,KAAD,QAAqC;MAArBC,CAAqB,QAA3BC,IAA2B;MAARC,CAAQ,QAAlBC,QAAkB;;MACxDC,QAAQL,MAAMK,KAApB;MACMC,UAAUD,MAAMC,OAAN,GACZD,MAAMC,OADM,GAEZD,MAAME,QAAN,IAAkBP,MAAMO,QAF5B;SAGO,SACL,EADK,EAEL;aACWJ,EAAE,KAAF,EACP,EAAEK,WAAWC,QAAQH,OAArB,EADO,EAEPA,OAFO,CADX;qBAKmB,CACfG,QAAQC,SADO,EAEfL,MAAMG,SAAN,IAAmBH,MAAMJ,EAAEU,KAAR,CAFJ,EAGfC,IAHe,CAGV,GAHU;;;;;;;;;;;;GAPd,EAuBLP,KAvBK,CAAP;CALK;;AAgCP,AAAO,IAAMQ,gBAAgB,SAAhBA,aAAgB;SAAM,IAAN;CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCP,WAAe;mCACoB,mBADpB;kCAEoB;CAFnC;;ACDA,IAAMC,qBAAqB,EAA3B;;AAEA,IAAMC,OAAO,SAAPA,IAAO;MAAGC,EAAH,QAAGA,EAAH;MAAOC,YAAP,QAAOA,YAAP;MAAqBC,SAArB,QAAqBA,SAArB;SAAsC;UAAA;kBAEnCD,gBAAgBH,kBAFmB;eAGnCI,aAAa,CAHsB;gBAInC;aAAMF,GAAGG,KAAH,CAASC,OAAT,GAAmB,CAAzB;KAJmC;UAKnC;aAAMJ,GAAGG,KAAH,CAASC,OAAT,GAAmB,CAAzB;;GALH;CAAb;;AAQA,IAAMC,OAAO,SAAPA,IAAO;MAAGL,EAAH,SAAGA,EAAH;MAAOM,YAAP,SAAOA,YAAP;MAAqBC,SAArB,SAAqBA,SAArB;SAAsC;UAAA;kBAEnCD,gBAAgBR,kBAFmB;eAGnCS,aAAa,CAHsB;UAInC;aAAMP,GAAGG,KAAH,CAASC,OAAT,GAAmB,CAAzB;;GAJH;CAAb;;AAOA,kBAAe;YAAA;;CAAf;;;;;;;;;;;;;;"}