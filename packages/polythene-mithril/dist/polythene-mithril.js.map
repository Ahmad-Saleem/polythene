{"version":3,"file":"polythene-mithril.js","sources":["../src/core/keys.js","../src/core/renderer.js","../src/core/stateComponent.js","../src/core/statelessComponent.js","../src/ripple.js","../src/button.js"],"sourcesContent":["\nexport const keys = {\n  class:       \"class\",\n  formaction:  \"formaction\",\n  onblur:      \"onblur\",\n  onclick:     \"onclick\",\n  onfocus:     \"onfocus\",\n  onkeydown:   \"onkeydown\",\n  onkeyup:     \"onkeyup\",\n  onmousedown: \"onmousedown\",\n  onmouseout:  \"onmouseout\",\n  onmouseover: \"onmouseover\",\n  onmouseup:   \"onmouseup\",\n  tabindex:    \"tabindex\",\n};\n","import m from \"mithril\";\n\nexport const renderer = m;\n","import { renderer } from \"./renderer\";\nimport { keys } from \"./keys\";\n\nexport const stateComponent = ({\n  createContent,\n  createProps,\n  element,\n  onMount = () => {},\n  onUnmount = () => {},\n  state = {},\n}) => {\n\n  const updater = vnode => (attrs, value) => (\n    vnode.state[attrs] = value,\n    setTimeout(renderer.redraw, 0)\n  );\n\n  const oninit = vnode => \n    vnode.state = Object.assign(\n      vnode.state, \n      state\n    );\n\n  const view = vnode => {\n    const updateState = updater(vnode);\n    return renderer(\n      vnode.attrs.element || element,\n      createProps(vnode, { renderer, keys, updateState }),\n      [\n        vnode.attrs.before,\n        createContent(vnode, { renderer, keys, updateState }),\n        vnode.attrs.after\n      ]\n    );\n  };\n\n  return {\n    view,\n    oninit,\n    oncreate: onMount,\n    onremove: onUnmount,\n  };\n};\n","import { renderer } from \"./renderer\";\nimport { keys } from \"./keys\";\n\nexport const statelessComponent = ({\n  createContent,\n  createProps,\n  element,\n}) => {\n\n  const view = vnode => {\n    return renderer(\n      vnode.attrs.element || element,\n      createProps(vnode, { renderer, keys }),\n      [\n        vnode.attrs.before,\n        createContent(vnode, { renderer, keys }),\n        vnode.attrs.after\n      ]\n    );\n  };\n\n  return {\n    view\n  };\n};\n","import { stateComponent } from \"./core\";\nimport { ripple as component } from \"polythene-new-core\";\n\nexport const ripple = stateComponent(Object.assign({}, component));\n\nripple.theme = component.theme;\n","import { stateComponent } from \"./core\";\nimport { button as component } from \"polythene-new-core\";\nimport { ripple } from \"./ripple\";\n\nconst createProps = (vnode, args) => component.createProps(vnode, Object.assign(args, {ripple}));\nconst createContent = (vnode, args) => component.createContent(vnode, Object.assign(args, {ripple}));\n\nexport const button = stateComponent(Object.assign(\n  {},\n  component,\n  {\n    createProps,\n    createContent\n  }\n));\n\nbutton.theme = component.theme;\n"],"names":["keys","renderer","m","stateComponent","createContent","createProps","element","onMount","onUnmount","state","updater","attrs","value","vnode","setTimeout","redraw","oninit","_extends","updateState","before","after","statelessComponent","ripple","component","theme","args","button"],"mappings":"oVACO,IAAMA,UACE,mBACA,oBACA,iBACA,kBACA,oBACA,oBACA,sBACA,yBACA,yBACA,wBACA,qBACA,YCXFC,EAAWC,sKCCXC,EAAiB,eAC5BC,KAAAA,cACAC,IAAAA,YACAC,IAAAA,YACAC,QAAAA,aAAU,mBACVC,UAAAA,aAAY,mBACZC,MAAAA,kBAGMC,EAAU,kBAAS,UAACC,EAAOC,SAC/BC,GAAMJ,MAAME,GAASC,EACrBE,WAAWb,EAASc,OAAQ,KAGxBC,EAAS,kBACbH,GAAMJ,MAAQQ,EACZJ,EAAMJ,MACNA,gBAGS,eACLS,GAAcR,EAAQG,SACrBZ,GACLY,EAAMF,MAAML,SAAWA,EACvBD,EAAYQ,GAASZ,WAAUD,OAAMkB,iBAEnCL,EAAMF,MAAMQ,OACZf,EAAcS,GAASZ,WAAUD,OAAMkB,gBACvCL,EAAMF,MAAMS,2BAQNb,WACAC,ICrCDa,EAAqB,eAChCjB,KAAAA,cACAC,IAAAA,YACAC,IAAAA,oBAGa,kBACJL,GACLY,EAAMF,MAAML,SAAWA,EACvBD,EAAYQ,GAASZ,WAAUD,UAE7Ba,EAAMF,MAAMQ,OACZf,EAAcS,GAASZ,WAAUD,SACjCa,EAAMF,MAAMS,+KCbPE,EAASnB,EAAec,KAAkBM,UAEvDD,GAAOE,MAAQD,SAAUC,8KCDnBnB,EAAc,SAACQ,EAAOY,SAASF,UAAUlB,YAAYQ,EAAOI,EAAcQ,GAAOH,aACjFlB,EAAgB,SAACS,EAAOY,SAASF,UAAUnB,cAAcS,EAAOI,EAAcQ,GAAOH,aAE9EI,EAASvB,EAAec,KAEnCM,0CAOFG,GAAOF,MAAQD,SAAUC"}