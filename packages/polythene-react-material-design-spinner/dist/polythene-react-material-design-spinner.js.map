{"version":3,"file":"polythene-react-material-design-spinner.js","sources":["../../polythene-css-classes/material-design-spinner.js","../../polythene-css-classes/base-spinner.js","../src/index.js"],"sourcesContent":["\nexport default {\n  component:          \"pe-md-spinner\",\n\n  // elements\n  animation:          \"pe-md-spinner__animation\",\n  circle:             \"pe-md-spinner__circle\",\n  circleClipper:      \"pe-md-spinner__circle-clipper\",\n  circleClipperLeft:  \"pe-md-spinner__circle-clipper-left\",\n  circleClipperRight: \"pe-md-spinner__circle-clipper-right\",\n  gapPatch:           \"pe-md-spinner__gap-patch\",\n  layer:              \"pe-md-spinner__layer\",\n  layerN:             \"pe-md-spinner__layer-\",\n};\n\n","\nexport default {\n  component:   \"pe-spinner\",\n\n  // elements\n  animation:   \"pe-spinner__animation\",\n  placeholder: \"pe-spinner__placeholder\",\n\n  // states\n  animated:    \"pe-spinner--animated\",\n  fab:         \"pe-spinner--fab\",\n  large:       \"pe-spinner--large\",\n  medium:      \"pe-spinner--medium\",\n  permanent:   \"pe-spinner--permanent\",\n  raised:      \"pe-spinner--raised\",\n  regular:     \"pe-spinner--regular\",\n  singleColor: \"pe-spinner--single-color\",\n  small:       \"pe-spinner--small\",\n  visible:     \"pe-spinner--visible\",\n};\n","import { StateComponent, renderer as h } from \"polythene-react-base\";\nimport { Conditional } from \"polythene-core\";\nimport { coreMaterialDesignSpinner as core } from \"polythene-core-material-design-spinner\";\nimport classes from \"polythene-css-classes/material-design-spinner\";\nimport { BaseSpinner } from \"polythene-react-base-spinner\";\nimport baseSpinnerClasses from \"polythene-css-classes/base-spinner\";\n\nconst SpinnerInstance = StateComponent(Object.assign(\n  {},\n  core,\n  { component: BaseSpinner }\n));\n\nconst SpinnerToggle = StateComponent(Conditional);\nSpinnerToggle.displayName = \"MaterialDesignSpinnerToggle\";\n\nexport const MaterialDesignSpinner = props => (\n  h(SpinnerToggle, Object.assign(\n    {},\n    props,\n    {\n      placeholderClassName: baseSpinnerClasses.placeholder,\n      instance: SpinnerInstance\n    }\n  ))\n);\n\nMaterialDesignSpinner.classes = classes;\nMaterialDesignSpinner.displayName = \"MaterialDesignSpinner\";\n"],"names":["SpinnerInstance","StateComponent","core","component","BaseSpinner","SpinnerToggle","Conditional","displayName","MaterialDesignSpinner","h","props","baseSpinnerClasses","placeholder","classes"],"mappings":";;;;;;AACA,cAAe;aACO,eADP;;;aAIO,0BAJP;UAKO,uBALP;iBAMO,+BANP;qBAOO,oCAPP;sBAQO,qCARP;YASO,0BATP;SAUO,sBAVP;UAWO;CAXtB;;ACAA,yBAAe;aACA,YADA;;;aAIA,uBAJA;eAKA,yBALA;;;YAQA,sBARA;OASA,iBATA;SAUA,mBAVA;UAWA,oBAXA;aAYA,uBAZA;UAaA,oBAbA;WAcA,qBAdA;eAeA,0BAfA;SAgBA,mBAhBA;WAiBA;CAjBf;;;;ACDA,AAOA,IAAMA,kBAAkBC,kCAAe,SACrC,EADqC,EAErCC,4DAFqC,EAGrC,EAAEC,WAAWC,qCAAb,EAHqC,CAAf,CAAxB;;AAMA,IAAMC,gBAAgBJ,kCAAeK,yBAAf,CAAtB;AACAD,cAAcE,WAAd,GAA4B,6BAA5B;;AAEA,AAAO,IAAMC,wBAAwB,SAAxBA,qBAAwB;SACnCC,4BAAEJ,aAAF,EAAiB,SACf,EADe,EAEfK,KAFe,EAGf;0BACwBC,mBAAmBC,WAD3C;cAEYZ;GALG,CAAjB,CADmC;CAA9B;;AAWPQ,sBAAsBK,OAAtB,GAAgCA,OAAhC;AACAL,sBAAsBD,WAAtB,GAAoC,uBAApC;;;;;;;;;;;;"}