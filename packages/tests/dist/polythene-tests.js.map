{"version":3,"file":"polythene-tests.js","sources":["../src/button/tests-generic.js","../src/button/tests-mithril.js","../src/theme/tests-mithril.js","../src/theme/tests-generic.js","../src/button/tests-react.js","../index.js"],"sourcesContent":["\nexport default ({ button }) => {\n  button.theme(\".tests-button-themed-button\", {\n    color_light_background: \"#2196F3\",\n    color_dark_background: \"#2196F3\",\n    color_light_text: \"#fff\"\n  });\n\n  button.theme(\".blue-on-dark-button\", {\n    color_dark_text: \"#2196F3\"\n  });\n\n  button.theme(\".tests-button-bordered-button\", {\n    color_light_text: \"#673ab7\",\n    color_light_border: \"#673ab7\",\n    color_dark_text: \"yellow\",\n    color_dark_border: \"yellow\"\n  });\n  return [\n    {\n      name: \"Option: label\",\n      component: button,\n      attrs: {\n        label: \"Label\"\n      }\n    },\n    {\n      name: \"Themed button: (option: borders)\",\n      component: button,\n      attrs: {\n        label: \"Borders\",\n        className: \"tests-button-bordered-button\",\n        borders: true\n      }\n    },\n    {\n      name: \"Themed button (colors)\",\n      component: button,\n      attrs: {\n        label: \"Themed button\",\n        className: \"tests-button-themed-button\"\n      }\n    },\n    {\n      name: \"Option: style (colors)\",\n      component: button,\n      attrs: {\n        label: \"Styled\",\n        style: {\n          backgroundColor: \"#EF6C00\",\n          color: \"#fff\"\n        }\n      }\n    },\n    {\n      name: \"Option: wash (false)\",\n      interactive: true,\n      component: button,\n      attrs: {\n        label: \"No wash\",\n        wash: false\n      }\n    },\n    {\n      name: \"Option: ink (false)\",\n      interactive: true,\n      component: button,\n      attrs: {\n        label: \"No ink\",\n        ink: false\n      }\n    },\n    {\n      name: \"Option: disabled (true)\",\n      interactive: true,\n      component: button,\n      attrs: {\n        label: \"Disabled\",\n        disabled: true\n      }\n    },\n    {\n      name: \"Option: disabled (false)\",\n      interactive: true,\n      component: button,\n      attrs: {\n        label: \"Not disabled\",\n        disabled: false\n      }\n    },\n    {\n      name: \"Option: selected\",\n      component: button,\n      attrs: {\n        label: \"Selected\",\n        selected: true\n      }\n    },\n    {\n      name: \"Option: formaction\",\n      component: button,\n      attrs: {\n        label: \"Form action\",\n        formaction: \"http://polythene.js.org\"\n      }\n    },\n    {\n      name: \"Option: url (without oncreate)\",\n      interactive: true,\n      component: button,\n      attrs: {\n        label: \"Go to /shadow\",\n        url: {\n          href: \"/shadow\"\n        }\n      }\n    },\n    {\n      name: \"Option: inactive (false)\",\n      interactive: true,\n      component: button,\n      attrs: {\n        label: \"Not inactive\",\n        inactive: false\n      }\n    },\n    {\n      name: \"Option: inactive (true)\",\n      interactive: true,\n      component: button,\n      attrs: {\n        label: \"Inactive\",\n        inactive: true\n      }\n    },\n    {\n      name: \"Option: inactivate (2)\",\n      interactive: true,\n      component: button,\n      attrs: {\n        label: \"Inactivated for 2s\",\n        inactivate: 2\n      }\n    },\n\n    // Dark tone class\n    \n    {\n      name: \"Option: label -- dark theme class\",\n      className: \"pe-dark-tone\",\n      component: button,\n      attrs: {\n        label: \"Label\"\n      }\n    },\n    {\n      name: \"Option: tone \\\"dark\\\" -- dark theme class\",\n      className: \"test-dark-theme\",\n      component: button,\n      attrs: {\n        label: \"Label\",\n        tone: \"dark\"\n      }\n    },\n    {\n      name: \"Themed button -- dark theme class\",\n      className: \"pe-dark-tone\",\n      component: button,\n      attrs: {\n        label: \"Themed button\",\n        className: \"tests-button-themed-button\"\n      }\n    },\n    {\n      name: \"Themed button blue on dark -- dark theme class\",\n      className: \"pe-dark-tone\",\n      component: button,\n      attrs: {\n        label: \"Blue on dark button\",\n        className: \"blue-on-dark-button\"\n      }\n    },\n    {\n      name: \"Themed button: (option: borders) -- dark theme class\",\n      className: \"pe-dark-tone\",\n      component: button,\n      attrs: {\n        label: \"Borders dark theme\",\n        className: \"tests-button-bordered-button\",\n        borders: true\n      }\n    },\n  ];\n};\n\n","import { renderer } from \"polythene-mithril-core\";\nimport button from \"polythene-mithril-button\";\nimport genericTests from \"./tests-generic\";\n\nconst mithrilTests = ({ button, renderer: h }) => {\n  return [\n    {\n      name: \"Dark tone class + light theme class\",\n      class: \"pe-dark-tone\",\n      component: {\n        view: () => h(\".pe-light-tone\", {\n          style: { background: \"#fff\" }\n        }, [\n          h(button, {\n            label: \"Normal\",\n          }),\n          h(button, {\n            label: \"Disabled\",\n            disabled: true\n          }),\n          h(button, {\n            label: \"Theme\",\n            class: \"tests-button-themed-button\"\n          })\n        ])\n      }\n    },\n    {\n      name: \"Dark tone class + light tone\",\n      class: \"test-dark-theme\",\n      component: {\n        view: () => h(\"div\", {\n          style: { background: \"#fff\" }\n        }, [\n          h(button, {\n            label: \"Normal\",\n            tone: \"light\"\n          }),\n          h(button, {\n            label: \"Disabled\",\n            disabled: true,\n            tone: \"light\"\n          }),\n          h(button, {\n            label: \"Theme\",\n            class: \"tests-button-themed-button\",\n            tone: \"light\"\n          })\n        ])\n      }\n    },\n    {\n      name: \"Option: url (with oncreate)\",\n      interactive: true,\n      component: button,\n      attrs: {\n        label: \"Go to /#/shadow\",\n        url: {\n          href: \"/shadow\",\n          oncreate: h.route.link\n        }\n      }\n    },\n    {\n      name: \"onbeforeupdate\",\n      interactive: true,\n      exclude: true,\n      component: {\n        oninit: vnode =>\n          vnode.state.updated = 0,\n        view: vnode => [\n          h(\"div\", `Updated: ${vnode.state.updated}`),\n          h(button, {\n            label: \"Button\",\n            onbeforeupdate: () => vnode.state.updated++\n          })\n        ]\n      }\n    },\n    {\n      name: \"Option: events (onclick)\",\n      interactive: true,\n      exclude: true,\n      component: {\n        oninit: vnode =>\n          vnode.state.clicked = 0,\n        view: vnode => [\n          h(\"div\", `onclick called: ${vnode.state.clicked}`),\n          h(button, {\n            label: \"Button\",\n            events: {\n              onclick: () => vnode.state.clicked++\n            }\n          })\n        ]\n      }\n    },\n    {\n      name: \"Key down (after having focus) results in click\",\n      interactive: true,\n      exclude: true,\n      component: {\n        oninit: vnode =>\n          vnode.state.clickCount = 0,\n        view: vnode => [\n          h(\"div\", `onclick called: ${vnode.state.clickCount}`),\n          h(button, {\n            label: \"Button\",\n            events: {\n              onclick: () => vnode.state.clickCount++\n            }\n          })\n        ]\n      }\n    },\n  ];\n};\n\nexport default []\n  .concat(genericTests({ button, renderer }))\n  .concat(mithrilTests({ button, renderer }));\n","/*\nTesting 2 theming methods:\n1. Style variables\n2. Deriving components\n*/\n\nimport { renderer } from \"polythene-mithril-core\";\nimport button from \"polythene-mithril-button\";\nimport fab from \"polythene-fab\";\nimport icon from \"polythene-icon\";\nimport iconButton from \"polythene-icon-button\";\nimport list from \"polythene-list\";\nimport listTile from \"polythene-list-tile\";\nimport genericTests from \"./tests-generic\"; // [1]\n\nconst h = renderer;\n\n // [2]\nconst secondaryButton = {\n  theme: button.theme,\n  view: vnode => h(button, {\n    className: \"tests-custom-theme-secondary-button\",\n    borders: true,\n    ...vnode.attrs\n  })\n};\nsecondaryButton.theme(\".tests-custom-theme-secondary-button\", {\n  color_light_border: \"#ddd\",\n  color_light_background: \"#fff\"\n});\n\nconst mithrilTests = () => [\n  {\n    name: \"Theme with deriving component: button (should be bordered with white background)\",\n    component: secondaryButton,\n    attrs: {\n      label: \"Bordered button\"\n    }\n  },\n];\n\nexport default []\n  .concat(genericTests({ button, fab, icon, iconButton, list, listTile, renderer }))\n  .concat(mithrilTests());\n","// import iconAlarm from \"mmsvg/google/msvg/action/alarm-add\";\n\nexport default ({ button, fab, icon, iconButton, list, listTile/*, renderer: h*/ }) => {\n  button.theme(\".tests-custom-theme-blue-button\", {\n    color_light_background: \"#2196F3\",\n    color_light_text: \"#fff\"\n  });\n\n  button.theme(\".tests-custom-theme-red-button\", {\n    color_light_background: \"#ff0000\",\n    color_light_text: \"#fff\"\n  });\n\n  icon.theme(\".tests-custom-theme-red-icon\", {\n    color_light: \"red\"\n  });\n\n  fab.theme(\".tests-custom-theme-red-fab\", {\n    color_light_background: \"#ff0000\",\n    color_light: \"#fff\"\n  });\n\n  iconButton.theme(\".tests-custom-theme-large-icon-button\", {\n    padding: 50,\n    color_background: \"#fff\"\n  });\n\n  list.theme(\".tests-custom-theme-blue-list\", {\n    color_light_border: \"#2196F3\"\n  });\n\n  listTile.theme(\".tests-custom-theme-red-list-tile\", {\n    color_light_title: \"red\"\n  });\n\n  return [\n    {\n      name: \"Theme with style variables: button (should be blue)\",\n      component: button,\n      attrs: {\n        className: \"tests-custom-theme-blue-button\",\n        label: \"Blue button\"\n      }\n    },\n    {\n      name: \"Theme with style variables: button (should be red)\",\n      component: button,\n      attrs: {\n        className: \"tests-custom-theme-red-button\",\n        label: \"Red button\"\n      }\n    },\n    {\n      name: \"No theme: normal button\",\n      component: button,\n      attrs: {\n        label: \"Unaffected button\"\n      }\n    },\n    // {\n    //   name: \"Theme with theme file (global primary color): FAB (should be orange)\",\n    //   component: fab,\n    //   attrs: {\n    //     icon: {\n    //       msvg: iconAlarm\n    //     }\n    //   }\n    // },\n    // {\n    //   name: \"Theme with style variables: FAB (should be red)\",\n    //   component: fab,\n    //   attrs: {\n    //     className: \"tests-custom-theme-red-fab\",\n    //     icon: {\n    //       msvg: iconAlarm\n    //     }\n    //   }\n    // },\n    // {\n    //   name: \"Theme with style variables: icon (should be red)\",\n    //   component: icon,\n    //   attrs: {\n    //     className: \"tests-custom-theme-red-icon\",\n    //     msvg: iconAlarm\n    //   }\n    // },\n    // {\n    //   name: \"Theme with style variables: icon button (should have large padding)\",\n    //   component: iconButton,\n    //   attrs: {\n    //     className: \"tests-custom-theme-large-icon-button\",\n    //     icon: {\n    //       msvg: iconAlarm\n    //     }\n    //   }\n    // },\n    // {\n    //   name: \"Theme with style variables: list (should have blue borders)\",\n    //   component: list,\n    //   attrs: {\n    //     className: \"tests-custom-theme-blue-list\",\n    //     borders: true,\n    //     tiles: [\n    //       h(listTile, {\n    //         title: \"Jennifer Barker\",\n    //         subtitle: \"Starting post doc\"\n    //       }),\n    //       h(listTile, {\n    //         title: \"Ali Connors\",\n    //         subtitle: \"Brunch this weekend?\"\n    //       }),\n    //       h(listTile, {\n    //         title: \"Mike Eden\",\n    //         subtitle: \"Watch a game\"\n    //       })\n    //     ]\n    //   }\n    // },\n    // {\n    //   name: \"Theme with style variables: list tile (should have red titles)\",\n    //   component: list,\n    //   attrs: {\n    //     tiles: [\n    //       h(listTile, {\n    //         className: \"tests-custom-theme-red-list-tile\",\n    //         title: \"Jennifer Barker\",\n    //         subtitle: \"Starting post doc\"\n    //       }),\n    //       h(listTile, {\n    //         className: \"tests-custom-theme-red-list-tile\",\n    //         title: \"Ali Connors\",\n    //         subtitle: \"Brunch this weekend?\"\n    //       }),\n    //       h(listTile, {\n    //         className: \"tests-custom-theme-red-list-tile\",\n    //         title: \"Mike Eden\",\n    //         subtitle: \"Watch a game\"\n    //       })\n    //     ]\n    //   }\n    // }\n  ];\n};\n","import { renderer } from \"polythene-react-core\";\nimport button from \"polythene-react-button\";\nimport tests from \"./tests-generic\";\n\nexport default tests({ button, renderer });\n","\nimport * as fromMithrilTests from \"./src/mithril-tests\";\nexport const mithrilTests = fromMithrilTests;\n\nimport * as fromReactTests from \"./src/react-tests\";\nexport const reactTests = fromReactTests;\n"],"names":["button","theme","concat","genericTests","renderer","h","background","route","link","vnode","state","updated","clicked","clickCount","secondaryButton","attrs","fab","icon","iconButton","list","listTile","tests","mithrilTests","fromMithrilTests","reactTests","fromReactTests"],"mappings":"slCACA,sBAAkBA,KAAAA,gBACTC,MAAM,sDACa,gCACD,2BACL,WAGbA,MAAM,wCACM,cAGZA,MAAM,kDACO,6BACE,0BACH,2BACE,kBAIX,0BACKD,eAEF,gBAIH,6CACKA,eAEF,oBACI,wCACF,UAIL,mCACKA,eAEF,0BACI,qCAIP,mCACKA,eAEF,gCAEY,gBACV,gBAKL,oCACO,YACFA,eAEF,gBACD,UAIF,mCACO,YACFA,eAEF,cACF,UAID,uCACO,YACFA,eAEF,qBACG,UAIN,wCACO,YACFA,eAEF,yBACG,UAIN,6BACKA,eAEF,qBACG,UAIN,+BACKA,eAEF,yBACK,kCAIR,8CACO,YACFA,eAEF,0BAEC,mBAKJ,wCACO,YACFA,eAEF,yBACG,UAIN,uCACO,YACFA,eAEF,qBACG,UAIN,sCACO,YACFA,eAEF,gCACK,UAOR,8CACK,yBACAA,eAEF,gBAIH,oDACK,4BACAA,eAEF,aACD,eAIF,8CACK,yBACAA,eAEF,0BACI,qCAIP,2DACK,yBACAA,eAEF,gCACI,8BAIP,iEACK,yBACAA,eAEF,+BACI,wCACF,WCtEdE,OAAOC,GAAeH,SAAQI,uBAC9BF,OApHkB,eAAGF,KAAAA,OAAkBK,IAAVD,sBAGpB,4CACC,+BAEC,iBAAMC,GAAE,yBACHC,WAAY,UAErBD,EAAEL,SACO,WAETK,EAAEL,SACO,qBACG,IAEZK,EAAEL,SACO,cACA,0CAMP,qCACC,kCAEC,iBAAMK,GAAE,cACHC,WAAY,UAErBD,EAAEL,SACO,cACD,UAERK,EAAEL,SACO,qBACG,OACJ,UAERK,EAAEL,SACO,cACA,kCACD,qBAMN,2CACO,YACFA,eAEF,4BAEC,mBACIK,EAAEE,MAAMC,cAKhB,8BACO,WACJ,oBAEC,kBACNC,GAAMC,MAAMC,QAAU,QAClB,mBACJN,EAAE,kBAAmBI,EAAMC,MAAMC,SACjCN,EAAEL,SACO,wBACS,iBAAMS,GAAMC,MAAMC,uBAMlC,wCACO,WACJ,oBAEC,kBACNF,GAAMC,MAAME,QAAU,QAClB,mBACJP,EAAE,yBAA0BI,EAAMC,MAAME,SACxCP,EAAEL,SACO,yBAEI,iBAAMS,GAAMC,MAAME,wBAO7B,8DACO,WACJ,oBAEC,kBACNH,GAAMC,MAAMG,WAAa,QACrB,mBACJR,EAAE,yBAA0BI,EAAMC,MAAMG,YACxCR,EAAEL,SACO,yBAEI,iBAAMS,GAAMC,MAAMG,wBAWhBb,SAAQI,2LCzG3BC,EAAID,WAGJU,SACGd,EAAOC,WACR,kBAASI,GAAEL,eACJ,+CACF,GACNS,EAAMM,SAGbD,GAAgBb,MAAM,2DACA,8BACI,QAG1B,UAWGC,sBCxCeF,KAAAA,OAAQgB,IAAAA,IAAKC,IAAAA,KAAMC,IAAAA,WAAYC,IAAAA,KAAMC,IAAAA,kBAC9CnB,MAAM,0DACa,2BACN,WAGbA,MAAM,yDACa,2BACN,WAGfA,MAAM,4CACI,UAGXA,MAAM,sDACgB,sBACX,WAGJA,MAAM,iDACN,oBACS,WAGfA,MAAM,oDACW,cAGbA,MAAM,uDACM,eAKX,gEACKD,mBAEE,uCACJ,sBAIH,+DACKA,mBAEE,sCACJ,qBAIH,oCACKA,eAEF,yBDdUA,SAAQgB,MAAKC,OAAMC,aAAYC,OAAMC,WAAUhB,uBACrEF,OAZkB,wBAEX,6FACKY,eAEF,+DEhCEO,GAAQrB,SAAQI,kDCFlBkB,EAAeC,EAGfC,EAAaC"}