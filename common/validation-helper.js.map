{"version":3,"sources":["validation-helper.es6"],"names":[],"mappings":";;;;;;kBACe,UAAC,IAAD,EAAU;AACrB,QAAM,SAAS,KAAK,OAAL,IAAgB,IAAhB,CADM;AAErB,QAAM,cAAc,KAAK,OAAL,IAAgB,SAAhB,CAFC;;AAIrB,QAAM,cAAc,EAAd,CAJe;;AAMrB,QAAM,SAAS,SAAT,MAAS,CAAC,CAAD,EAAI,WAAJ,EAAoB;AAC/B,UAAE,cAAF,GAD+B;AAE/B,YAAM,oBAAoB,iBAApB,CAFyB;AAG/B,YAAI,sBAAsB,SAAtB,EAAiC;AACjC,gBAAI,YAAY,iBAAZ,EAA+B,MAA/B,CAAJ,EAA4C;AACxC,4BAAY,iBAAZ,EAA+B,MAA/B,EAAuC,KAAvC,GADwC;aAA5C;SADJ,MAIO;AACH,wBAAY,CAAZ,EADG;SAJP;KAHW,CANM;;AAkBrB,QAAM,WAAW,SAAX,QAAW,CAAC,EAAD,EAAQ;AACrB,aAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,YAAY,MAAZ,EAAoB,GAAxC,EAA6C;AACzC,gBAAI,YAAY,CAAZ,EAAe,MAAf,MAA2B,EAA3B,EAA+B;AAC/B,uBAAO,CAAP,CAD+B;aAAnC;SADJ;KADa,CAlBI;;AA0BrB,QAAM,kBAAkB,SAAlB,eAAkB,GAAM;AAC1B,aAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,YAAY,MAAZ,EAAoB,GAAxC,EAA6C;AACzC,gBAAI,YAAY,CAAZ,EAAe,WAAf,CAAJ,EAAiC;AAC7B,uBAAO,CAAP,CAD6B;aAAjC;SADJ;KADoB,CA1BH;;AAkCrB,QAAM,SAAS,SAAT,MAAS,CAAC,KAAD,EAAW;AACtB,YAAM,QAAQ,SAAS,MAAM,MAAN,CAAT,CAAR,CADgB;AAEtB,YAAI,UAAU,SAAV,EAAqB;AACrB,wBAAY,IAAZ,CAAiB,KAAjB,EADqB;SAAzB,MAEO;AACH,wBAAY,KAAZ,IAAqB,KAArB,CADG;SAFP;KAFW,CAlCM;;AA2CrB,WAAO;AACH,sBADG;AAEH,sBAFG;KAAP,CA3CqB;CAAV","file":"validation-helper.js","sourcesContent":["\nexport default (opts) => {\n    const elProp = opts.element || 'el';\n    const invalidProp = opts.invalid || 'invalid';\n\n    const fieldStates = [];\n\n    const submit = (e, onValidated) => {\n        e.preventDefault();\n        const firstInvalidIndex = getInvalidIndex();\n        if (firstInvalidIndex !== undefined) {\n            if (fieldStates[firstInvalidIndex][elProp]) {\n                fieldStates[firstInvalidIndex][elProp].focus();\n            }\n        } else {\n            onValidated(e);\n        }\n    };\n\n    const getIndex = (el) => {\n        for (let i = 0; i < fieldStates.length; i++) {\n            if (fieldStates[i][elProp] === el) {\n                return i;\n            }\n        }\n    };\n\n    const getInvalidIndex = () => {\n        for (let i = 0; i < fieldStates.length; i++) {\n            if (fieldStates[i][invalidProp]) {\n                return i;\n            }\n        }\n    };\n\n    const update = (state) => {\n        const index = getIndex(state[elProp]);\n        if (index === undefined) {\n            fieldStates.push(state);\n        } else {\n            fieldStates[index] = state;\n        }\n    };\n\n    return {\n        submit,\n        update\n    };\n};\n"]}