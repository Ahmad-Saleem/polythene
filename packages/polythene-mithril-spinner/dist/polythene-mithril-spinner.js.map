{"version":3,"file":"polythene-mithril-spinner.js","sources":["../src/base/index.js","../src/ios/index.js","../src/material-design/index.js","../src/material-design-progress/index.js"],"sourcesContent":["import { StateComponent } from \"polythene-mithril-base\";\nimport { coreBaseSpinner as core } from \"polythene-core-spinner\";\nimport { Shadow } from \"polythene-mithril-shadow\";\n\nexport const BaseSpinner = StateComponent(Object.assign(\n  {},\n  core,\n  {\n    createContent: (vnode, args) => core.createContent(vnode, Object.assign(args, { Shadow })),\n  }\n));\n\nBaseSpinner.displayName = \"BaseSpinner\";\nBaseSpinner.classes = core.classes;\n\n","import { StateComponent, renderer as h } from \"polythene-mithril-base\";\nimport { Conditional } from \"polythene-core\";\nimport { coreIOSSpinner as core } from \"polythene-core-spinner\";\nimport { BaseSpinner } from \"../base\";\n\nconst SpinnerInstance = StateComponent(Object.assign(\n  {},\n  core,\n  { component: BaseSpinner }\n));\n\nconst SpinnerToggle = StateComponent(Conditional);\nSpinnerToggle.displayName = \"SpinnerToggle\";\n\nexport const IOSSpinner = {\n  view: vnode =>\n    h(SpinnerToggle, Object.assign({},\n      vnode.attrs,\n      {\n        placeholderClassName: BaseSpinner.classes.placeholder,\n        instance: SpinnerInstance\n      }\n    ))\n};\n\nIOSSpinner.classes = core.classes;\nIOSSpinner.displayName = \"IOSSpinner\";\n","import { StateComponent, renderer as h } from \"polythene-mithril-base\";\nimport { Conditional } from \"polythene-core\";\nimport { coreMaterialDesignSpinner as core } from \"polythene-core-spinner\";\nimport { BaseSpinner } from \"../base\";\n\nconst SpinnerInstance = StateComponent(Object.assign(\n  {},\n  core,\n  { component: BaseSpinner }\n));\n\nconst SpinnerToggle = StateComponent(Conditional);\nSpinnerToggle.displayName = \"SpinnerToggle\";\n\nexport const MaterialDesignSpinner = {\n  view: vnode =>\n    h(SpinnerToggle, Object.assign({},\n      vnode.attrs,\n      {\n        placeholderClassName: BaseSpinner.classes.placeholder,\n        instance: SpinnerInstance\n      }\n    ))\n};\n\nMaterialDesignSpinner.classes = core.classes;\nMaterialDesignSpinner.displayName = \"MaterialDesignSpinner\";\n","import { StateComponent, renderer as h } from \"polythene-mithril-base\";\nimport { Conditional } from \"polythene-core\";\nimport { coreMaterialDesignProgressSpinner as core } from \"polythene-core-spinner\";\nimport { BaseSpinner } from \"../base\";\n\nconst SpinnerInstance = StateComponent(Object.assign(\n  {},\n  core,\n  { component: BaseSpinner }\n));\n\nconst SpinnerToggle = StateComponent(Conditional);\nSpinnerToggle.displayName = \"SpinnerToggle\";\n\nexport const MaterialDesignProgressSpinner = {\n  view: vnode =>\n    h(SpinnerToggle, Object.assign({},\n      vnode.attrs,\n      {\n        placeholderClassName: BaseSpinner.classes.placeholder,\n        instance: SpinnerInstance\n      }\n    ))\n};\n\nMaterialDesignProgressSpinner.classes = core.classes;\nMaterialDesignProgressSpinner.displayName = \"MaterialDesignProgressSpinner\";\n"],"names":["BaseSpinner","StateComponent","_extends","core","vnode","args","createContent","Shadow","displayName","classes","SpinnerInstance","component","SpinnerToggle","Conditional","IOSSpinner","h","attrs","placeholder","MaterialDesignSpinner","MaterialDesignProgressSpinner"],"mappings":"srBAIaA,EAAcC,iBAAeC,KAExCC,iCAEiB,SAACC,EAAOC,SAASF,mBAAKG,cAAcF,EAAOF,EAAcG,GAAQE,sBAIpFP,GAAYQ,YAAc,cAC1BR,EAAYS,QAAUN,kBAAKM,gLCRrBC,EAAkBT,iBAAeC,KAErCC,kBACEQ,UAAWX,KAGTY,EAAgBX,iBAAeY,cACrCD,GAAcJ,YAAc,eAE5B,IAAaM,SACL,kBACJC,YAAEH,EAAeV,KACfE,EAAMY,4BAEkBhB,EAAYS,QAAQQ,qBAChCP,MAKlBI,GAAWL,QAAUN,iBAAKM,QAC1BK,EAAWN,YAAc,qLCrBnBE,EAAkBT,iBAAeC,KAErCC,6BACEQ,UAAWX,KAGTY,EAAgBX,iBAAeY,cACrCD,GAAcJ,YAAc,eAE5B,IAAaU,SACL,kBACJH,YAAEH,EAAeV,KACfE,EAAMY,4BAEkBhB,EAAYS,QAAQQ,qBAChCP,MAKlBQ,GAAsBT,QAAUN,4BAAKM,QACrCS,EAAsBV,YAAc,gMCrB9BE,EAAkBT,iBAAeC,KAErCC,qCACEQ,UAAWX,KAGTY,EAAgBX,iBAAeY,cACrCD,GAAcJ,YAAc,eAE5B,IAAaW,SACL,kBACJJ,YAAEH,EAAeV,KACfE,EAAMY,4BAEkBhB,EAAYS,QAAQQ,qBAChCP,MAKlBS,GAA8BV,QAAUN,oCAAKM,QAC7CU,EAA8BX,YAAc"}