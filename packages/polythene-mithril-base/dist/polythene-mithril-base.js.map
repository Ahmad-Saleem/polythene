{"version":3,"file":"polythene-mithril-base.js","sources":["../src/keys.js","../src/renderer.js","../src/statefulComponent.js","../src/viewComponent.js","../src/samStateComponent.js"],"sourcesContent":["\nexport const keys = {\n  class:       \"class\",\n  formaction:  \"formaction\",\n  onblur:      \"onblur\",\n  onclick:     \"onclick\",\n  onfocus:     \"onfocus\",\n  onkeydown:   \"onkeydown\",\n  onkeyup:     \"onkeyup\",\n  onmousedown: \"onmousedown\",\n  onmouseout:  \"onmouseout\",\n  onmouseover: \"onmouseover\",\n  onmouseup:   \"onmouseup\",\n  tabindex:    \"tabindex\",\n};\n\nexport const normalizeKey = key => key.toLowerCase();\n","import m from \"mithril\";\n\nexport const renderer = m;\n","import { renderer } from \"./renderer\";\nimport { keys } from \"./keys\";\n\nconst requiresKeys = false;\n\nexport const statefulComponent = ({\n  createContent,\n  createProps,\n  element,\n  getInitialState = () => ({}),\n  onMount = () => {},\n  onUnmount = () => {},\n  state = {},\n}) => {\n\n  const createVirtualNode = vnode => \n    Object.assign(\n      {},\n      vnode,\n      vnode.dom ? { dom: vnode.dom } : null,\n      {\n        updateState: updater(vnode)\n      }\n    );\n\n  const updater = vnode => (attr, value, callback) => {\n    vnode.state[attr] = value;\n    setTimeout(() => {\n      renderer.redraw();\n      if (callback) {\n        callback();\n      }\n    }, 0);\n  };\n\n  const oninit = vnode => \n    vnode.state = Object.assign(\n      vnode.state, \n      state,\n      getInitialState(vnode.attrs)\n    );\n\n  const view = vnode => {\n    const vnode1 = createVirtualNode(vnode);\n    return renderer(\n      vnode.attrs.element || element,\n      createProps(vnode1, { renderer, requiresKeys, keys }),\n      [\n        vnode.attrs.before,\n        createContent(vnode1, { renderer, requiresKeys, keys }),\n        vnode.attrs.after\n      ]\n    );\n  };\n\n  return {\n    view,\n    oninit: vnode => oninit(createVirtualNode(vnode)),\n    oncreate: vnode => onMount(createVirtualNode(vnode)),\n    onremove: vnode => onUnmount(createVirtualNode(vnode))\n  };\n};\n","import { renderer } from \"./renderer\";\nimport { keys } from \"./keys\";\n\nconst requiresKeys = false;\n\nexport const viewComponent = ({\n  createContent,\n  createProps,\n  element,\n  renderView,\n  onMount,\n  onUnmount,\n}) => {\n\n  const view = vnode => {\n    return renderer(\n      vnode.attrs.element || element,\n      createProps(vnode, { renderer, requiresKeys, keys }),\n      [\n        vnode.attrs.before,\n        createContent(vnode, { renderer, requiresKeys, keys }),\n        vnode.attrs.after\n      ]\n    );\n  };\n\n  return {\n    view: renderView || view,\n    oncreate: onMount,\n    onremove: onUnmount\n  };\n};\n","import { renderer } from \"./renderer\";\nimport { keys } from \"./keys\";\nimport { getUpdate, getModels } from \"polythene-core\";\n\nconst requiresKeys = false;\n\nexport const samStateComponent = ({\n  createContent,\n  createProps,\n  getInitialState,\n  getUpdates,\n  element,\n  renderView,\n  onInit,\n  onMount,\n  onUnmount,\n}) => {\n\n  const oninit = vnode => {\n    const update = getUpdate();\n    const initialModel = getInitialState(vnode.attrs);\n    vnode.state.updates = getUpdates(update);\n    const models = getModels(initialModel, update, () => renderer.redraw());\n    models.map(model => vnode.state.model = model);\n  };\n\n  const view = vnode =>\n    renderer(\n      vnode.attrs.element || element,\n      createProps(vnode, { renderer, requiresKeys, keys }),\n      [\n        vnode.attrs.before,\n        createContent(vnode, { renderer, requiresKeys, keys }),\n        vnode.attrs.after\n      ]\n    );\n\n  return {\n    view: renderView || view,\n    oninit: onInit || oninit,\n    oncreate: onMount,\n    onremove: onUnmount\n  };\n};\n"],"names":["keys","renderer","statefulComponent","createContent","createProps","element","getInitialState","onMount","onUnmount","state","createVirtualNode","_extends","vnode","dom","updater","attr","value","callback","redraw","oninit","attrs","vnode1","requiresKeys","before","after","viewComponent","renderView","view","samStateComponent","getUpdates","onInit","update","getUpdate","initialModel","updates","getModels","map","model"],"mappings":"4SACO,IAAMA,UACE,mBACA,oBACA,iBACA,kBACA,oBACA,oBACA,sBACA,yBACA,yBACA,wBACA,qBACA,YCXFC,kMCGAC,EAAoB,eAC/BC,KAAAA,cACAC,IAAAA,YACAC,IAAAA,YACAC,gBAAAA,aAAkB,2BAClBC,QAAAA,aAAU,mBACVC,UAAAA,aAAY,mBACZC,MAAAA,kBAGMC,EAAoB,kBACxBC,MAEEC,EACAA,EAAMC,KAAQA,IAAKD,EAAMC,KAAQ,kBAElBC,EAAQF,MAIrBE,EAAU,kBAAS,UAACC,EAAMC,EAAOC,KAC/BR,MAAMM,GAAQC,aACT,aACAE,SACLD,QAGH,KAGCE,EAAS,kBACbP,GAAMH,MAAQE,EACZC,EAAMH,MACNA,EACAH,EAAgBM,EAAMQ,qBAGb,eACLC,GAASX,EAAkBE,SAC1BX,GACLW,EAAMQ,MAAMf,SAAWA,EACvBD,EAAYiB,GAAUpB,WAAUqB,cA3CjB,EA2C+BtB,UAE5CY,EAAMQ,MAAMG,OACZpB,EAAckB,GAAUpB,WAAUqB,cA9CrB,EA8CmCtB,SAChDY,EAAMQ,MAAMI,gBAOR,kBAASL,GAAOT,EAAkBE,cAChC,kBAASL,GAAQG,EAAkBE,cACnC,kBAASJ,GAAUE,EAAkBE,OCtDtCa,EAAgB,eAC3BtB,KAAAA,cACAC,IAAAA,YACAC,IAAAA,QACAqB,IAAAA,WACAnB,IAAAA,QACAC,IAAAA,UAGMmB,EAAO,kBACJ1B,GACLW,EAAMQ,MAAMf,SAAWA,EACvBD,EAAYQ,GAASX,WAAUqB,cAdhB,EAc8BtB,UAE3CY,EAAMQ,MAAMG,OACZpB,EAAcS,GAASX,WAAUqB,cAjBpB,EAiBkCtB,SAC/CY,EAAMQ,MAAMI,qBAMVE,GAAcC,WACVpB,WACAC,ICvBDoB,EAAoB,eAC/BzB,KAAAA,cACAC,IAAAA,YACAE,IAAAA,gBACAuB,IAAAA,WACAxB,IAAAA,QACAqB,IAAAA,WACAI,IAAAA,OACAvB,IAAAA,QACAC,IAAAA,UAGMW,EAAS,eACPY,GAASC,cACTC,EAAe3B,EAAgBM,EAAMQ,SACrCX,MAAMyB,QAAUL,EAAWE,GAClBI,YAAUF,EAAcF,EAAQ,iBAAM9B,GAASiB,WACvDkB,IAAI,kBAASxB,GAAMH,MAAM4B,MAAQA,KAGpCV,EAAO,kBACX1B,GACEW,EAAMQ,MAAMf,SAAWA,EACvBD,EAAYQ,GAASX,WAAUqB,cAzBhB,EAyB8BtB,UAE3CY,EAAMQ,MAAMG,OACZpB,EAAcS,GAASX,WAAUqB,cA5BpB,EA4BkCtB,SAC/CY,EAAMQ,MAAMI,qBAKVE,GAAcC,SACZG,GAAUX,WACRZ,WACAC"}