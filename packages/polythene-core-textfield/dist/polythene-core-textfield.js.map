{"version":3,"file":"polythene-core-textfield.js","sources":["../src/classes.js","../src/textfield.js","../src/vars.js"],"sourcesContent":["\nexport default {\n  component:         \"pe-textfield\",\n\n  // elements\n  counter:           \"pe-textfield__counter\",\n  error:             \"pe-textfield__error\",\n  errorPlaceholder:  \"pe-textfield__error-placeholder\",\n  focusHelp:         \"pe-textfield__help-focus\",\n  help:              \"pe-textfield__help\",\n  input:             \"pe-textfield__input\",\n  inputArea:         \"pe-textfield__input-area\",\n  label:             \"pe-textfield__label\",\n  optionalIndicator: \"pe-textfield__optional-indicator\",\n  requiredIndicator: \"pe-textfield__required-indicator\",\n\n  // states\n  hasCounter:        \"pe-textfield--counter\",\n  hasFloatingLabel:  \"pe-textfield--floating-label\",\n  hasFullWidth:      \"pe-textfield--full-width\",\n  hideClear:         \"pe-textfield--hide-clear\",\n  hideSpinner:       \"pe-textfield--hide-spinner\",\n  hideValidation:    \"pe-textfield--hide-validation\",\n  isDense:           \"pe-textfield--dense\",\n  isRequired:        \"pe-textfield--required\",\n  stateDirty:        \"pe-textfield--dirty\",\n  stateDisabled:     \"pe-textfield--disabled\",\n  stateFocused:      \"pe-textfield--focused\",\n  stateInvalid:      \"pe-textfield--invalid\",\n  stateReadonly:     \"pe-textfield--readonly\",\n};\n","import { filterSupportedAttributes, pointerStartEvent } from \"polythene-core\";\nimport classes from \"./classes\";\n\nexport const getElement = vnode =>\n  vnode.attrs.element || \"div\";\n\nconst validateCustom = (state, attrs) => {\n  const validState = attrs.validate(state.inputEl().value);\n  return {\n    invalid: (validState && !validState.valid),\n    message: (validState && validState.error)\n  };\n};\n\nconst validateCounter = (state, attrs) => ({\n  invalid: state.inputEl().value.length > attrs.counter,\n  message: attrs.error\n});\n\nconst validateHTML = (state, attrs) => ({\n  invalid: !state.inputEl().checkValidity(),\n  message: attrs.error\n});\n\nconst getValidStatus = (state, attrs) => {\n  let status = {\n    invalid: false,\n    message: undefined\n  };\n\n  // attrs.validateResetOnClear: reset validation when field is cleared\n  if (state.isTouched() && state.isInvalid() && state.inputEl().value.length === 0 && attrs.validateResetOnClear) {\n    state.isTouched(false);\n    state.isInvalid(false);\n    state.error(undefined);\n  }\n  if (!status.invalid && attrs.counter) {\n    status = validateCounter(state, attrs);\n  }\n  if (!status.invalid && state.inputEl() && state.inputEl().checkValidity) {\n    status = validateHTML(state, attrs);\n  }\n  if (!status.invalid && attrs.validate) {\n    status = validateCustom(state, attrs);\n  }\n  return status;\n};\n\nconst checkValidity = vnode => {\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  // default\n  const status = (!state.isTouched() && !attrs.validateAtStart)\n    ? {\n      invalid: false,\n      message: undefined\n    }\n    : getValidStatus(state, attrs);\n  const previousInvalid = state.isInvalid();\n  state.error(status.message);\n\n  if (status.invalid !== previousInvalid) {\n    state.isInvalid(status.invalid);\n  }\n  if (!status.invalid) {\n    state.error(undefined);\n  }\n};\n\nconst notifyState = vnode => {\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  if (attrs.onChange) {\n    const status = getValidStatus(state, attrs);\n    attrs.onChange({\n      focus:   state.hasFocus(),\n      dirty:   state.isDirty(),\n      el:      state.inputEl(),\n      invalid: status.invalid,\n      error:   status.error,\n      value:   state.inputEl().value,\n    });\n  }\n};\n\nconst ignoreEvent = (attrs, name) =>\n  attrs.ignoreEvents && attrs.ignoreEvents.indexOf(name) !== -1;\n\nexport const getInitialState = (vnode, createStream) => {\n  const attrs = vnode.attrs;\n\n  const defaultValue = attrs.defaultValue !== undefined\n    ? attrs.defaultValue\n    : attrs.value !== undefined\n      ? attrs.value\n      : \"\";\n\n  const el = createStream(null);\n  const inputEl = createStream(null);\n  const setValue = createStream({});\n  const error = createStream(attrs.error);\n  const hasFocus = createStream(attrs.focus || false);\n  const setFocus = createStream(null);\n  const isTouched = createStream(false); // true when any change is made\n  const isDirty = createStream(defaultValue !== \"\"); // true for any input\n  const isInvalid = createStream(false);\n  const previousValue = createStream(undefined);\n\n  return {\n    defaultValue,\n    previousValue,\n    el,\n    error,\n    hasFocus,\n    inputEl,\n    isInvalid,\n    isTouched,\n    isDirty,\n    setFocus,\n    setValue,\n    redrawOnUpdate: createStream.merge([inputEl, isInvalid, isDirty])\n  };\n};\n\nexport const onMount = vnode => {\n  const dom = vnode.dom;\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n\n  state.el(dom);\n  const inputType = attrs.multiLine ? \"textarea\" : \"input\";\n  const inputEl = dom.querySelector(inputType);\n  vnode.state.inputEl(inputEl);\n  state.inputEl().value = state.defaultValue;\n\n  state.setValue.map(({ type, focus }) => (\n    focus !== undefined && state.setFocus(focus),\n    type === \"input\" && (attrs.validateOnInput || attrs.counter) && state.isTouched(state.inputEl().value !== \"\"),\n    type !== \"input\" && state.isTouched(state.inputEl().value !== \"\"),\n    type === \"onblur\" && state.isTouched(true),\n    state.isDirty(state.inputEl().value !== \"\"),\n    checkValidity(vnode),\n    notifyState(vnode),\n    state.previousValue(state.inputEl().value)\n  ));\n\n  state.setFocus.map(focusState => {\n    state.hasFocus(focusState);\n    if (focusState && state.inputEl()) {\n      // Draw in next tick, to prevent getting an immediate onblur\n      // Explicit setting of focus needed for most browsers other than Safari\n      setTimeout(() => state.inputEl() && state.inputEl().focus && state.inputEl().focus(), 0);\n    }\n  });\n\n  notifyState(vnode);\n};\n\nexport const createProps = (vnode, { keys: k }) => {\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  const isInvalid = state.isInvalid();\n\n  return Object.assign(\n    {},\n    filterSupportedAttributes(attrs),\n    {\n      className: [\n        classes.component,\n        isInvalid                   ? classes.stateInvalid : \"\",\n        state.hasFocus()            ? classes.stateFocused : \"\",\n        state.isDirty()             ? classes.stateDirty : \"\",\n        attrs.floatingLabel         ? classes.hasFloatingLabel : \"\",\n        attrs.disabled              ? classes.stateDisabled : \"\",\n        attrs.readonly              ? classes.stateReadonly : \"\",\n        attrs.dense                 ? classes.isDense : \"\",\n        attrs.required              ? classes.isRequired : \"\",\n        attrs.fullWidth             ? classes.hasFullWidth : \"\",\n        attrs.counter               ? classes.hasCounter : \"\",\n        attrs.hideSpinner !== false ? classes.hideSpinner : \"\",\n        attrs.hideClear !== false   ? classes.hideClear : \"\",\n        attrs.hideValidation        ? classes.hideValidation : \"\",\n        attrs.tone === \"dark\"       ? \"pe-dark-tone\" : null,\n        attrs.tone === \"light\"      ? \"pe-light-tone\" : null,\n        attrs.className || attrs[k.class],\n      ].join(\" \")\n    }\n  );\n};\n\nexport const createContent = (vnode, { renderer: h, keys: k }) => {\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n\n  const inputEl = state.inputEl();\n  const isInvalid = state.isInvalid();\n  const inputType = attrs.multiLine ? \"textarea\" : \"input\";\n  const type = attrs.multiLine\n    ? null\n    : !attrs.type || attrs.type === \"submit\" || attrs.type === \"search\"\n      ? \"text\"\n      : attrs.type;\n  const showError = isInvalid && state.error() !== undefined;\n  const validates = attrs.validate || attrs.min || attrs.max || attrs[k.minlength] || attrs[k.maxlength] || attrs.required || attrs.pattern;\n  const inactive = attrs.disabled || attrs[k.readonly];\n\n  if (attrs.focus && !state.hasFocus() && !inactive) {\n    state.setFocus(true);\n  }\n\n  const value = attrs.value !== undefined\n    ? attrs.value \n    : inputEl\n      ? inputEl.value\n      : state.previousValue();\n  const valueStr = value === undefined\n    ? \"\"\n    : value.toString();\n\n  if (inputEl && state.previousValue() !== valueStr) {\n    inputEl.value = valueStr;\n    state.previousValue(valueStr);\n    setTimeout(() => state.setValue({ type: \"input\" }), 0); // perform in next tick to play nice with React\n  }\n\n  const requiredIndicator = attrs.required && attrs.requiredIndicator !== \"\"\n    ? h(\"span\",\n      {\n        key: \"required\",\n        className: classes.requiredIndicator\n      },\n      attrs.requiredIndicator || \"*\"\n    )\n    : null;\n  const optionalIndicator = !attrs.required && attrs.optionalIndicator\n    ? h(\"span\",\n      {\n        key: \"optional\",\n        className: classes.optionalIndicator\n      },\n      attrs.optionalIndicator\n    )\n    : null;\n  const label = attrs.label\n    ? [attrs.label, requiredIndicator, optionalIndicator]\n    : null;\n\n  return [\n    h(\"div\",\n      {\n        className: classes.inputArea,\n        key: \"input-area\"\n      },\n      [\n        label\n          ? h(\"label\",\n            {\n              key: \"label\",\n              className: classes.label,\n              // In IE10 the label catches click events on the field\n              // the function causes the input to get focus\n              [k[\"on\" + pointerStartEvent]]: () => {\n                if (!inactive) {\n                  setTimeout(() => {\n                    state.inputEl.focus();\n                  }, 0);\n                }\n              }\n            },\n            label)\n          : null,\n        h(inputType, Object.assign(\n          {},\n          {\n            key: \"input\",\n            className: classes.input,\n            disabled: attrs.disabled\n          },\n          type ? { type } : null,\n          attrs.name \n            ? { name: attrs.name }\n            : null,\n\n          !ignoreEvent(attrs, k.onclick)\n            ? {\n              [k.onclick]: () => {\n                if (inactive) {\n                  return;\n                }\n                // in case the browser does not give the field focus,\n                // for instance when the user tapped to the current field off screen\n                state.setFocus(true);\n                notifyState(vnode);\n              }\n            }\n            : null,\n\n          !ignoreEvent(attrs, k.onfocus)\n            ? {\n              [k.onfocus]: () => {\n                if (inactive) {\n                  return;\n                }\n                state.setFocus(true);\n                // set CSS class manually in case field gets focus but is off screen\n                // and no redraw is triggered\n                // at the next redraw state.hasFocus() will be read and the focus class be set\n                // in the props.class statement\n                if (state.el()) {\n                  state.el().classList.add(classes.stateFocused);\n                }\n                notifyState(vnode);\n              }\n            }\n            : null,\n              \n          !ignoreEvent(attrs, k.onblur)\n            ? {\n              [k.onblur]: () => {\n                state.setValue({ type: \"onblur\", focus: false });\n                // same principle as onfocus\n                state.el().classList.remove(classes.stateFocused);\n              }\n            }\n            : null,\n\n          !ignoreEvent(attrs, k.oninput)\n            ? {\n              [k.oninput]: () => {\n                // default input event\n                // may be overwritten by attrs.events\n                state.setValue({ type: \"input\" });\n              }\n            }\n            : null,\n\n          !ignoreEvent(attrs, k.onkeydown)\n            ? {\n              [k.onkeydown]: e => {\n                if (e.key === \"Enter\") {\n                  state.isTouched(true);\n                } else if (e.key === \"Escape\") {\n                  inputEl.blur(e);\n                }\n              }\n            }\n            : null,\n\n          attrs.events ? attrs.events : null, // NOTE: may overwrite oninput\n          attrs[k.readonly] !== undefined ?  { [k.readonly]: true } : null,\n          attrs.pattern !== undefined ?      { pattern: attrs.pattern } : null,\n          attrs[k.maxlength] !== undefined ? { [k.maxlength]: attrs[k.maxlength] } : null,\n          attrs[k.minlength] !== undefined ? { [k.minlength]: attrs[k.minlength] } : null,\n          attrs.max !== undefined ?          { max: attrs.max } : null,\n          attrs.min !== undefined ?          { min: attrs.min } : null,\n          attrs[k.autofocus] !== undefined ? { [k.autofocus]: attrs[k.autofocus] } : null,\n          attrs.required !== undefined ?     { required: attrs.required } : null,\n          attrs[k.tabindex] !== undefined ?  { [k.tabindex]: attrs[k.tabindex] } : null,\n          attrs.rows !== undefined ?         { rows: attrs.rows } : null\n        ))\n      ]\n    ),\n    attrs.counter\n      ? h(\"div\",\n        {\n          key: \"counter\",\n          className: classes.counter\n        },\n        ((inputEl && inputEl.value.length) || 0) + \" / \" + attrs.counter\n      )\n      : null,\n    attrs.help && !showError\n      ? h(\"div\",\n        {\n          key: \"help\",\n          className: [\n            classes.help,\n            attrs.focusHelp ? classes.focusHelp : null\n          ].join(\" \")\n        },\n        attrs.help\n      )\n      : null,\n    showError\n      ? h(\"div\",\n        {\n          key: \"error\",\n          className: classes.error\n        },\n        state.error()\n      )\n      : validates && !attrs.help\n        ? h(\"div\",\n          {\n            key: \"error-placeholder\",\n            className: classes.errorPlaceholder\n          }\n        )\n        : null\n  ];\n};\n\n","import { vars } from \"polythene-theme\";\n\nconst rgba = (colorStr, opacity = 1) =>\n  `rgba(${colorStr}, ${opacity})`;\n\nconst line_height_input = 20;\nconst input_padding_v = 7;\n\nexport default {\n  vertical_spacing_top:                   6, // 8 minus natural label height padding (1)\n  vertical_spacing_bottom:                7, // 8 minus natural label height padding (1)\n  input_focus_border_width:               2,\n  input_focus_border_animation_duration:  vars.animation_duration,\n  \n  floating_label_vertical_spacing_top:    30, // 16 + 8 + 8 minus natural label height padding (2)\n  floating_label_vertical_spacing_bottom: 7, // 8 minus natural label height padding (1)\n  floating_label_top:                     14,\n  floating_label_animation_duration:      \".12s\",\n\n  input_padding_h:          0,\n  input_padding_v,\n  input_border_width:       1,\n  margin_top_error_message: 6,\n  font_size_input:          16,\n  font_size_error:          12,\n  font_size_floating_label: 12,\n\n  line_height_input,\n\n  dense_floating_label_vertical_spacing_top:    23, // 12 + 8 + 4 minus natural label height padding (1)\n  dense_floating_label_vertical_spacing_bottom: 4, // 8 minus natural label height padding (1)\n  dense_floating_label_top:                     10,\n  dense_font_size_input:                        13,\n  dense_font_size_floating_label:               13,\n            \n  full_width_input_padding_h:       20,\n  full_width_input_padding_v:       18, // 20 minus natural label height padding (2)\n\n  dense_full_width_input_padding_h: 16,\n  dense_full_width_input_padding_v: 15, // 16 minus natural label height padding (1)\n  dense_full_width_font_size_input: 13,\n\n  color_light_input_text:           rgba(vars.color_light_foreground, vars.blend_light_text_primary),\n  color_light_input_background:     \"transparent\", // only used to \"remove\" autofill color\n  color_light_highlight_text:       rgba(vars.color_primary, vars.blend_light_text_primary),\n  color_light_input_bottom_border:  rgba(vars.color_light_foreground, vars.blend_light_border_light),\n  color_light_input_error_text:     rgba(\"221, 44, 0\"),\n  color_light_input_error_border:   rgba(\"221, 44, 0\"),\n  color_light_input_placeholder:    rgba(vars.color_light_foreground, vars.blend_light_text_tertiary),\n  color_light_label_text:           rgba(vars.color_light_foreground, vars.blend_light_text_tertiary),\n  color_light_disabled_label_text:  rgba(vars.color_light_foreground, vars.blend_light_text_disabled),\n  color_light_readonly_label_text:  rgba(vars.color_light_foreground, vars.blend_light_text_tertiary),\n  color_light_help_text:            rgba(vars.color_light_foreground, vars.blend_light_text_tertiary),\n  color_light_required_symbol:      rgba(\"221, 44, 0\"),\n  color_light_focus_border:         rgba(vars.color_primary),\n  color_light_counter_ok_border:    rgba(vars.color_primary),\n \n  color_dark_input_text:            rgba(vars.color_dark_foreground, vars.blend_dark_text_primary),\n  color_dark_input_background:      \"transparent\", // only used to \"remove\" autofill color\n  color_dark_highlight_text:        rgba(vars.color_primary, vars.blend_dark_text_primary),\n  color_dark_input_bottom_border:   rgba(vars.color_dark_foreground, vars.blend_dark_border_light),\n  color_dark_input_error_text:      rgba(\"222, 50, 38\"),\n  color_dark_input_error_border:    rgba(\"222, 50, 38\"),\n  color_dark_input_placeholder:     rgba(vars.color_dark_foreground, vars.blend_dark_text_tertiary),\n  color_dark_label_text:            rgba(vars.color_dark_foreground, vars.blend_dark_text_tertiary),\n  color_dark_disabled_label_text:   rgba(vars.color_dark_foreground, vars.blend_dark_text_disabled),\n  color_dark_readonly_label_text:   rgba(vars.color_dark_foreground, vars.blend_dark_text_tertiary),\n  color_dark_help_text:             rgba(vars.color_dark_foreground, vars.blend_dark_text_tertiary),\n  color_dark_required_symbol:       rgba(\"221, 44, 0\"),\n  color_dark_focus_border:          rgba(vars.color_primary),\n  color_dark_counter_ok_border:     rgba(vars.color_primary)\n};\n"],"names":["getElement","vnode","attrs","element","validateCustom","state","validState","validate","inputEl","value","valid","error","validateCounter","length","counter","validateHTML","checkValidity","getValidStatus","status","undefined","isTouched","isInvalid","validateResetOnClear","invalid","validateAtStart","previousInvalid","message","notifyState","onChange","hasFocus","isDirty","ignoreEvent","name","ignoreEvents","indexOf","getInitialState","createStream","defaultValue","el","setValue","focus","setFocus","merge","onMount","dom","inputType","multiLine","querySelector","map","type","validateOnInput","previousValue","focusState","createProps","k","keys","_extends","filterSupportedAttributes","classes","component","stateInvalid","stateFocused","stateDirty","floatingLabel","hasFloatingLabel","disabled","stateDisabled","readonly","stateReadonly","dense","isDense","required","isRequired","fullWidth","hasFullWidth","hasCounter","hideSpinner","hideClear","hideValidation","tone","className","class","join","createContent","h","renderer","showError","validates","min","max","minlength","maxlength","pattern","inactive","valueStr","toString","requiredIndicator","optionalIndicator","label","inputArea","pointerStartEvent","input","onclick","onfocus","classList","add","onblur","remove","oninput","onkeydown","e","key","blur","events","autofocus","tabindex","rows","help","focusHelp","errorPlaceholder","rgba","colorStr","vars","animation_duration","color_light_foreground","blend_light_text_primary","color_primary","blend_light_border_light","blend_light_text_tertiary","blend_light_text_disabled","color_dark_foreground","blend_dark_text_primary","blend_dark_border_light","blend_dark_text_tertiary","blend_dark_text_disabled"],"mappings":"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"}