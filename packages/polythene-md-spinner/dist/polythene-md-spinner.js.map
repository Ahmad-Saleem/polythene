{"version":3,"file":"polythene-md-spinner.js","sources":["../src/classes.js","../src/theme/vars.js","../src/theme/layout.js","../src/theme/color.js","../src/theme/index.js","../src/spinner.js"],"sourcesContent":["\nexport default {\n  component:          \"pe-md-spinner\",\n\n  // elements\n  animation:          \"pe-md-spinner__animation\",\n  circle:             \"pe-md-spinner__circle\",\n  circleClipper:      \"pe-md-spinner__circle-clipper\",\n  circleClipperLeft:  \"pe-md-spinner__circle-clipper-left\",\n  circleClipperRight: \"pe-md-spinner__circle-clipper-right\",\n  gapPatch:           \"pe-md-spinner__gap-patch\",\n  layer:              \"pe-md-spinner__layer\",\n  layerN:             \"pe-md-spinner__layer-\",\n};\n","/*\nDerived from https://github.com/PolymerElements/paper-spinner\n\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { vars } from \"polythene-theme\";\nimport { vars as baseVars } from \"polythene-spinner-base\";\nconst rgba = vars.rgba;\n\nconst arc_size =          270; // degrees - amount of circle the arc takes up\nconst arc_time =          1.333; // s - time it takes to expand and contract arc\nconst arc_start_degrees = 360/5 * 3; // degrees - how much the start location of the arc should rotate each time, 216 gives us a 5 pointed star shape (it\"s 360/5 * 3). For a 7 pointed star, we might do 360/7 * 3 = 154.286.\nconst rotation_duration = 360 * arc_time / (arc_start_degrees + (360 - arc_size)); // 1.568s\n\nconst blue400 =   \"#42a5f5\";\nconst red500 =    \"#f44336\";\nconst yellow600 = \"#fdd835\";\nconst green500 =  \"#4caf50\";\n\nexport default {\n  border_width_small:   baseVars.size_small / baseVars.size_regular * 3,\n  border_width_regular: 3,\n  border_width_medium:  baseVars.size_medium / baseVars.size_regular * 3,\n  border_width_large:   baseVars.size_large / baseVars.size_regular * 3,\n  border_width_fab:     baseVars.size_fab / baseVars.size_regular * 3,\n  rotation_duration,\n  arc_size,\n  arc_time,\n  arc_start_degrees,\n\n  color_light_single: rgba(vars.color_primary),\n  color_light_1:      blue400,\n  color_light_2:      red500,\n  color_light_3:      yellow600,\n  color_light_4:      green500,\n\n  color_dark_single:  rgba(vars.color_primary),\n  color_dark_1:       blue400,\n  color_dark_2:       red500,\n  color_dark_3:       yellow600,\n  color_dark_4:       green500,\n};\n","/*\nDerived from https://github.com/PolymerElements/paper-spinner\n\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { mixin } from \"polythene-css\";\n\nconst OPACITY_MIN = 0;\nconst OPACITY_MAX = .99;\nconst CURVE_INFINITE = \"cubic-bezier(0.4, 0.0, 0.2, 1) infinite both\";\n\nconst kfRotate = () => ({\n  \" to\": {\n    transform: \"rotate(360deg)\"\n  }\n});\n\nconst kfLeftSpin = () => (kfSpin(1));\nconst kfRightSpin = () => (kfSpin(-1));\n\nconst kfSpin = (direction) => ({\n  \" from\": {\n    \"transform\": \"rotate(\" + (direction * 130) + \"deg)\"\n  },\n  \" 50%\": {\n    \"transform\": \"rotate(\" + (direction * -5) + \"deg)\"\n  },\n  \" to\": {\n    \"transform\": \"rotate(\" + (direction * 130) + \"deg)\"\n  }\n});\n\nconst kfFadeOut = () => ({\n  \" from\": {\n    opacity: OPACITY_MAX\n  },\n  \" to\": {\n    opacity: OPACITY_MIN\n  }\n});\n\nconst kfFillUnfillRotate = (config) => ({\n  \" 12.5%\": {\n    transform: \"rotate(\" + (0.5 * config.arc_size) + \"deg)\"\n  },\n  \" 25%\": {\n    transform: \"rotate(\" + (1.0 * config.arc_size) + \"deg)\"\n  },\n  \" 37.5%\": {\n    transform: \"rotate(\" + (1.5 * config.arc_size) + \"deg)\"\n  },\n  \" 50%\": {\n    transform: \"rotate(\" + (2.0 * config.arc_size) + \"deg)\"\n  },\n  \" 62.5%\": {\n    transform: \"rotate(\" + (2.5 * config.arc_size) + \"deg)\"\n  },\n  \" 75%\": {\n    transform: \"rotate(\" + (3.0 * config.arc_size) + \"deg)\"\n  },\n  \" 87.5%\": {\n    transform: \"rotate(\" + (3.5 * config.arc_size) + \"deg)\"\n  },\n  \" to\": {\n    transform: \"rotate(\" + (4.0 * config.arc_size) + \"deg)\"\n  },\n});\n\n/**\n * HACK: Even though the intention is to have the current .pe-md-spinner__layer at\n * `opacity: 1`, we set it to `opacity: 0.99` instead since this forces Chrome\n * to do proper subpixel rendering for the elements being animated. This is\n * especially visible in Chrome 39 on Ubuntu 14.04. See:\n *\n * - https://github.com/Polymer/paper-spinner/issues/9\n * - https://code.google.com/p/chromium/issues/detail?id=436255\n */\nconst kfLayer1FadeInOut = () => ({\n  \" from\": {\n    opacity: OPACITY_MAX\n  },\n  \" 25%\": {\n    opacity: OPACITY_MAX\n  },\n  \" 26%\": {\n    opacity: OPACITY_MIN\n  },\n  \" 89%\": {\n    opacity: OPACITY_MIN\n  },\n  \" 90%\": {\n    opacity: OPACITY_MAX\n  },\n  \" 100%\": {\n    opacity: OPACITY_MAX\n  },\n});\n\nconst kfLayer2FadeInOut = () => ({\n  \" from\": {\n    opacity: OPACITY_MIN\n  },\n  \" 15%\": {\n    opacity: OPACITY_MIN\n  },\n  \" 25%\": {\n    opacity: OPACITY_MAX\n  },\n  \" 50%\": {\n    opacity: OPACITY_MAX\n  },\n  \" 51%\": {\n    opacity: OPACITY_MIN\n  }\n});\n\nconst kfLayer3FadeInOut = () => ({\n  \" from\": {\n    opacity: OPACITY_MIN\n  },\n  \" 40%\": {\n    opacity: OPACITY_MIN\n  },\n  \" 50%\": {\n    opacity: OPACITY_MAX\n  },\n  \" 75%\": {\n    opacity: OPACITY_MAX\n  },\n  \" 76%\": {\n    opacity: OPACITY_MIN\n  }\n});\n\nconst kfLayer4FadeInOut = () => ({\n  \" from\": {\n    opacity: OPACITY_MIN\n  },\n  \" 65%\": {\n    opacity: OPACITY_MIN\n  },\n  \" 75%\": {\n    opacity: OPACITY_MAX\n  },\n  \" 90%\": {\n    opacity: OPACITY_MAX\n  },\n  \" 100%\": {\n    opacity: OPACITY_MIN\n  }\n});\n\nconst layerAnimation = (config, num) => ({\n  [\"&.pe-md-spinner__layer-\" + num]: {\n    animation: \"mdSpinnerFillUnfillRotate \" + 4 * config.arc_time + \"s \" + CURVE_INFINITE + \",  mdSpinnerLayer\" + num + \"FadeInOut \" + 4 * config.arc_time + \"s \" + CURVE_INFINITE\n  }\n});\n\nexport default (selector, componentVars) => [{\n  [selector]: {\n    \" .pe-md-spinner__animation\": {\n      animation: \"mdSpinnerRotate \" + componentVars.rotation_duration + \"s linear infinite\",\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100%\",\n\n      /* The spinner does not have any contents that would have to be\n      * flipped if the direction changes. Always use ltr so that the\n      * style works out correctly in both cases. */\n      direction: \"ltr\"\n    },\n\n    /**\n    * Patch the gap that appear between the two adjacent div.pe-md-spinner__circle-clipper while the\n    * spinner is rotating (appears on Chrome 38, Safari 7.1, and IE 11).\n    *\n    * Update: the gap no longer appears on Chrome when .pe-md-spinner__layer\"s opacity is 0.99,\n    * but still does on Safari and IE.\n    */\n    \" .pe-md-spinner__gap-patch\": {\n      position: \"absolute\",\n      boxSizing: \"border-box\",\n      top: 0,\n      left: \"45%\",\n      width: \"10%\",\n      height: \"100%\",\n      overflow: \"hidden\",\n      borderColor: \"inherit\"\n    },\n\n    \" .pe-md-spinner__gap-patch .pe-md-spinner__circle\": {\n      width: \"1000%\",\n      left: \"-450%\"\n    },\n\n    \" .pe-md-spinner__circle-clipper\": {\n      display: \"inline-block\",\n      fontSize: 0,\n      lineHeight: 0,\n      position: \"relative\",\n      width: \"50%\",\n      height: \"100%\",\n      overflow: \"hidden\",\n      borderColor: \"inherit\"\n    },\n\n    \" .pe-md-spinner__circle-clipper .pe-md-spinner__circle\": {\n      width: \"200%\"\n    },\n\n    \" .pe-md-spinner__circle\": [\n      mixin.fit(),\n      {\n        animation: \"none\",\n        boxSizing: \"border-box\",\n        height: \"100%\",\n        borderStyle: \"solid\",\n        borderColor: \"inherit\",\n        borderRadius: \"50%\",\n        borderBottomColor: \"transparent !important\"\n      }\n    ],\n\n    \"&\": [\"small\", \"regular\", \"medium\", \"large\", \"fab\"].map(size => ({\n      [\"&.pe-spinner--\" + size]: {\n        \" .pe-md-spinner__circle\": {\n          borderWidth: componentVars[\"border_width_\" + size] + \"px\"\n        }\n      }\n    })),\n\n    \" .pe-md-spinner__circle-clipper-left .pe-md-spinner__circle\": {\n      transform: \"rotate(129deg)\",\n      animation: \"mdSpinnerLeftSpin \" + componentVars.arc_time + \"s \" + CURVE_INFINITE,\n      borderRightColor: \"transparent !important\"\n    },\n\n    \" .pe-md-spinner__circle-clipper-right .pe-md-spinner__circle\": {\n      transform: \"rotate(-129deg)\",\n      animation: \"mdSpinnerRightSpin \" + componentVars.arc_time + \"s \" + CURVE_INFINITE,\n      left: \"-100%\",\n      borderLeftColor: \"transparent !important\"\n    },\n\n    /**\n    * IMPORTANT NOTE ABOUT CSS ANIMATION PROPERTIES (keanulee):\n    *\n    * iOS Safari (tested on iOS 8.1) does not handle animation-delay very well - it doesn\"t\n    * guarantee that the animation will start _exactly_ after that value. So we avoid using\n    * animation-delay and instead set custom keyframes for each color (as redundant as it\n    * seems).\n    *\n    * We write out each animation in full (instead of separating animation-name,\n    * animation-duration, etc.) because under the polyfill, Safari does not recognize those\n    * specific properties properly, treats them as -webkit-animation, and overrides the\n    * other animation rules. See https://github.com/Polymer/platform/issues/53.\n    */\n    \" .pe-md-spinner__layer\": [\n      [1,2,3,4].map(num => layerAnimation(componentVars, num)),\n      {\n        animation: \"mdSpinnerFillUnfillRotate \" + 4 * componentVars.arc_time + \"s \" + CURVE_INFINITE,\n        position: \"absolute\",\n        width: \"100%\",\n        height: \"100%\",\n        whiteSpace: \"nowrap\"\n      }\n    ],\n\n    \"@keyframes mdSpinnerRotate\": kfRotate(),\n    \"@keyframes mdSpinnerRightSpin\": kfRightSpin(),\n    \"@keyframes mdSpinnerLeftSpin\": kfLeftSpin(),\n    \"@keyframes mdSpinnerFadeOut\": kfFadeOut(),\n    \"@keyframes mdSpinnerFillUnfillRotate\": kfFillUnfillRotate(componentVars),\n    \"@keyframes mdSpinnerLayer1FadeInOut\": kfLayer1FadeInOut(),\n    \"@keyframes mdSpinnerLayer2FadeInOut\": kfLayer2FadeInOut(),\n    \"@keyframes mdSpinnerLayer3FadeInOut\": kfLayer3FadeInOut(),\n    \"@keyframes mdSpinnerLayer4FadeInOut\": kfLayer4FadeInOut()\n  }\n}];\n","/*\nDerived from https://github.com/PolymerElements/paper-spinner\n\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nconst style = (scopes, selector, componentVars, tint) => [{\n  [scopes.map(s => s + selector).join(\",\")]: {\n    color: componentVars[\"color_\" + tint + \"_single\"],\n\n    \" .pe-md-spinner__layer\": {\n      borderColor: \"currentcolor\"\n    },\n\n    \":not(.pe-spinner--single-color)\": {\n      \" .pe-md-spinner__layer--1\": {\n        borderColor: componentVars[\"color_\" + tint + \"_1\"]\n      },\n      \" .pe-md-spinner__layer--2\": {\n        borderColor: componentVars[\"color_\" + tint + \"_2\"]\n      },\n      \" .pe-md-spinner__layer--3\": {\n        borderColor: componentVars[\"color_\" + tint + \"_3\"]\n      },\n      \" .pe-md-spinner__layer--4\": {\n        borderColor: componentVars[\"color_\" + tint + \"_4\"]\n      }\n    }\n  }\n}];\n\nexport default (selector, componentVars) => [\n  style([\".pe-dark-tone\", \".pe-dark-tone \"], selector, componentVars, \"dark\"), // has/inside dark theme\n  style([\"\", \".pe-light-tone\", \".pe-light-tone \"], selector, componentVars, \"light\"), // normal, has/inside light theme\n];\n","import { styler } from \"polythene-css\";\nimport classes from \"../classes\";\nimport vars from \"./vars\";\nimport layout from \"./layout\";\nimport color from \"./color\";\n\nconst fns = [layout, color];\nconst selector = `.${classes.component}`;\n\nexport const customTheme = (customSelector, customVars) => \n  styler.generateStyles([customSelector, selector], {...vars, ...customVars}, fns);\n\nstyler.generateStyles([selector], vars, fns);\n","import m from \"mithril\";\nimport spinner from \"polythene-spinner-base\";\nimport { customTheme } from \"./theme\";\nimport classes from \"./classes\";\n\nconst layer = num =>\n  m(\"div\",\n    {\n      class: [\n        classes.layer,\n        classes.layerN + num\n      ].join(\" \")\n    },\n    [\n      m(\"div\",\n        {\n          class: [\n            classes.circleClipper,\n            classes.circleClipperLeft\n          ].join(\" \")\n        },\n        m(\"div\", { class: classes.circle })\n      ),\n      m(\"div\",\n        { class: classes.gapPatch },\n        m(\"div\", { class: classes.circle })\n      ),\n      m(\"div\",\n        {\n          class: [\n            classes.circleClipper,\n            classes.circleClipperRight\n          ].join(\" \")\n        }, m(\"div\", { class: classes.circle })\n      )\n    ]\n  );\n\nconst view = ({ attrs }) => {\n  attrs.content = m(\"div\",\n    { class: classes.animation },\n    [1,2,3,4].map(num => layer(num)));\n  attrs.class = [\n    classes.component,\n    attrs.class\n  ].join(\" \");\n  return m(spinner, attrs);\n};\n\nexport default {\n  theme: customTheme, // accepts (selector, vars)\n  view\n};\n"],"names":["rgba","vars","baseVars","size_small","size_regular","size_medium","size_large","size_fab","color_primary","CURVE_INFINITE","kfRotate","kfLeftSpin","kfSpin","kfRightSpin","direction","kfFadeOut","kfFillUnfillRotate","config","arc_size","kfLayer1FadeInOut","kfLayer2FadeInOut","kfLayer3FadeInOut","kfLayer4FadeInOut","layerAnimation","num","arc_time","selector","componentVars","rotation_duration","mixin","fit","map","size","style","scopes","tint","s","join","fns","layout","color","classes","component","customTheme","customSelector","customVars","styler","generateStyles","layer","m","layerN","circleClipper","circleClipperLeft","class","circle","gapPatch","circleClipperRight","view","attrs","content","animation","spinner"],"mappings":"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"}