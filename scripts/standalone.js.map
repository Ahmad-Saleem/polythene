{"version":3,"sources":["standalone.es6"],"names":["fs","require","browserify","sh","folders","commonUtils","includes","noRequires","filterNoRequires","folder","formatRequire","path","requires","formatFn","str","concat","filter","map","util","include","components","utils","extra","writeRequires","console","log","writeFile","join","callback","prepare","mkdir","mv","teardown","rm","build","createBundle","entries","paths","transform","global","bundle","on","err","message","pipe","createWriteStream","outfile"],"mappings":"aAAA,GAAMA,IAAKC,QAAQ,IAAR,CAAX,CACMC,WAAaD,QAAQ,YAAR,CADnB,CAEME,GAAKF,QAAQ,SAAR,CAFX,CAIMG,kVAJN,CAMMC,yKANN,CAQMC,2LARN,CAUMC,8CAVN,CAgBMC,iBAAmB,kBAAa,CAACD,WAAWE,CAAX,CAAd,CAhBzB,CAkBMC,cAAgB,+BAAuBC,CAAvB,QAlBtB,CAoBMC,SAAW,WAAc,CAC3B,EAAWC,GAAa,kBAAUC,EAAV,CADG,CAE3B,GAAM,GAAa,CAACD,EAAS,SAAT,CAAD,EAAsBE,MAAtB,CAA6BX,QAAQY,MAAR,CAAeR,gBAAf,EAAiCS,GAAjC,CAAqC,WAAY,CAC7F,MAAOJ,gBAAsBJ,CAAtB,KAAgCA,CAAhC,CACV,CAF+C,CAA7B,CAAnB,CAGM,EAAQ,CAACI,EAAS,WAAT,CAAD,EAAwBE,MAAxB,CAA+BV,YAAYY,GAAZ,CAAgB,WAAU,CACnE,MAAOJ,uBAA6BK,CAA7B,CACV,CAF4C,CAA/B,CAHd,CAMM,EAAQZ,SAASW,GAAT,CAAa,WAAa,CACpC,MAAOJ,gBAAsBM,CAAtB,CACV,CAFa,CANd,CASA,MAAOC,GAAWL,MAAX,CAAkBM,CAAlB,EAAyBN,MAAzB,CAAgCO,CAAhC,CACV,CAhCD,CAkCMC,cAAgB,WAAc,CAChCC,QAAQC,GAAR,CAAY,0BAAZ,CADgC,CAEhCzB,GAAG0B,SAAH,CAAa,mBAAb,CAAkCd,SAASF,aAAT,EAAwBiB,IAAxB,CAA6B,IAA7B,CAAlC,CAAsE,MAAtE,CAA8E,iBAAOH,SAAQC,GAAR,CAAY,+BAAZ,EAA8CG,GAArD,CAA9E,CACH,CArCD,CAuCMC,QAAU,UAAM,CAClBL,QAAQC,GAAR,CAAY,oBAAZ,CADkB,CAElBtB,GAAG2B,KAAH,CAAS,IAAT,CAAe,KAAf,CAFkB,CAGlB1B,QAAQa,GAAR,CAAY,WAAY,CACpBd,GAAG4B,EAAH,CAAMtB,CAAN,CAAc,OAASA,CAAvB,CACH,CAFD,CAHkB,CAMlBN,GAAG4B,EAAH,CAAM,KAAN,CAAa,WAAb,CANkB,CAOlBP,QAAQC,GAAR,CAAY,yBAAZ,CACH,CA/CD,CAiDMO,SAAW,UAAM,CACnBR,QAAQC,GAAR,CAAY,qBAAZ,CADmB,CAEnBtB,GAAG4B,EAAH,CAAM,WAAN,CAAmB,KAAnB,CAFmB,CAGnB5B,GAAG4B,EAAH,CAAM,OAAN,CAAe,GAAf,CAHmB,CAInB5B,GAAG8B,EAAH,CAAM,KAAN,CAAa,KAAb,CAJmB,CAKnB9B,GAAG8B,EAAH,CAAM,KAAN,CAAa,mBAAb,CALmB,CAMnBT,QAAQC,GAAR,CAAY,0BAAZ,CACH,CAxDD,CA0DMS,MAAQ,UAAM,CAChBV,QAAQC,GAAR,CAAY,kBAAZ,CADgB,CAyBhB,CAvBqB,QAAfU,aAAe,KAAsB,CACvC,GAAI,CACAjC,WAAW,CACPkC,QAASA,CADF,CAEPC,0BAFO,CAGPpC,QAASW,UAHF,CAAX,EAMC0B,SAND,CAMW,CACPC,SADO,CANX,CAQG,WARH,EASCC,MATD,GAUCC,EAVD,CAUI,OAVJ,CAUa,WAAc,CACvBjB,QAAQC,GAAR,CAAY,WAAaiB,EAAIC,OAA7B,CACH,CAZD,EAaCC,IAbD,CAaM5C,GAAG6C,iBAAH,CAAqBC,CAArB,EAA8BL,EAA9B,CAAiC,QAAjC,CAA2CT,QAA3C,CAbN,CAeH,CACD,QAAU,CACNA,UACH,CACJ,CAED,wBAEG,yBAFH,CAGH,CAtFD,CAwFAT,cAAc,UAAM,CAChBM,SADgB,CAEhBK,OACH,CAHD,C","file":"standalone.js","sourcesContent":["const fs = require('fs');\nconst browserify = require('browserify');\nconst sh = require('shelljs');\n\nconst folders = ['base-button', 'button', 'card', 'checkbox', 'common', 'config', 'dialog', 'element', 'fab', 'font-roboto', 'header-panel', 'icon', 'icon-button', 'layout', 'list', 'list-tile', 'menu', 'notification', 'polythene', 'radio-button', 'ripple', 'search', 'selection-control', 'shadow', 'slider', 'spinner', 'svg', 'switch', 'tabs', 'textfield', 'theme', 'toolbar'];\n\nconst commonUtils = ['easing', 'mixin', 'multiple', 'no-tap-delay', 'object.assign', 'scroll-to', 'styler', 'timer', 'transition-event', 'transition', 'validation-helper', 'webfontloader'];\n\nconst includes = ['layout/theme/flex', 'layout/theme/theme', 'notification/snackbar', 'notification/notification', 'spinner/ios-spinner', 'spinner/indeterminate-spinner', 'spinner/determinate-spinner'];\n\nconst noRequires = {\n    'common': 1,\n    'font-roboto': 1,\n    'layout': 1\n};\n\nconst filterNoRequires = (folder) => (!noRequires[folder]);\n\nconst formatRequire = (path) => (`require('${path}');`);\n\nconst requires = (formatFn) => {\n    formatFn = formatFn || ((str) => (str));\n    const components = [formatFn('mithril')].concat(folders.filter(filterNoRequires).map((folder) => {\n        return formatFn(`polythene/${folder}/${folder}`);\n    }));\n    const utils = [formatFn('fastclick')].concat(commonUtils.map((util) => {\n        return formatFn(`polythene/common/${util}`);\n    }));\n    const extra = includes.map((include) => {\n        return formatFn(`polythene/${include}`);\n    });\n    return components.concat(utils).concat(extra);\n};\n\nconst writeRequires = (callback) => {\n    console.log('standalone writeRequires');\n    fs.writeFile('standalone-src.js', requires(formatRequire).join('\\r'), 'utf8', () => (console.log('standalone writeRequires done'), callback()));\n};\n\nconst prepare = () => {\n    console.log('standalone prepare');\n    sh.mkdir('-p', 'tmp');\n    folders.map((folder) => {\n        sh.mv(folder, 'tmp/' + folder);\n    });\n    sh.mv('tmp', 'polythene');\n    console.log('standalone prepare done');\n};\n\nconst teardown = () => {\n    console.log('standalone teardown');\n    sh.mv('polythene', 'tmp');\n    sh.mv('tmp/*', '.');\n    sh.rm('-rf', 'tmp');\n    sh.rm('-rf', 'standalone-src.js');\n    console.log('standalone teardown done');\n};\n\nconst build = () => {\n    console.log('standalone build');\n    const createBundle = (entries, outfile) => {\n        try {\n            browserify({\n                entries: entries,\n                paths: ['.', 'node_modules'],\n                require: requires()\n            })\n            // .external('mithril')\n            .transform({\n                global: true\n            }, 'uglifyify')\n            .bundle()\n            .on('error', function(err) {\n                console.log('Error : ' + err.message);\n            })\n            .pipe(fs.createWriteStream(outfile).on('finish', teardown))\n            ;\n        }\n        catch (e) {\n            teardown();\n        }\n    };\n\n    createBundle([\n        'standalone-src.js'\n    ], 'polythene-standalone.js');\n};\n\nwriteRequires(() => {\n    prepare();\n    build();\n});\n"]}