{"version":3,"file":"polythene-scripts.js","sources":["../src/write-css.js"],"sourcesContent":["const autoprefixer = require(\"autoprefixer\");\nconst cssbeautify  = require(\"cssbeautify\");\nconst fs           = require(\"fs\");\nconst J2c          = require(\"j2c\");\nconst postcss      = require(\"postcss\");\nconst cssnano      = require(\"cssnano\");\nconst tar          = require(\"tar\");\n\nconst j2c = new J2c();\nconst COLOR_RED = \"\\x1b[31m\";\nconst COLOR_WHITE = \"\\x1b[37m\";\n\nconst makeStyleSheet = (...styles) =>\n  styles.reduce((acc, styleList) =>\n    // each style returns a list\n    Object.keys(styleList).length\n      ? (\n        styleList.forEach(style => {\n          const scoped = {\n            \"@global\": style\n          };\n          const sheet = j2c.sheet(scoped);\n          acc += sheet;      \n        }),\n        acc\n      )\n      : acc, \"\");\n\nconst beautifyCSS = cssString =>\n  cssbeautify(cssString, {\n    indent: \"  \"\n  });\n\nconst saveToFile = (path, cssString) => \n  fs.writeFileSync(path, cssString, \"ascii\", err => {  \n    // throws an error, you could also catch it here\n    if (err) throw err;\n  });\n\nexport const processCSS = ({ styles, path, autoPrefix }) => {\n  const cssString = styles.reduce((acc, current) => (\n    acc + makeStyleSheet(current)\n  ), \"\");\n  return { cssString, path, autoPrefix };\n};\n\nexport const writeCSS = ({ css, styles, path, autoPrefix, beautify, sourceMap=true, gzip }) => {\n  const cssString = css\n    ? css\n    : styles\n      ? styles.reduce((acc, current) => acc + makeStyleSheet(current), \"\")\n      : \"\";\n\n  const mapPath = `${path}.map`;\n\n  const plugins = [];\n  if (autoPrefix) {\n    plugins.push(autoprefixer());\n  }\n  plugins.push(cssnano({\n    preset:       \"default\",\n    reduceIdents: false,\n    zindex:       false,\n  }));\n\n  const options = sourceMap\n    ? {\n      to:  path,\n      map: { inline: false }\n    }\n    : {};\n\n  postcss(plugins)\n    .process(cssString, options)\n    .then(result => {\n      result.warnings().forEach(warn => {\n        console.warn(COLOR_RED, \"Warning\", COLOR_WHITE, warn.toString()); // eslint-disable-line no-console\n      });\n      saveToFile(path, beautify ? beautifyCSS(result.css) : result.css);\n      if (gzip) {\n        tar.c(\n          { gzip: true },\n          [path]\n        ).pipe(fs.createWriteStream(`${path}.gz`));\n      }\n      if (sourceMap) {\n        saveToFile(mapPath, result.map);\n      }\n    });\n};\n\n"],"names":["autoprefixer","require","cssbeautify","fs","J2c","postcss","cssnano","tar","j2c","COLOR_RED","COLOR_WHITE","makeStyleSheet","styles","reduce","acc","styleList","Object","keys","length","forEach","scoped","style","sheet","beautifyCSS","cssString","indent","saveToFile","path","writeFileSync","err","writeCSS","css","autoPrefix","beautify","sourceMap","gzip","current","mapPath","plugins","push","preset","reduceIdents","zindex","options","to","map","inline","process","then","result","warnings","console","warn","toString","c","pipe","createWriteStream"],"mappings":"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"}