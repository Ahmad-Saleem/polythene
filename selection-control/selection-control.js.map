{"version":3,"sources":["selection-control.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAIA,IAAM,cAAc;AAChB,WAAO,YAAP;AACA,WAAO,mBAAP;AACA,WAAO,mBAAP;AACA,SAAK,iBAAL;AACA,QAAI,gBAAJ;AACA,SAAK,iBAAL;AACA,cAAU,sBAAV;AACA,WAAO,mBAAP;AACA,aAAS,qBAAT;AACA,YAAQ,oBAAR;AACA,WAAO,mBAAP;CAXE;;AAcN,IAAM,cAAc;AAChB,WAAO,YAAY,KAAZ;AACP,aAAS,YAAY,OAAZ;AACT,YAAQ,YAAY,MAAZ;AACR,WAAO,YAAY,KAAZ;CAJL;;AAON,IAAM,eAAe,SAAf,YAAe,GAAsB;QAArB,6DAAO,yBAAc;;AACvC,WAAO,YAAY,IAAZ,CAAP,CADuC;CAAtB;;AAIrB,IAAM,aAAa,SAAb,UAAa,CAAC,IAAD,EAAqB;QAAd,6DAAO,kBAAO;;AACpC,QAAI,OAAO,KAAK,OAAL,KAAiB,UAAxB,EAAoC;AACpC,aAAK,UAAL,CAAgB,KAAK,OAAL,EAAhB,EADoC;KAAxC;;AAIA,QAAM,UAAU,KAAK,OAAL,EAAV,CAL8B;AAMpC,QAAM,MAAM,KAAK,GAAL,IAAY,KAAZ,CANwB;AAOpC,QAAM,OAAO,KAAK,IAAL,IAAa,EAAb,CAPuB;AAQpC,QAAM,QAAQ;AACV,eAAO,CACH,YAAY,KAAZ,EACA,KAAK,YAAL,EACC,UAAU,YAAY,EAAZ,GAAiB,YAAY,GAAZ,EAC3B,KAAK,QAAL,GAAgB,YAAY,QAAZ,GAAsB,IAAtC,EACD,aAAa,KAAK,IAAL,CALV,EAMH,KAAK,KAAL,CANG,CAOL,IAPK,CAOA,GAPA,CAAP;AAQA,YAAI,KAAK,EAAL,IAAW,EAAX;AACJ,gBAAQ,gBAAC,EAAD,EAAK,MAAL,EAAa,OAAb,EAAsB,IAAtB,EAA+B;AACnC,gBAAI,MAAJ,EAAY;AACR,uBADQ;aAAZ;AAGA,gBAAI,KAAK,MAAL,EAAa;AACb,qBAAK,MAAL,CAAY,EAAZ,EAAgB,MAAhB,EAAwB,OAAxB,EAAiC,IAAjC,EADa;aAAjB;SAJI;KAVN,CAR8B;AA2BpC,QAAM,UAAU,CACZ,uBAAE,OAAF,EAAW;AACP,eAAO,YAAY,KAAZ;AACP,kBAFO;AAGP,eAAO,KAAK,KAAL,EAAP;AACA,cAAM,KAAK,IAAL;AACN,wBALO;AAMP,gBAAQ,gBAAC,EAAD,EAAK,MAAL,EAAgB;AACpB,gBAAI,MAAJ,EAAY,OAAZ;AACA,iBAAK,UAAL,CAAgB,EAAhB,EAFoB;SAAhB;KANZ,CADY,EAYZ,uBAAE,OAAF,EAAW,OAAO,MAAP,CACP;AACI,eAAO,YAAY,KAAZ;KAFJ,EAIP,CAAE,KAAK,QAAL,GAAiB;AACf,iBAAS,mBAAM;AACX,gBAAI,KAAK,IAAL,KAAc,OAAd,IAAyB,OAAzB,EAAkC;AAClC,uBADkC;aAAtC;AAGA,iBAAK,MAAL,GAJW;SAAN;KADb,GAOI,IAPJ,CAJJ,EAYG,CACC,KAAK,aAAL,GAAqB,KAAK,aAAL,CAAmB,OAAnB,EAA4B,IAA5B,CAArB,GAAyD,IAAzD,EACA,KAAK,KAAL,GAAa,uBAAE,MAAF,EAAU,KAAK,KAAL,CAAvB,GAAqC,IAArC,CAdJ,CAZY,CAAV,CA3B8B;AAwDpC,WAAO,uBAAE,GAAF,EAAO,KAAP,EAAc,CAAC,KAAK,MAAL,EAAa,OAAd,EAAuB,KAAK,KAAL,CAArC,CAAP,CAxDoC;CAArB;;AA2DnB,IAAM,YAAY;AACd,gBAAY,sBAAe;YAAd,6DAAO,kBAAO;;;;;AAIvB,YAAM,iBAAiB,KAAjB,CAJiB;AAKvB,YAAI,SAAQ,KAAK,KAAL,IAAc,GAAd,CALW;AAMvB,YAAI,mBAAJ,CANuB;;AAQvB,YAAM,oBAAoB,SAApB,iBAAoB,CAAC,SAAD,EAAe;AACrC,gBAAI,OAAJ,EAAa;AACT,wBAAQ,OAAR,GAAkB,SAAlB,CADS;aAAb;SADsB,CARH;;AAcvB,YAAM,iBAAiB,SAAjB,cAAiB,GAAM;AACzB,gBAAI,OAAO,KAAK,OAAL,KAAiB,UAAxB,EAAoC;AACpC,oBAAM,IAAI,KAAK,OAAL,EAAJ,CAD8B;AAEpC,uBAAO,CAAC,KAAM,SAAN,GAAmB,CAApB,GAAwB,cAAxB,CAF6B;aAAxC,MAGO;AACH,uBAAO,IAAC,CAAK,OAAL,KAAiB,SAAjB,GAA8B,KAAK,OAAL,GAAe,cAA9C,CADJ;aAHP;SADmB,CAdA;;AAuBvB,YAAM,aAAa,SAAb,UAAa,CAAC,EAAD,EAAQ;AACvB,sBAAU,EAAV,CADuB;AAEvB,8BAAkB,gBAAlB,EAFuB;SAAR,CAvBI;;AA4BvB,YAAM,aAAa,SAAb,UAAa,CAAC,SAAD,EAAe;AAC9B,8BAAkB,SAAlB,EAD8B;AAE9B,gBAAI,KAAK,QAAL,EAAe;AACf,qBAAK,QAAL,CAAc;AACV,6BAAS,UAAU,QAAQ,OAAR,GAAkB,gBAA5B;AACT,iCAFU;AAGV,wBAAI,OAAJ;iBAHJ,EADe;aAAnB;SAFe,CA5BI;;AAuCvB,YAAM,SAAS,SAAT,MAAS,GAAM;AACjB,uBAAW,CAAC,QAAQ,OAAR,CAAZ,CADiB;SAAN,CAvCQ;;AA2CvB,eAAO;AACH,kCADG;AAEH,kCAFG;AAGH,qBAAS;uBAAO,UAAU,QAAQ,OAAR,GAAkB,gBAA5B;aAAP;AACT,0BAJG;AAKH,mBAAO;uBAAO;aAAP;SALX,CA3CuB;KAAf;AAmDZ,UAAM,cAAC,IAAD,EAAqB;YAAd,6DAAO,kBAAO;;AACvB,eAAO,WAAW,IAAX,EAAiB,IAAjB,CAAP,CADuB;KAArB;CApDJ;;kBAyDS","file":"selection-control.js","sourcesContent":["import 'polythene/common/object.assign';\nimport m from 'mithril';\nimport 'polythene/selection-control/theme/theme';\n\nconst CSS_CLASSES = {\n    block: 'pe-control',\n    label: 'pe-control__label',\n    input: 'pe-control__input',\n    box: 'pe-control__box',\n    on: 'pe-control--on',\n    off: 'pe-control--off',\n    disabled: 'pe-control--disabled',\n    small: 'pe-control--small',\n    regular: 'pe-control--regular',\n    medium: 'pe-control--medium',\n    large: 'pe-control--large'\n};\n\nconst typeClasses = {\n    small: CSS_CLASSES.small,\n    regular: CSS_CLASSES.regular,\n    medium: CSS_CLASSES.medium,\n    large: CSS_CLASSES.large\n};\n\nconst classForType = (mode = 'regular') => {\n    return typeClasses[mode];\n};\n\nconst createView = (ctrl, opts = {}) => {\n    if (typeof opts.checked === 'function') {\n        ctrl.setChecked(opts.checked());\n    }\n\n    const checked = ctrl.checked();\n    const tag = opts.tag || 'div';\n    const name = opts.name || '';\n    const props = {\n        class: [\n            CSS_CLASSES.block,\n            opts.defaultClass,\n            (checked ? CSS_CLASSES.on : CSS_CLASSES.off),\n            (opts.disabled ? CSS_CLASSES.disabled: null),\n            classForType(opts.size),\n            opts.class\n        ].join(' '),\n        id: opts.id || '',\n        config: (el, inited, context, vdom) => {\n            if (inited) {\n                return;\n            }\n            if (opts.config) {\n                opts.config(el, inited, context, vdom);\n            }\n        }\n    };\n    const content = [\n        m('input', {\n            class: CSS_CLASSES.input,\n            name,\n            value: ctrl.value(),\n            type: opts.type, // set by checkbox / radio-button\n            checked,\n            config: (el, inited) => {\n                if (inited) return;\n                ctrl.setInputEl(el);\n            }\n        }),\n        m('label', Object.assign(\n            {\n                class: CSS_CLASSES.label\n            },\n            (!opts.disabled) ? {\n                onclick: () => {\n                    if (opts.type === 'radio' && checked) {\n                        return;\n                    }\n                    ctrl.toggle();\n                }\n            } : null\n        ), [\n            opts.selectionView ? opts.selectionView(checked, opts) : null,\n            opts.label ? m('span', opts.label) : null\n        ])\n    ];\n    return m(tag, props, [opts.before, content, opts.after]);\n};\n\nconst component = {\n    controller: (opts = {}) => {\n        // Because this module also supports radio buttons (paired control elements)\n        // we won't keep a separate 'checked' value but instead keep the checked value\n        // as a HTMLElement checked state.\n        const defaultChecked = false;\n        let value = opts.value || '1';\n        let inputEl;\n\n        const setInputElChecked = (isChecked) => {\n            if (inputEl) {\n                inputEl.checked = isChecked;\n            }\n        };\n\n        const getOptsChecked = () => {\n            if (typeof opts.checked === 'function') {\n                const v = opts.checked();\n                return (v !== undefined) ? v : defaultChecked;\n            } else {\n                return (opts.checked !== undefined) ? opts.checked : defaultChecked;\n            }\n        };\n\n        const setInputEl = (el) => {\n            inputEl = el;\n            setInputElChecked(getOptsChecked());\n        };\n\n        const setChecked = (isChecked) => {\n            setInputElChecked(isChecked);\n            if (opts.getState) {\n                opts.getState({\n                    checked: inputEl ? inputEl.checked : getOptsChecked(),\n                    value,\n                    el: inputEl,\n                });\n            }\n        };\n\n        const toggle = () => {\n            setChecked(!inputEl.checked);\n        };\n\n        return {\n            setInputEl,\n            setChecked,\n            checked: () => (inputEl ? inputEl.checked : getOptsChecked()),\n            toggle,\n            value: () => (value)\n        };\n    },\n    view: (ctrl, opts = {}) => {\n        return createView(ctrl, opts);\n    }\n};\n\nexport default component;\n"]}