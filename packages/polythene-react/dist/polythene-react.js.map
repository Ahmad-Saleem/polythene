{"version":3,"file":"polythene-react.js","sources":["../src/core/keys.js","../src/core/renderer.js","../src/core/stateComponent.js","../src/ripple.js","../src/button.js"],"sourcesContent":["\nexport const keys = {\n  class:       \"className\",\n  formaction:  \"formAction\",\n  onblur:      \"onBlur\",\n  onclick:     \"onClick\",\n  onfocus:     \"onFocus\",\n  onkeydown:   \"onKeyDown\",\n  onkeyup:     \"onKeyUp\",\n  onmousedown: \"onMouseDown\",\n  onmouseout:  \"onMouseOut\",\n  onmouseover: \"onMouseOver\",\n  onmouseup:   \"onMouseUp\",\n  tabindex:    \"tabIndex\",\n};\n","import h from \"react-hyperscript\";\n\nexport const renderer = h;\n","import { Component } from \"react\";\nimport { renderer } from \"./renderer\";\nimport { keys } from \"./keys\";\n\nexport const stateComponent = ({\n  createContent,\n  createProps,\n  element,\n  onMount = () => {},\n  onUnmount = () => {},\n  state = {},\n}) => {\n  \n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.state = state;\n    }\n\n    componentDidMount() {\n      onMount(this.createVirtualNode());\n    }\n\n    componentWillUnmount() {\n      onUnmount(this.createVirtualNode());\n    }\n\n    createVirtualNode() {\n      return {\n        state: this.state,\n        attrs: this.props,\n        children: this.props.children,\n        dom: this.dom\n      };\n    }\n\n    render() {\n      const props = this.props;\n      const vnode = this.createVirtualNode();\n      const updateState = (attrs, value) => this.setState({[attrs]: value});\n      return renderer(\n        props.element || element,\n        Object.assign(\n          {},\n          createProps(vnode, { renderer, keys, updateState }),\n          { ref: dom => this.dom = dom }\n        ),\n        [\n          props.before,\n          createContent(vnode, { renderer, keys, updateState }),\n          props.after\n        ]\n      );\n    }\n  };\n};\n","import { stateComponent } from \"./core\";\nimport { ripple as component } from \"polythene-new-core\";\n\nexport const ripple = stateComponent(Object.assign({}, component));\n\nripple.theme = component.theme;\n","import { stateComponent } from \"./core\";\nimport { button as component } from \"polythene-new-core\";\nimport { ripple } from \"./ripple\";\n\nconst createProps = (vnode, args) => component.createProps(vnode, Object.assign(args, {ripple}));\nconst createContent = (vnode, args) => component.createContent(vnode, Object.assign(args, {ripple}));\n\nexport const button = stateComponent({\n  createProps,\n  createContent,\n  element: component.element\n});\n\nbutton.theme = component.theme;\n"],"names":["keys","renderer","h","stateComponent","createContent","createProps","element","onMount","onUnmount","state","props","this","createVirtualNode","children","dom","vnode","updateState","attrs","value","_this2","setState","_extends","ref","before","after","Component","ripple","component","theme","args","button"],"mappings":"klCACO,IAAMA,UACE,uBACA,oBACA,iBACA,kBACA,oBACA,oBACA,sBACA,yBACA,yBACA,wBACA,qBACA,YCXFC,EAAWC,2ZCEXC,EAAiB,eAC5BC,KAAAA,cACAC,IAAAA,YACAC,IAAAA,YACAC,QAAAA,aAAU,mBACVC,UAAAA,aAAY,mBACZC,MAAAA,gDAIcC,4EACJA,aACDD,MAAQA,mEAILE,KAAKC,sEAIHD,KAAKC,8EAKND,KAAKF,YACLE,KAAKD,eACFC,KAAKD,MAAMG,aAChBF,KAAKG,iDAKNJ,EAAQC,KAAKD,MACbK,EAAQJ,KAAKC,oBACbI,EAAc,SAACC,EAAOC,SAAUC,GAAKC,cAAWH,EAAQC,WACvDjB,GACLS,EAAMJ,SAAWA,EACjBe,KAEEhB,EAAYU,GAASd,WAAUD,OAAMgB,iBACnCM,IAAK,kBAAOH,GAAKL,IAAMA,MAGzBJ,EAAMa,OACNnB,EAAcW,GAASd,WAAUD,OAAMgB,gBACvCN,EAAMc,eArCOC,kLCVVC,EAASvB,EAAekB,KAAkBM,UAEvDD,GAAOE,MAAQD,SAAUC,8KCDnBvB,EAAc,SAACU,EAAOc,SAASF,UAAUtB,YAAYU,EAAOM,EAAcQ,GAAOH,aACjFtB,EAAgB,SAACW,EAAOc,SAASF,UAAUvB,cAAcW,EAAOM,EAAcQ,GAAOH,aAE9EI,EAAS3B,yCAGXwB,SAAUrB,SAGrBwB,GAAOF,MAAQD,SAAUC"}