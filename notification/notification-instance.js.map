{"version":3,"sources":["notification-instance.es6"],"names":[],"mappings":"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","file":"notification-instance.js","sourcesContent":["import 'polythene/common/object.assign';\nimport m from 'mithril';\nimport Timer from 'polythene/common/timer';\nimport transition from 'polythene/common/transition';\n\nconst CSS_CLASSES = {\n    content: 'pe-notification__content',\n    title: 'pe-notification__title',\n    multilineTitle: 'pe-notification__title--multiline',\n    action: 'pe-notification__action',\n    horizontal: 'pe-notification--horizontal',\n    vertical: 'pe-notification--vertical'\n};\n\nconst DEFAULT_TIME_OUT = 3;\n\nconst pause = (ctrl) => {\n    ctrl.isPaused = true;\n    if (ctrl.timer) {\n        ctrl.timer.pause();\n    }\n};\n\nconst unpause = (ctrl) => {\n    ctrl.isPaused = false;\n    if (ctrl.timer) {\n        ctrl.timer.resume();\n    }\n};\n\nconst stopTimer = (ctrl) => {\n    if (ctrl.timer) {\n        ctrl.timer.stop();\n    }\n};\n\nconst show = (ctrl, opts) => {\n    stopTimer(ctrl);\n    ctrl.isTransitioning = true;\n    return transition.show(Object.assign(\n        {},\n        opts,\n        ctrl.transitions.show(ctrl, opts)\n    )).then(() => {\n        ctrl.isTransitioning = false;\n        if (ctrl.didShow) {\n            // notify multiple\n            ctrl.didShow(ctrl.instanceId);\n        }\n        if (opts.didShow) {\n            // notify other listener\n            opts.didShow(opts.id);\n        }\n        // set timer to hide in a few seconds\n        const timeout = opts.timeout;\n        if (timeout === 0) {\n            // do not time out\n        } else {\n            const timeoutSeconds = (timeout !== undefined) ? timeout : DEFAULT_TIME_OUT;\n            ctrl.timer = new Timer(() => {\n                hide(ctrl, opts);\n            }, timeoutSeconds * 1000);\n        }\n    });\n};\n\nconst hide = (ctrl, opts) => {\n    stopTimer(ctrl);\n    ctrl.isTransitioning = true;\n    return transition.hide(Object.assign(\n        {},\n        opts,\n        ctrl.transitions.hide(ctrl, opts)\n    )).then(() => {\n        stopTimer(ctrl);\n        ctrl.isTransitioning = false;\n        if (ctrl.didHide) {\n            // notify multiple\n            ctrl.didHide(ctrl.instanceId);\n        }\n        if (opts.didHide) {\n            // notify other listener\n            opts.didHide(opts.id);\n        }\n        m.redraw(); // removes remainder of drawn component\n    });\n};\n\nconst createView = (ctrl, opts = {}) => {\n    const tag = opts.tag || 'div';\n    const props = {\n        class: [ctrl.class, (opts.layout === 'vertical' ? CSS_CLASSES.vertical : CSS_CLASSES.horizontal), opts.class].join(' '),\n        id: opts.id || '',\n        config: (el, inited, context, vdom) => {\n            if (inited) return;\n            if (opts.config) {\n                opts.config(el, inited, context, vdom);\n            }\n            ctrl.el = el;\n\n            // container element is used for transitioning the notification\n            ctrl.containerEl = document.querySelector(opts.containerSelector || '.pe-notification__holder');\n            show(ctrl, opts);\n        },\n        onclick: (e) => {\n            e.preventDefault();\n        }\n    };\n    const titleConfig = (el, inited) => {\n        if (inited) return;\n        const height = el.getBoundingClientRect().height;\n        const lineHeight = parseInt(window.getComputedStyle(el).lineHeight, 10);\n        const paddingTop = parseInt(window.getComputedStyle(el).paddingTop, 10);\n        const paddingBottom = parseInt(window.getComputedStyle(el).paddingBottom, 10);\n        if (height > (lineHeight + paddingTop + paddingBottom)) {\n            el.classList.add(CSS_CLASSES.multilineTitle);\n        }\n    };\n    const title = opts.title;\n    const content = m('div', {\n        class: CSS_CLASSES.content\n    }, [\n        title ? m('div', {\n            class: CSS_CLASSES.title,\n            config: titleConfig\n        }, title) : null,\n        opts.action ? m('div', {\n            class: CSS_CLASSES.action\n        }, [\n            opts.action\n        ]) : null\n    ]);\n    return m(tag, props, content);\n};\n\nconst component = {\n    controller: (instanceData = {}) => {\n        // instanceData contains {id, opts}\n        return Object.assign({}, instanceData, {\n            el: null,\n            containerEl: null,\n            dismissEl: null,\n            isTransitioning: false,\n            timer: null,\n            isPaused: false\n        });\n    },\n    view: (ctrl, instanceData) => {\n        // instanceData contains {id, opts}\n        const opts = (typeof instanceData.opts === 'function')\n            ? instanceData.opts()\n            : instanceData.opts;\n        if (instanceData.hide && !ctrl.isTransitioning) {\n            hide(ctrl, opts);\n        }\n        if (instanceData.pause && !ctrl.isPaused) {\n            pause(ctrl, opts);\n        } else if (instanceData.unpause && ctrl.isPaused) {\n            unpause(ctrl, opts);\n        }\n        return createView(ctrl, opts);\n    }\n};\n\nexport default component;\n"]}