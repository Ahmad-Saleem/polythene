{"version":3,"file":"test-layout-styles.js","sources":["../src/block-styles.js","../src/tests-generic.js","../src/tests-mithril.js","../src/tests-react.js"],"sourcesContent":["\nimport { flex } from \"polythene-core-css\";\nconst blockSize = 40;\n\nexport const styles = [{\n  \" .block\": {\n    \"min-width\": blockSize + \"px\",\n    \"min-height\": blockSize + \"px\",\n    color: \"#fff\",\n    \"text-align\": \"center\",\n    \"line-height\": blockSize + \"px\",\n\n    \"&:nth-child(1)\": {\n      background: \"#311B92\"\n    },\n    \"&:nth-child(2)\": {\n      background: \"#4527A0\"\n    },\n    \"&:nth-child(3)\": {\n      background: \"#512DA8\"\n    },\n    \"&:nth-child(4)\": {\n      background: \"#5E35B1\"\n    },\n    \"&.fixed-height\": {\n      height: \"90px\",\n      position: \"relative\"\n    }\n  },\n  \" .vertical-blocks\": [\n    flex.layoutVertical\n  ]\n}];\n\nexport const createBlocks = renderer => [1, 2, 3, 4].map(num =>\n  renderer(\".block\", num));\n","import { styles } from \"./block-styles\";\nimport { styler } from \"polythene-core-css\";\nstyler.add(\"css-classes\", styles);\n\nexport default ({ renderer: h, layoutComponent, createBlocks }) => {\n  const blocks = createBlocks(h);\n\n  return [\n    {\n      name: \"Should be aligned horizontally\",\n      component: layoutComponent(\n        h(\".layout\",\n          null, blocks\n        )\n      )\n    },\n    {\n      name: \"Should be aligned vertically\",\n      component: layoutComponent(\n        h(\".vertical-blocks\",\n          null, blocks\n        )\n      )\n    },\n    {\n      name: \"Should be stacked vertically and inline\",\n      component: layoutComponent(\n        h(\".layout.vertical.inline\",\n          null, blocks\n        )\n      )\n    },\n    {\n      name: \"Should be reversed\",\n      component: layoutComponent(\n        h(\".layout.horizontal.reverse\",\n          null, blocks\n        )\n      )\n    },\n    {\n      name: \"Should be justified horizontally\",\n      component: layoutComponent(\n        h(\".layout.justified\",\n          null, blocks\n        )\n      )\n    },\n    {\n      name: \"Should fill the space\",\n      component: layoutComponent(\n        h(\".fixed-height\",\n          null, h(\".block.pe-fit\")\n        )\n      )\n    }\n  ];\n};\n","import genericTests from \"./tests-generic\";\nimport { renderer } from \"polythene-mithril\";\nimport { createBlocks } from \"./block-styles\";\n\nconst layoutComponent = content => ({\n  view: () => content\n});\n\nconst mithrilTests = () => {\n  return [];\n};\n\nexport default []\n  .concat(genericTests({ renderer, layoutComponent, createBlocks }))\n  .concat(mithrilTests({ renderer, layoutComponent, createBlocks }));\n","import genericTests from \"./tests-generic\";\nimport { renderer } from \"polythene-react\";\nimport { createBlocks } from \"./block-styles\";\n\nconst layoutComponent = content => () => content;\n\nconst reactTests = () => {\n  return [];\n};\n\nexport default []\n  .concat(genericTests({ renderer, layoutComponent, createBlocks }))\n  .concat(reactTests({ renderer, layoutComponent, createBlocks }));\n"],"names":["styles","blockSize","flex","layoutVertical","createBlocks","map","renderer","num","styler","add","h","layoutComponent","blocks","content","concat","genericTests"],"mappings":"maAEA,IAEaA,4BAEIC,oBACCA,aACP,oBACO,uBACCA,oCAGD,wCAGA,wCAGA,wCAGA,oCAGJ,gBACE,kCAIZC,OAAKC,kBAIIC,EAAe,mBAAa,EAAG,EAAG,EAAG,GAAGC,IAAI,kBACvDC,GAAS,SAAUC,KCjCrBC,UAAOC,IAAI,cAAeT,EAE1B,sBAA4BU,KAAVJ,SAAaK,IAAAA,gBACvBC,GAASR,IAD+BA,cAClBM,gBAIlB,2CACKC,EACTD,EAAE,UACA,KAAME,WAKJ,yCACKD,EACTD,EAAE,mBACA,KAAME,WAKJ,oDACKD,EACTD,EAAE,0BACA,KAAME,WAKJ,+BACKD,EACTD,EAAE,6BACA,KAAME,WAKJ,6CACKD,EACTD,EAAE,oBACA,KAAME,WAKJ,kCACKD,EACTD,EAAE,gBACA,KAAMA,EAAE,sBChDZC,EAAkB,wBAChB,iBAAME,WAQXC,OAAOC,GAAeT,oBAAUK,kBAAiBP,kBACjDU,wBCVGH,EAAkB,kBAAW,kBAAME,UAOtCC,OAAOC,GAAeT,oBAAUK,kBAAiBP,kBACjDU"}