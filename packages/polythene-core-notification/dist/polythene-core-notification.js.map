{"version":3,"file":"polythene-core-notification.js","sources":["../src/classes.js","../src/notification-instance.js","../src/vars.js","../src/transitions.js"],"sourcesContent":["export default {\n  component:      \"pe-notification\",\n\n  // elements\n  action:         \"pe-notification__action\",\n  content:        \"pe-notification__content\",\n  holder:         \"pe-notification__holder\",\n  placeholder:    \"pe-notification__placeholder\",\n  title:          \"pe-notification__title\",\n\n  // states\n  hasContainer:   \"pe-notification--container\",\n  horizontal:     \"pe-notification--horizontal\",\n  multilineTitle: \"pe-notification__title--multiline\",\n  vertical:       \"pe-notification--vertical\",\n};","import { filterSupportedAttributes, show, hide, isClient, isServer } from \"polythene-core\";\nimport { Timer } from \"polythene-utilities\";\nimport classes from \"./classes\";\n\nconst DEFAULT_TIME_OUT = 3;\n\nexport const getElement = vnode =>\n  vnode.attrs.element || \"div\";\n\nconst pauseInstance = state => {\n  state.paused(true);\n  if (state.timer) {\n    state.timer.pause();\n  }\n};\n\nconst unpauseInstance = state => {\n  state.paused(false);\n  if (state.timer) {\n    state.timer.resume();\n  }\n};\n\nconst stopTimer = state => {\n  if (state.timer) {\n    state.timer.stop();\n  }\n};\n\nconst prepareShow = (state, attrs) => {\n  if (!state.containerEl && isClient) {\n    // attrs.holderSelector is passed as option to Multiple\n    state.containerEl = document.querySelector(attrs.containerSelector || attrs.holderSelector);\n  }\n  if (!state.containerEl && isClient) {\n    console.error(\"No container element found\"); // eslint-disable-line no-console\n  }\n  if (attrs.containerSelector && state.containerEl) {\n    state.containerEl.classList.add(classes.hasContainer);\n  }\n};\n\nconst showInstance = (state, attrs) => {\n  if (state.transitioning()) {\n    return Promise.resolve();\n  }\n  state.transitioning(true);\n  stopTimer(state);\n  prepareShow(state, attrs);\n  const id = attrs.instanceId;\n  const transitions = attrs.transitions;\n  return show(Object.assign({},\n    attrs,\n    transitions.show(Object.assign(\n      {},\n      attrs,\n      {\n        containerEl: state.containerEl,\n        el: state.el,\n      }\n    ))\n  )).then(() => {\n    if (attrs.multipleDidShow) {\n      attrs.multipleDidShow(id); // this will call attrs.didShow\n    }\n    // set timer to hide in a few seconds\n    const timeout = attrs.timeout;\n    if (timeout === 0) {\n      // do not time out\n    } else {\n      const timeoutSeconds = timeout !== undefined\n        ? timeout\n        : DEFAULT_TIME_OUT;\n      state.timer.start(() => {\n        hideInstance(state, attrs);\n      }, timeoutSeconds);\n    }\n    state.visible(true);\n    state.transitioning(false);\n  });\n};\n\nconst hideInstance = (state, attrs) => {\n  if (state.transitioning()) {\n    return Promise.resolve();\n  }\n  state.transitioning(true);\n  stopTimer(state);\n  const id = attrs.instanceId;\n  const transitions = attrs.transitions;\n  return hide(Object.assign({},\n    attrs,\n    transitions.hide(Object.assign(\n      {},\n      attrs,\n      {\n        containerEl: state.containerEl,\n        el: state.el,\n      }\n    ))\n  )).then(() => {\n    if (attrs.multipleDidHide) {\n      attrs.multipleDidHide(id); // this will call attrs.didHide\n    }\n    state.visible(false);\n    state.transitioning(false);\n  });\n};\n\nconst setTitleStyles = titleEl => {\n  if (isServer) return;\n  const height = titleEl.getBoundingClientRect().height;\n  const lineHeight = parseInt(window.getComputedStyle(titleEl).lineHeight, 10);\n  const paddingTop = parseInt(window.getComputedStyle(titleEl).paddingTop, 10);\n  const paddingBottom = parseInt(window.getComputedStyle(titleEl).paddingBottom, 10);\n  if (height > (lineHeight + paddingTop + paddingBottom)) {\n    titleEl.classList.add(classes.multilineTitle);\n  }\n};\n\nexport const getInitialState = (vnode, createStream) => {\n  const transitioning = createStream(false);\n  const paused = createStream(false);\n  const mounted = createStream(false);\n  const visible = createStream(false);\n  return {\n    cleanUp:        undefined,\n    containerEl:    undefined,\n    dismissEl:      undefined,\n    el:             undefined,\n    timer:          new Timer(),\n    paused,\n    transitioning,\n    visible,\n    mounted,\n    redrawOnUpdate: createStream.merge([visible])\n  };\n};\n\nexport const onMount = vnode => {\n  const dom = vnode.dom;\n  if (!dom) {\n    return;\n  }\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  state.el = dom;\n  const titleEl = state.el.querySelector(`.${classes.title}`);\n  if (titleEl) {\n    setTitleStyles(titleEl);\n  }\n  if (attrs.showInstance && !state.visible()) {\n    showInstance(state, attrs);\n  }\n  state.mounted(true);\n};\n\nexport const onUnMount = vnode => (\n  // vnode.attrs.multipleClear(),\n  vnode.state.mounted(false)\n);\n\nexport const createProps = (vnode, { keys: k }) => {\n  const attrs = vnode.attrs;\n  return Object.assign(\n    {},\n    filterSupportedAttributes(attrs),\n    {\n      className: [\n        classes.component,\n        attrs.tone === \"light\" ? null : \"pe-dark-tone\", // default dark tone\n        attrs.tone === \"light\" ? \"pe-light-tone\" : null,\n        attrs.containerSelector ? classes.hasContainer : null,\n        attrs.layout === \"vertical\" ? classes.vertical : classes.horizontal,\n        attrs.tone === \"dark\" ? \"pe-dark-tone\" : null,\n        attrs.tone === \"light\" ? \"pe-light-tone\" : null,\n        attrs.className || attrs[k.class],\n      ].join(\" \"),\n      [k.onclick]: e => e.preventDefault()\n    }\n  );\n};\n\nexport const createContent = (vnode, { renderer: h }) => {\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  if (state.mounted() && !state.transitioning()) {\n    if (attrs.hideInstance && state.visible()) {\n      hideInstance(state, attrs);\n    } else if (attrs.showInstance && !state.visible()) {\n      showInstance(state, attrs);\n    }\n  }\n  if (attrs.pauseInstance && !state.paused()) {\n    pauseInstance(state, attrs);\n  } else if (attrs.unpauseInstance && state.paused()) {\n    unpauseInstance(state, attrs);\n  }\n\n  return h(\"div\",\n    {\n      className: classes.content,\n      style: attrs.style\n    },\n    attrs.content || [\n      attrs.title\n        ? h(\"div\",\n          { className: classes.title },\n          attrs.title\n        )\n        : null,\n      attrs.action\n        ? h(\"div\",\n          { className: classes.action },\n          attrs.action\n        )\n        : null\n    ]\n  );\n};\n","import { vars } from \"polythene-theme\";\n\nconst rgba = (colorStr, opacity = 1) =>\n  `rgba(${colorStr}, ${opacity})`;\n\nconst buttonPaddingH = 8; // padding, inner text space\n\nexport default {\n  width:                  274,\n  min_height:             80,\n  border_radius:          vars.unit_block_border_radius,\n  title_padding_h:        buttonPaddingH,\n  title_single_padding_v: 14,\n  title_multi_padding_v:  20,\n  side_padding:           24 - buttonPaddingH,\n  font_size:              14,\n  line_height:            20,\n\n  color_light_background: rgba(vars.color_light_background),\n  color_light_text:       rgba(vars.color_light_foreground, vars.blend_light_dark_primary),\n\n  color_dark_background:  rgba(vars.color_dark_background),\n  color_dark_text:        rgba(vars.color_dark_foreground, vars.blend_light_text_primary)\n};\n","const ANIMATION_DURATION = .5;\n\nconst show = ({ el, showDuration, showDelay }) => ({\n  el,\n  showDuration: showDuration || ANIMATION_DURATION,\n  showDelay:    showDelay || 0,\n  beforeShow:   () => el.style.opacity = 0,\n  show:         () => el.style.opacity = 1,\n});\n\nconst hide = ({ el, hideDuration, hideDelay }) => ({\n  el,\n  hideDuration: hideDuration || ANIMATION_DURATION,\n  hideDelay:    hideDelay || 0,\n  hide:         () => el.style.opacity = 0,\n});\n\nexport default {\n  show,\n  hide\n};\n"],"names":["getElement","vnode","attrs","element","pauseInstance","paused","state","timer","pause","unpauseInstance","resume","stopTimer","stop","prepareShow","containerEl","isClient","document","querySelector","containerSelector","holderSelector","error","classList","add","classes","hasContainer","showInstance","transitioning","Promise","resolve","id","instanceId","transitions","show","_extends","el","then","multipleDidShow","timeout","timeoutSeconds","undefined","start","visible","hideInstance","hide","multipleDidHide","setTitleStyles","isServer","titleEl","getBoundingClientRect","height","parseInt","window","getComputedStyle","lineHeight","paddingTop","paddingBottom","multilineTitle","getInitialState","createStream","mounted","Timer","merge","onMount","dom","title","onUnMount","createProps","k","keys","filterSupportedAttributes","component","tone","layout","vertical","horizontal","className","class","join","onclick","e","preventDefault","createContent","h","renderer","content","style","action","rgba","colorStr","vars","unit_block_border_radius","color_light_background","color_light_foreground","blend_light_dark_primary","color_dark_background","color_dark_foreground","blend_light_text_primary","showDuration","showDelay","opacity","hideDuration","hideDelay"],"mappings":"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"}