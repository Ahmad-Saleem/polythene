{"version":3,"file":"polythene-mithril-base.js","sources":["../src/keys.js","../src/renderer.js","../src/statefulComponent.js","../src/statelessComponent.js"],"sourcesContent":["\nexport const keys = {\n  class:       \"class\",\n  formaction:  \"formaction\",\n  onblur:      \"onblur\",\n  onclick:     \"onclick\",\n  onfocus:     \"onfocus\",\n  onkeydown:   \"onkeydown\",\n  onkeyup:     \"onkeyup\",\n  onmousedown: \"onmousedown\",\n  onmouseout:  \"onmouseout\",\n  onmouseover: \"onmouseover\",\n  onmouseup:   \"onmouseup\",\n  tabindex:    \"tabindex\",\n};\n","import m from \"mithril\";\n\nexport const renderer = m;\n","import { renderer } from \"./renderer\";\nimport { keys } from \"./keys\";\n\nexport const statefulComponent = ({\n  createContent,\n  createProps,\n  getInitialState = () => ({}),\n  element,\n  onMount = () => {},\n  onUnmount = () => {},\n  state = {},\n}) => {\n\n  const createVirtualNode = vnode => \n    Object.assign({}, vnode, { updateState: updater(vnode) });\n\n  const updater = vnode => (attr, value, callback) => {\n    vnode.state[attr] = value;\n    setTimeout(() => {\n      renderer.redraw();\n      if (callback) {\n        callback();\n      }\n    }, 0);\n  };\n\n  const oninit = vnode => \n    vnode.state = Object.assign(\n      vnode.state, \n      state,\n      getInitialState(vnode.attrs)\n    );\n\n  const view = vnode => {\n    const vnode1 = createVirtualNode(vnode);\n    return renderer(\n      vnode.attrs.element || element,\n      createProps(vnode1, { renderer, keys }),\n      [\n        vnode.attrs.before,\n        createContent(vnode1, { renderer, keys }),\n        vnode.attrs.after\n      ]\n    );\n  };\n\n  return {\n    view,\n    oninit: vnode => oninit(createVirtualNode(vnode)),\n    oncreate: vnode => onMount(createVirtualNode(vnode)),\n    onremove: vnode => onUnmount(createVirtualNode(vnode))\n  };\n};\n","import { renderer } from \"./renderer\";\nimport { keys } from \"./keys\";\n\nexport const statelessComponent = ({\n  createContent,\n  createProps,\n  element,\n}) => {\n\n  const view = vnode => {\n    return renderer(\n      vnode.attrs.element || element,\n      createProps(vnode, { renderer, keys }),\n      [\n        vnode.attrs.before,\n        createContent(vnode, { renderer, keys }),\n        vnode.attrs.after\n      ]\n    );\n  };\n\n  return {\n    view\n  };\n};\n"],"names":["keys","renderer","m","statefulComponent","createContent","createProps","getInitialState","element","onMount","onUnmount","state","createVirtualNode","_extends","vnode","updateState","updater","attr","value","callback","redraw","oninit","attrs","vnode1","before","after","statelessComponent"],"mappings":"uQACO,IAAMA,UACE,mBACA,oBACA,iBACA,kBACA,oBACA,oBACA,sBACA,yBACA,yBACA,wBACA,qBACA,YCXFC,EAAWC,sKCCXC,EAAoB,eAC/BC,KAAAA,cACAC,IAAAA,gBACAC,gBAAAA,aAAkB,uBAClBC,IAAAA,YACAC,QAAAA,aAAU,mBACVC,UAAAA,aAAY,mBACZC,MAAAA,kBAGMC,EAAoB,kBACxBC,MAAkBC,GAASC,YAAaC,EAAQF,MAE5CE,EAAU,kBAAS,UAACC,EAAMC,EAAOC,KAC/BR,MAAMM,GAAQC,aACT,aACAE,SACLD,QAGH,KAGCE,EAAS,kBACbP,GAAMH,MAAQE,EACZC,EAAMH,MACNA,EACAJ,EAAgBO,EAAMQ,qBAGb,eACLC,GAASX,EAAkBE,SAC1BZ,GACLY,EAAMQ,MAAMd,SAAWA,EACvBF,EAAYiB,GAAUrB,WAAUD,UAE9Ba,EAAMQ,MAAME,OACZnB,EAAckB,GAAUrB,WAAUD,SAClCa,EAAMQ,MAAMG,gBAOR,kBAASJ,GAAOT,EAAkBE,cAChC,kBAASL,GAAQG,EAAkBE,cACnC,kBAASJ,GAAUE,EAAkBE,OC/CtCY,EAAqB,eAChCrB,KAAAA,cACAC,IAAAA,YACAE,IAAAA,oBAGa,kBACJN,GACLY,EAAMQ,MAAMd,SAAWA,EACvBF,EAAYQ,GAASZ,WAAUD,UAE7Ba,EAAMQ,MAAME,OACZnB,EAAcS,GAASZ,WAAUD,SACjCa,EAAMQ,MAAMG"}