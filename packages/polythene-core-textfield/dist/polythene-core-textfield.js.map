{"version":3,"file":"polythene-core-textfield.js","sources":["../../polythene-css-classes/textfield.js","../src/textfield.js","../src/vars.js"],"sourcesContent":["\nexport default {\n  component:         \"pe-textfield\",\n\n  // elements\n  counter:           \"pe-textfield__counter\",\n  error:             \"pe-textfield__error\",\n  errorPlaceholder:  \"pe-textfield__error-placeholder\",\n  focusHelp:         \"pe-textfield__help-focus\",\n  help:              \"pe-textfield__help\",\n  input:             \"pe-textfield__input\",\n  inputArea:         \"pe-textfield__input-area\",\n  label:             \"pe-textfield__label\",\n  optionalIndicator: \"pe-textfield__optional-indicator\",\n  requiredIndicator: \"pe-textfield__required-indicator\",\n\n  // states\n  hasCounter:        \"pe-textfield--counter\",\n  hasFloatingLabel:  \"pe-textfield--floating-label\",\n  hasFullWidth:      \"pe-textfield--full-width\",\n  hideClear:         \"pe-textfield--hide-clear\",\n  hideSpinner:       \"pe-textfield--hide-spinner\",\n  hideValidation:    \"pe-textfield--hide-validation\",\n  isDense:           \"pe-textfield--dense\",\n  isRequired:        \"pe-textfield--required\",\n  stateDirty:        \"pe-textfield--dirty\",\n  stateDisabled:     \"pe-textfield--disabled\",\n  stateFocused:      \"pe-textfield--focused\",\n  stateInvalid:      \"pe-textfield--invalid\",\n  stateReadonly:     \"pe-textfield--readonly\",\n};\n","import { filterSupportedAttributes, pointerStartEvent } from \"polythene-core\";\nimport classes from \"polythene-css-classes/textfield\";\n\nexport const getElement = vnode =>\n  vnode.attrs.element || \"div\";\n\nconst MINIMUM_FOCUS_INTERVAL = 150;\n\nconst DEFAULT_VALID_STATE = {\n  invalid: false,\n  message: undefined\n};\n\nconst validateCustom = (state, attrs) => {\n  const el = state.inputEl();\n  if (!el) {\n    return DEFAULT_VALID_STATE;\n  }\n  const validState = attrs.validate(state.inputEl().value);\n  return {\n    invalid: validState && !validState.valid,\n    message: validState && validState.error\n  };\n};\n\nconst validateCounter = (state, attrs) => ({\n  invalid: state.inputEl().value.length > attrs.counter,\n  message: attrs.error\n});\n\nconst validateHTML = (state, attrs) => ({\n  invalid: !state.inputEl().checkValidity(),\n  message: attrs.error\n});\n\nconst getValidStatus = (state, attrs) => {\n  let status = DEFAULT_VALID_STATE;\n\n  // attrs.validateResetOnClear: reset validation when field is cleared\n  if (state.isTouched() && state.isInvalid() && state.inputEl().value.length === 0 && attrs.validateResetOnClear) {\n    state.isTouched(false);\n    state.isInvalid(false);\n    state.error(undefined);\n  }\n  if (!status.invalid && attrs.counter) {\n    status = validateCounter(state, attrs);\n  }\n  if (!status.invalid && state.inputEl() && state.inputEl().checkValidity) {\n    status = validateHTML(state, attrs);\n  }\n  if (!status.invalid && attrs.validate) {\n    status = validateCustom(state, attrs);\n  }\n  return status;\n};\n\nconst checkValidity = vnode => {\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  // default\n  \n  const status = attrs.valid !== undefined\n    ? {\n      invalid: !attrs.valid,\n      message: attrs.error\n    }\n    : (!state.isTouched() && !attrs.validateAtStart)\n      ? DEFAULT_VALID_STATE\n      : getValidStatus(state, attrs);\n  const previousInvalid = state.isInvalid();\n  state.error(status.message);\n\n  if (status.invalid !== previousInvalid) {\n    state.isInvalid(status.invalid);\n  }\n  if (!status.invalid) {\n    state.error(undefined);\n  }\n};\n\nconst notifyState = vnode => {\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  if (attrs.onChange) {\n    const status = getValidStatus(state, attrs);\n    attrs.onChange({\n      focus:   state.hasFocus(),\n      dirty:   state.isDirty(),\n      el:      state.inputEl(),\n      invalid: status.invalid,\n      error:   status.error,\n      value:   state.inputEl().value,\n    });\n  }\n};\n\nconst ignoreEvent = (attrs, name) =>\n  attrs.ignoreEvents && attrs.ignoreEvents.indexOf(name) !== -1;\n\nexport const getInitialState = (vnode, createStream) => {\n  const attrs = vnode.attrs;\n\n  const defaultValue = attrs.defaultValue !== undefined && attrs.defaultValue !== null\n    ? attrs.defaultValue.toString()\n    : attrs.value !== undefined && attrs.value !== null\n      ? attrs.value.toString()\n      : \"\";\n\n  const el = createStream(null);\n  const inputEl = createStream(null);\n  const setValue = createStream({});\n  const error = createStream(attrs.error);\n  const hasFocus = createStream(attrs.focus || false);\n  const setFocus = createStream(false);\n  const isTouched = createStream(false); // true when any change is made\n  const isDirty = createStream(defaultValue !== \"\"); // true for any input\n  const isInvalid = createStream(false);\n  const previousValue = createStream(undefined);\n  const didSetFocusTime = 0;\n\n  return {\n    defaultValue,\n    didSetFocusTime,\n    el,\n    error,\n    hasFocus,\n    inputEl,\n    isDirty,\n    isInvalid,\n    isTouched,\n    previousValue,\n    setFocus,\n    setValue,\n    redrawOnUpdate: createStream.merge([inputEl, isInvalid, isDirty])\n  };\n};\n\nexport const onMount = vnode => {\n  const dom = vnode.dom;\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n\n  state.el(dom);\n  const inputType = attrs.multiLine ? \"textarea\" : \"input\";\n  const inputEl = dom.querySelector(inputType);\n  vnode.state.inputEl(inputEl);\n  state.inputEl().value = state.defaultValue;\n\n  state.setValue.map(({ type, focus }) => (\n    focus !== undefined && state.setFocus(focus),\n    type === \"input\" && (attrs.validateOnInput || attrs.counter) && state.isTouched(state.inputEl().value !== state.defaultValue),\n    type !== \"input\" && state.isTouched(state.inputEl().value !== state.defaultValue),\n    type === \"onblur\" && state.isTouched(true),\n    state.isDirty(state.inputEl().value !== \"\"),\n    checkValidity(vnode),\n    notifyState(vnode),\n    state.previousValue(state.inputEl().value)\n  ));\n\n  state.setFocus.map(focusState => {\n    // Prevent autocomplete from getting in a loop\n    if ((state.didSetFocusTime + MINIMUM_FOCUS_INTERVAL) > new Date().getTime()) {\n      return;\n    }\n    state.hasFocus(focusState);\n    if (focusState && state.inputEl()) {\n      // Draw in next tick, to prevent getting an immediate onblur\n      // Explicit setting of focus needed for most browsers other than Safari\n      setTimeout(() => (\n        state.inputEl() && state.inputEl().focus && state.inputEl().focus(),\n        state.didSetFocusTime = new Date().getTime()\n      ), 0);\n    }\n  });\n\n  notifyState(vnode);\n};\n\nexport const onUpdate = vnode => {\n  checkValidity(vnode);\n};\n\nexport const createProps = (vnode, { keys: k }) => {\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  const isInvalid = state.isInvalid();\n\n  return Object.assign(\n    {},\n    filterSupportedAttributes(attrs),\n    {\n      className: [\n        classes.component,\n        isInvalid                   ? classes.stateInvalid : \"\",\n        state.hasFocus()            ? classes.stateFocused : \"\",\n        state.isDirty()             ? classes.stateDirty : \"\",\n        attrs.floatingLabel         ? classes.hasFloatingLabel : \"\",\n        attrs.disabled              ? classes.stateDisabled : \"\",\n        attrs.readonly              ? classes.stateReadonly : \"\",\n        attrs.dense                 ? classes.isDense : \"\",\n        attrs.required              ? classes.isRequired : \"\",\n        attrs.fullWidth             ? classes.hasFullWidth : \"\",\n        attrs.counter               ? classes.hasCounter : \"\",\n        attrs.hideSpinner !== false && attrs.hideSpinner !== undefined ? classes.hideSpinner : \"\",\n        attrs.hideClear !== false   && attrs.hideClear !== undefined ? classes.hideClear : \"\",\n        attrs.hideValidation        ? classes.hideValidation : \"\",\n        attrs.tone === \"dark\"       ? \"pe-dark-tone\" : null,\n        attrs.tone === \"light\"      ? \"pe-light-tone\" : null,\n        attrs.className || attrs[k.class],\n      ].join(\" \")\n    }\n  );\n};\n\nexport const createContent = (vnode, { renderer: h, keys: k }) => {\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n\n  const inputEl = state.inputEl();\n  let error = attrs.error || state.error();\n  const isInvalid = state.isInvalid();\n  const inputType = attrs.multiLine ? \"textarea\" : \"input\";\n  const type = attrs.multiLine\n    ? null\n    : !attrs.type || attrs.type === \"submit\" || attrs.type === \"search\"\n      ? \"text\"\n      : attrs.type;\n  const showError = isInvalid && error !== undefined;\n  \n  const validates = !!(attrs.valid !== undefined || attrs.validate || attrs.min || attrs.max || attrs[k.minlength] || attrs[k.maxlength] || attrs.required || attrs.pattern);\n  const inactive = attrs.disabled || attrs[k.readonly];\n\n  if (attrs.focus && !state.hasFocus() && !inactive) {\n    state.setFocus(true);\n  }\n\n  const value = (attrs.value !== undefined && attrs.value !== null)\n    ? attrs.value\n    : inputEl\n      ? inputEl.value\n      : state.previousValue();\n  const valueStr = (value === undefined || value === null)\n    ? \"\"\n    : value.toString();\n\n  if (inputEl && state.previousValue() !== valueStr) {\n    inputEl.value = valueStr;\n    state.previousValue(valueStr);\n    setTimeout(() => state.setValue({ type: \"input\" }), 0); // perform in next tick to play nice with React\n  }\n\n  const requiredIndicator = attrs.required && attrs.requiredIndicator !== \"\"\n    ? h(\"span\",\n      {\n        key: \"required\",\n        className: classes.requiredIndicator\n      },\n      attrs.requiredIndicator || \"*\"\n    )\n    : null;\n  const optionalIndicator = !attrs.required && attrs.optionalIndicator\n    ? h(\"span\",\n      {\n        key: \"optional\",\n        className: classes.optionalIndicator\n      },\n      attrs.optionalIndicator\n    )\n    : null;\n  const label = attrs.label\n    ? [attrs.label, requiredIndicator, optionalIndicator]\n    : null;\n\n  return [\n    h(\"div\",\n      {\n        className: classes.inputArea,\n        key: \"input-area\"\n      },\n      [\n        label\n          ? h(\"label\",\n            {\n              key: \"label\",\n              className: classes.label,\n              // In IE10 the label catches click events on the field\n              // the function causes the input to get focus\n              [k[\"on\" + pointerStartEvent]]: () => {\n                if (!inactive) {\n                  setTimeout(() => {\n                    state.inputEl.focus();\n                  }, 0);\n                }\n              }\n            },\n            label)\n          : null,\n        h(inputType, Object.assign(\n          {},\n          {\n            key: \"input\",\n            className: classes.input,\n            disabled: attrs.disabled\n          },\n          type ? { type } : null,\n          attrs.name \n            ? { name: attrs.name }\n            : null,\n\n          !ignoreEvent(attrs, k.onclick)\n            ? {\n              [k.onclick]: () => {\n                if (inactive) {\n                  return;\n                }\n                // in case the browser does not give the field focus,\n                // for instance when the user tapped to the current field off screen\n                state.setFocus(true);\n                notifyState(vnode);\n              }\n            }\n            : null,\n\n          !ignoreEvent(attrs, k.onfocus)\n            ? {\n              [k.onfocus]: () => {\n                if (inactive) {\n                  return;\n                }\n                state.setFocus(true);\n                // set CSS class manually in case field gets focus but is off screen\n                // and no redraw is triggered\n                // at the next redraw state.hasFocus() will be read and the focus class be set\n                // in the props.class statement\n                if (state.el()) {\n                  state.el().classList.add(classes.stateFocused);\n                }\n                notifyState(vnode);\n              }\n            }\n            : null,\n              \n          !ignoreEvent(attrs, k.onblur)\n            ? {\n              [k.onblur]: () => {\n                state.setValue({ type: \"onblur\", focus: false });\n                // same principle as onfocus\n                state.el().classList.remove(classes.stateFocused);\n              }\n            }\n            : null,\n\n          !ignoreEvent(attrs, k.oninput)\n            ? {\n              [k.oninput]: () => {\n                // default input event\n                // may be overwritten by attrs.events\n                state.setValue({ type: \"input\" });\n              }\n            }\n            : null,\n\n          !ignoreEvent(attrs, k.onkeydown)\n            ? {\n              [k.onkeydown]: e => {\n                if (e.key === \"Enter\") {\n                  state.isTouched(true);\n                } else if (e.key === \"Escape\") {\n                  inputEl.blur(e);\n                }\n              }\n            }\n            : null,\n\n          attrs.events ? attrs.events : null, // NOTE: may overwrite oninput\n          attrs.required !== undefined && !!attrs.required ?       { required: true } : null,\n          attrs[k.readonly] !== undefined && !!attrs[k.readonly] ? { [k.readonly]: true } : null,\n          attrs.pattern !== undefined ?                            { pattern: attrs.pattern } : null,\n          attrs[k.maxlength] !== undefined ?                       { [k.maxlength]: attrs[k.maxlength] } : null,\n          attrs[k.minlength] !== undefined ?                       { [k.minlength]: attrs[k.minlength] } : null,\n          attrs.max !== undefined ?                                { max: attrs.max } : null,\n          attrs.min !== undefined ?                                { min: attrs.min } : null,\n          attrs[k.autofocus] !== undefined ?                       { [k.autofocus]: attrs[k.autofocus] } : null,\n          attrs[k.tabindex] !== undefined ?                        { [k.tabindex]: attrs[k.tabindex] } : null,\n          attrs.rows !== undefined ?                               { rows: attrs.rows } : null\n        ))\n      ]\n    ),\n    attrs.counter\n      ? h(\"div\",\n        {\n          key: \"counter\",\n          className: classes.counter\n        },\n        ((inputEl && inputEl.value.length) || 0) + \" / \" + attrs.counter\n      )\n      : null,\n    attrs.help && !showError\n      ? h(\"div\",\n        {\n          key: \"help\",\n          className: [\n            classes.help,\n            attrs.focusHelp ? classes.focusHelp : null\n          ].join(\" \")\n        },\n        attrs.help\n      )\n      : null,\n    showError\n      ? h(\"div\",\n        {\n          key: \"error\",\n          className: classes.error\n        },\n        error\n      )\n      : validates && !attrs.help\n        ? h(\"div\",\n          {\n            key: \"error-placeholder\",\n            className: classes.errorPlaceholder\n          }\n        )\n        : null\n  ];\n};\n","import { vars } from \"polythene-theme\";\n\nconst rgba = (colorStr, opacity = 1) =>\n  `rgba(${colorStr}, ${opacity})`;\n\nconst line_height_input = 20;\nconst input_padding_v = 7;\n\nexport default {\n  vertical_spacing_top:                   6, // 8 minus natural label height padding (1)\n  vertical_spacing_bottom:                7, // 8 minus natural label height padding (1)\n  input_focus_border_width:               2,\n  input_focus_border_animation_duration:  vars.animation_duration,\n  \n  floating_label_vertical_spacing_top:    30, // 16 + 8 + 8 minus natural label height padding (2)\n  floating_label_vertical_spacing_bottom: 7, // 8 minus natural label height padding (1)\n  floating_label_top:                     14,\n  floating_label_animation_duration:      \".12s\",\n\n  input_padding_h:          0,\n  input_padding_v,\n  input_border_width:       1,\n  margin_top_error_message: 6,\n  font_size_input:          16,\n  font_size_error:          12,\n  font_size_floating_label: 12,\n\n  line_height_input,\n\n  dense_floating_label_vertical_spacing_top:    23, // 12 + 8 + 4 minus natural label height padding (1)\n  dense_floating_label_vertical_spacing_bottom: 4, // 8 minus natural label height padding (1)\n  dense_floating_label_top:                     10,\n  dense_font_size_input:                        13,\n  dense_font_size_floating_label:               13,\n            \n  full_width_input_padding_h:       20,\n  full_width_input_padding_v:       18, // 20 minus natural label height padding (2)\n\n  dense_full_width_input_padding_h: 16,\n  dense_full_width_input_padding_v: 15, // 16 minus natural label height padding (1)\n  dense_full_width_font_size_input: 13,\n\n  color_light_input_text:           rgba(vars.color_light_foreground, vars.blend_light_text_primary),\n  color_light_input_background:     \"transparent\", // only used to \"remove\" autofill color\n  color_light_highlight_text:       rgba(vars.color_primary, vars.blend_light_text_primary),\n  color_light_input_bottom_border:  rgba(vars.color_light_foreground, vars.blend_light_border_light),\n  color_light_input_error_text:     rgba(\"221, 44, 0\"),\n  color_light_input_error_border:   rgba(\"221, 44, 0\"),\n  color_light_input_placeholder:    rgba(vars.color_light_foreground, vars.blend_light_text_tertiary),\n  color_light_label_text:           rgba(vars.color_light_foreground, vars.blend_light_text_tertiary),\n  color_light_disabled_label_text:  rgba(vars.color_light_foreground, vars.blend_light_text_disabled),\n  color_light_readonly_label_text:  rgba(vars.color_light_foreground, vars.blend_light_text_tertiary),\n  color_light_help_text:            rgba(vars.color_light_foreground, vars.blend_light_text_tertiary),\n  color_light_required_symbol:      rgba(\"221, 44, 0\"),\n  color_light_focus_border:         rgba(vars.color_primary),\n  color_light_counter_ok_border:    rgba(vars.color_primary),\n \n  color_dark_input_text:            rgba(vars.color_dark_foreground, vars.blend_dark_text_primary),\n  color_dark_input_background:      \"transparent\", // only used to \"remove\" autofill color\n  color_dark_highlight_text:        rgba(vars.color_primary, vars.blend_dark_text_primary),\n  color_dark_input_bottom_border:   rgba(vars.color_dark_foreground, vars.blend_dark_border_light),\n  color_dark_input_error_text:      rgba(\"222, 50, 38\"),\n  color_dark_input_error_border:    rgba(\"222, 50, 38\"),\n  color_dark_input_placeholder:     rgba(vars.color_dark_foreground, vars.blend_dark_text_tertiary),\n  color_dark_label_text:            rgba(vars.color_dark_foreground, vars.blend_dark_text_tertiary),\n  color_dark_disabled_label_text:   rgba(vars.color_dark_foreground, vars.blend_dark_text_disabled),\n  color_dark_readonly_label_text:   rgba(vars.color_dark_foreground, vars.blend_dark_text_tertiary),\n  color_dark_help_text:             rgba(vars.color_dark_foreground, vars.blend_dark_text_tertiary),\n  color_dark_required_symbol:       rgba(\"221, 44, 0\"),\n  color_dark_focus_border:          rgba(vars.color_primary),\n  color_dark_counter_ok_border:     rgba(vars.color_primary)\n};\n"],"names":["getElement","vnode","attrs","element","DEFAULT_VALID_STATE","undefined","validateCustom","state","inputEl","validState","validate","value","valid","error","validateCounter","length","counter","validateHTML","checkValidity","getValidStatus","status","isTouched","isInvalid","validateResetOnClear","invalid","validateAtStart","previousInvalid","message","notifyState","onChange","hasFocus","isDirty","ignoreEvent","name","ignoreEvents","indexOf","getInitialState","createStream","defaultValue","toString","el","setValue","focus","setFocus","merge","onMount","dom","inputType","multiLine","querySelector","map","type","validateOnInput","previousValue","didSetFocusTime","Date","getTime","focusState","onUpdate","createProps","k","keys","_extends","filterSupportedAttributes","classes","component","stateInvalid","stateFocused","stateDirty","floatingLabel","hasFloatingLabel","disabled","stateDisabled","readonly","stateReadonly","dense","isDense","required","isRequired","fullWidth","hasFullWidth","hasCounter","hideSpinner","hideClear","hideValidation","tone","className","class","join","createContent","h","renderer","showError","validates","min","max","minlength","maxlength","pattern","inactive","valueStr","requiredIndicator","optionalIndicator","label","inputArea","pointerStartEvent","input","onclick","onfocus","classList","add","onblur","remove","oninput","onkeydown","e","key","blur","events","autofocus","tabindex","rows","help","focusHelp","errorPlaceholder","rgba","colorStr","vars","animation_duration","color_light_foreground","blend_light_text_primary","color_primary","blend_light_border_light","blend_light_text_tertiary","blend_light_text_disabled","color_dark_foreground","blend_dark_text_primary","blend_dark_border_light","blend_dark_text_tertiary","blend_dark_text_disabled"],"mappings":"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"}