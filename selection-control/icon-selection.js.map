{"version":3,"sources":["icon-selection.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAIA,IAAM,cAAc;AAChB,SAAK,iBAAL;AACA,YAAQ,oBAAR;AACA,cAAU,wBAAV;AACA,eAAW,yBAAX;CAJE;;AAON,IAAM,aAAa,SAAb,UAAa,CAAC,SAAD,EAAY,IAAZ,EAAqB;;;AAGpC,WAAO,KAAK,SAAL,KAAmB,OAAO,MAAP,CAAc;AACpC,cAAM,KAAK,KAAL,CAAW,SAAX,CAAN;KADsB,EAEvB,KAAK,IAAL,EAAW,KAAK,IAAL,GAAY;AACtB,cAAM,KAAK,IAAL;KADI,GAEV,IAFU,CAFP,CAH6B;CAArB;;AAUnB,IAAM,mBAAmB,SAAnB,gBAAmB,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAuB;AAC5C,QAAM,OAAO,WAAW,SAAS,IAAT,GAAgB,QAAhB,GAA2B,SAA3B,EAAsC,IAAjD,CAAP,CADsC;AAE5C,QAAM,cAAc,IAAC,KAAS,IAAT,GAAiB,YAAY,QAAZ,GAAuB,YAAY,SAAZ,CAFjB;AAG5C,QAAM,eAAe,IAAC,KAAS,IAAT,GAAiB,YAAY,SAAZ,GAAwB,YAAY,QAAZ,CAHnB;AAI5C,WAAO,kBAAE,SAAF,uBAAwB,OAAO,MAAP,CAAc,EAAd,EAAkB;AAC7C,aAAK,KAAL;AACA,eAAO,CACH,YAAY,MAAZ,EACC,QAAQ,WAAR,GAAsB,YAAtB,CAFE,CAGL,IAHK,CAGA,GAHA,CAAP;AAIA,cAAM,IAAN;AACA,kBAAU,KAAK,QAAL;KAPiB,EAQ5B,KAAK,UAAL,CARI,CAAP,CAJ4C;CAAvB;;AAezB,IAAM,kBAAkB,SAAlB,eAAkB,CAAC,OAAD,EAAU,IAAV,EAAmB;AACvC,WAAO,uBAAE,KAAF,EAAS;AACZ,eAAO,YAAY,GAAZ;KADJ,EAEJ,CACC,iBAAiB,OAAjB,EAA0B,IAA1B,EAAgC,IAAhC,CADD,EAEC,iBAAiB,OAAjB,EAA0B,KAA1B,EAAiC,IAAjC,CAFD,CAFI,CAAP,CADuC;CAAnB;;kBAST","file":"icon-selection.js","sourcesContent":["// Helper function for checkbox and radio button\nimport m from 'mithril';\nimport iconButton from 'polythene/icon-button/icon-button';\n\nconst CSS_CLASSES = {\n    box: 'pe-control__box',\n    button: 'pe-control__button',\n    buttonOn: 'pe-control__button--on',\n    buttonOff: 'pe-control__button--off'\n};\n\nconst createIcon = (onOffType, opts) => {\n    // if opts.iconOn/Off is passed, use that icon options object and ignore size\n    // otherwise create a new object\n    return opts[onOffType] || Object.assign({\n        msvg: opts.theme[onOffType]\n    }, opts.icon, opts.size ? {\n        type: opts.size\n    } : null);\n};\n\nconst createIconButton = (value, type, opts) => {\n    const icon = createIcon(type === 'on' ? 'iconOn' : 'iconOff', opts);\n    const classNameOn = (type === 'on') ? CSS_CLASSES.buttonOn : CSS_CLASSES.buttonOff;\n    const classNameOff = (type !== 'on') ? CSS_CLASSES.buttonOff : CSS_CLASSES.buttonOn;\n    return m.component(iconButton, Object.assign({}, {\n        tag: 'div',\n        class: [\n            CSS_CLASSES.button,\n            (value ? classNameOn : classNameOff)\n        ].join(' '),\n        icon: icon,\n        disabled: opts.disabled\n    }, opts.iconButton));\n};\n\nconst createSelection = (checked, opts) => {\n    return m('div', {\n        class: CSS_CLASSES.box\n    }, [\n        createIconButton(checked, 'on', opts),\n        createIconButton(checked, 'off', opts)\n    ]);\n};\n\nexport default createSelection;\n"]}