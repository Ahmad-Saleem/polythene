{"version":3,"file":"polythene-core-snackbar.js","sources":["../src/snackbar-instance.js","../src/classes.js","../src/vars.js","../src/transitions.js"],"sourcesContent":["import { coreNotificationInstance } from \"polythene-core-notification\";\n\nexport const coreSnackbarInstance = Object.assign(\n  {},\n  coreNotificationInstance\n);\n","import { classes as notificationClasses } from \"polythene-core-notification\";\n\nexport default Object.assign(\n  {},\n  notificationClasses,\n  {\n    component:      \"pe-notification pe-snackbar\",\n\n    // elements\n    holder:         \"pe-snackbar__holder\",\n    placeholder:    \"pe-snackbar__placeholder\",\n\n    // states\n    open:           \"pe-snackbar--open\",\n  }\n);\n","import { vars } from \"polythene-theme\";\nimport { vars as notificationVars } from \"polythene-core-notification\";\n\nconst rgba = (colorStr, opacity = 1) =>\n  `rgba(${colorStr}, ${opacity})`;\n\nexport default Object.assign(\n  {},\n  notificationVars,\n  {\n    border_radius:          0,\n    tablet_min_width:       288,\n    tablet_max_width:       568,\n    min_height:             0,\n    \n    color_dark_background:  rgba(vars.color_dark_background)\n  }\n);\n","\nconst show = ({ containerEl, el, showDuration, showDelay }) => {\n  const height = el.getBoundingClientRect().height;\n  return {\n    el: containerEl,\n    showDuration: showDuration || .4,\n    showDelay:    showDelay || 0,\n    beforeShow:   () => (\n      el.style.visibility = \"initial\",\n      containerEl.style.transform = `translate3d(0, ${height}px, 0)`\n    ),\n    show:         () => containerEl.style.transform = \"translate3d(0, 0px, 0)\"\n  };\n};\n\nconst hide = ({ containerEl, el, hideDuration, hideDelay }) => {\n  const height = el.getBoundingClientRect().height;\n  return {\n    el: containerEl,\n    hideDuration: hideDuration || .4,\n    hideDelay:    hideDelay || 0,\n    hide:         () => containerEl.style.transform = `translate3d(0, ${height}px, 0)`,\n    // reset to original position to counter the removal of the snackbar instance\n    afterHide:    () => (\n      // prevent a \"bounce back\"\n      containerEl.style.transitionDuration = \"0ms\",\n      // prevent flickering when snackbar instance is not yet removed (in case a next snackbars is shown)\n      el.style.visibility = \"hidden\",\n      containerEl.style.transform = \"translate3d(0, 0px, 0)\"\n    )\n  };\n};\n\nexport default {\n  show,\n  hide\n};\n"],"names":["coreSnackbarInstance","coreNotificationInstance","notificationClasses","notificationVars","colorStr","vars","color_dark_background","containerEl","el","showDuration","showDelay","height","getBoundingClientRect","style","visibility","transform","hideDuration","hideDelay","transitionDuration"],"mappings":"2WAEaA,0KAEXC,qMCAAC,qBAEkB,qCAGA,kCACA,gCAGA,+LCLlBC,sBAE0B,mBACA,qBACA,eACA,wBAVf,SAACC,iBACJA,+DADwB,QAYDC,OAAKC,iCCdzB,eAAGC,KAAAA,YAAaC,IAAAA,GAAIC,IAAAA,aAAcC,IAAAA,UACvCC,EAASH,EAAGI,wBAAwBD,iBAEpCJ,eACUE,GAAgB,aAChBC,GAAa,aACb,iBACZF,GAAGK,MAAMC,WAAa,UACtBP,EAAYM,MAAME,4BAA8BJ,iBAEpC,iBAAMJ,GAAYM,MAAME,UAAY,iCAIzC,eAAGR,KAAAA,YAAaC,IAAAA,GAAIQ,IAAAA,aAAcC,IAAAA,UACvCN,EAASH,EAAGI,wBAAwBD,iBAEpCJ,eACUS,GAAgB,aAChBC,GAAa,OACb,iBAAMV,GAAYM,MAAME,4BAA8BJ,sBAEtD,oBAEAE,MAAMK,mBAAqB,QAEpCL,MAAMC,WAAa,SACtBP,EAAYM,MAAME,UAAY"}