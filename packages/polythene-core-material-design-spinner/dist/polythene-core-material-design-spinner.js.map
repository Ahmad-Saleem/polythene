{"version":3,"file":"polythene-core-material-design-spinner.js","sources":["../src/spinner.js","../src/vars.js"],"sourcesContent":["import classes from \"./classes\";\n\nconst layer = (num, h) =>\n  h(\"div\",\n    {\n      key: num,\n      className: [\n        classes.layer,\n        classes.layerN + num\n      ].join(\" \")\n    },\n    [\n      h(\"div\",\n        {\n          key: \"clipper-left\",\n          className: [\n            classes.circleClipper,\n            classes.circleClipperLeft\n          ].join(\" \")\n        },\n        h(\"div\",\n          {\n            key: \"circle\",\n            className: classes.circle\n          }\n        )\n      ),\n      h(\"div\",\n        {\n          key: \"gap-patch\",\n          className: classes.gapPatch\n        },\n        h(\"div\", { className: classes.circle })\n      ),\n      h(\"div\",\n        {\n          key: \"clipper-right\",\n          className: [\n            classes.circleClipper,\n            classes.circleClipperRight\n          ].join(\" \")\n        }, h(\"div\", { className: classes.circle })\n      )\n    ]\n  );\n\nexport const createProps = (vnode, { renderer: h }) => {\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  state.content = state.content || h(\"div\",\n    {\n      key: \"content\",\n      className: classes.animation\n    },\n    [1,2,3,4].map(num => layer(num, h))\n  );\n  return Object.assign(\n    {},\n    attrs,\n    {\n      className: [classes.component, attrs.className].join(\" \"),\n      content: state.content\n    }\n  );\n};\n","/*\nDerived from https://github.com/PolymerElements/paper-spinner\n\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nimport { vars } from \"polythene-theme\";\nimport { vars as baseVars } from \"polythene-core-base-spinner\";\n\nconst rgba = (colorStr, opacity = 1) =>\n  `rgba(${colorStr}, ${opacity})`;\n  \nconst arc_size =          270; // degrees - amount of circle the arc takes up\nconst arc_time =          1.333; // s - time it takes to expand and contract arc\nconst arc_start_degrees = 360/5 * 3; // degrees - how much the start location of the arc should rotate each time, 216 gives us a 5 pointed star shape (it\"s 360/5 * 3). For a 7 pointed star, we might do 360/7 * 3 = 154.286.\nconst rotation_duration = 360 * arc_time / (arc_start_degrees + (360 - arc_size)); // 1.568s\n\nconst blue400 =   \"#42a5f5\";\nconst red500 =    \"#f44336\";\nconst yellow600 = \"#fdd835\";\nconst green500 =  \"#4caf50\";\n\nexport default {\n  border_width_small:   baseVars.size_small / baseVars.size_regular * 3,\n  border_width_regular: 3,\n  border_width_medium:  baseVars.size_medium / baseVars.size_regular * 3,\n  border_width_large:   baseVars.size_large / baseVars.size_regular * 3,\n  border_width_fab:     baseVars.size_fab / baseVars.size_regular * 3,\n  rotation_duration,\n  arc_size,\n  arc_time,\n  arc_start_degrees,\n\n  color_light_single: rgba(vars.color_primary),\n  color_light_1:      blue400,\n  color_light_2:      red500,\n  color_light_3:      yellow600,\n  color_light_4:      green500,\n\n  color_dark_single:  rgba(vars.color_primary),\n  color_dark_1:       blue400,\n  color_dark_2:       red500,\n  color_dark_3:       yellow600,\n  color_dark_4:       green500,\n};\n"],"names":["layer","num","h","classes","layerN","join","circleClipper","circleClipperLeft","circle","gapPatch","className","circleClipperRight","createProps","vnode","renderer","state","attrs","content","animation","map","_extends","component","rgba","colorStr","baseVars","size_small","size_regular","size_medium","size_large","size_fab","vars","color_primary"],"mappings":"smBAEMA,EAAQ,SAACC,EAAKC,SAClBA,GAAE,WAEOD,aAEHE,+BAAQH,MACRG,+BAAQC,OAASH,GACjBI,KAAK,OAGPH,EAAE,WAEO,0BAEHC,+BAAQG,cACRH,+BAAQI,mBACRF,KAAK,MAETH,EAAE,WAEO,mBACMC,+BAAQK,UAIzBN,EAAE,WAEO,sBACMC,+BAAQM,UAErBP,EAAE,OAASQ,UAAWP,+BAAQK,UAEhCN,EAAE,WAEO,2BAEHC,+BAAQG,cACRH,+BAAQQ,oBACRN,KAAK,MACNH,EAAE,OAASQ,UAAWP,+BAAQK,aAK5BI,EAAc,SAACC,QAAmBX,KAAVY,SAC7BC,EAAQF,EAAME,MACdC,EAAQH,EAAMG,eACdC,QAAUF,EAAME,SAAWf,EAAE,WAE1B,oBACMC,+BAAQe,YAEpB,EAAE,EAAE,EAAE,GAAGC,IAAI,kBAAOnB,GAAMC,EAAKC,MAE3BkB,KAELJ,cAEcb,+BAAQkB,UAAWL,EAAMN,WAAWL,KAAK,aAC5CU,EAAME,4CC9CfK,EAAO,SAACC,iBACJA,+DADwB,8BAcVC,OAASC,WAAaD,OAASE,aAAe,uBAC9C,sBACAF,OAASG,YAAcH,OAASE,aAAe,qBAC/CF,OAASI,WAAaJ,OAASE,aAAe,mBAC9CF,OAASK,SAAWL,OAASE,aAAe,oBAZ1C,oBAHA,aACA,wBACA,uBAmBJJ,EAAKQ,OAAKC,6BAhBd,wBACA,wBACA,wBACA,4BAmBIT,EAAKQ,OAAKC,4BAtBd,uBACA,uBACA,uBACA"}