{"version":3,"file":"polythene-spinner.js","sources":["../src/classes.js","../src/theme/vars.js","../src/theme/layout.js","../src/theme/color.js","../src/theme/index.js","../src/spinner.js"],"sourcesContent":["\nexport default {\n  component:   \"pe-spinner\",\n\n  // elements\n  animation:   \"pe-spinner__animation\",\n  placeholder: \"pe-spinner__placeholder\",\n\n  // states\n  animated:    \"pe-spinner--animated\",\n  fab:         \"pe-spinner--fab\",\n  large:       \"pe-spinner--large\",\n  medium:      \"pe-spinner--medium\",\n  permanent:   \"pe-spinner--permanent\",\n  raised:      \"pe-spinner--raised\",\n  regular:     \"pe-spinner--regular\",\n  singleColor: \"pe-spinner--single-color\",\n  small:       \"pe-spinner--small\",\n  visible:     \"pe-spinner--visible\",\n};\n","import { vars } from \"polythene-theme\";\nconst rgba = vars.rgba;\n\nexport default {\n  size_small:   3 * vars.grid_unit_component,\n  size_regular: 4 * vars.grid_unit_component,\n  size_medium:  5 * vars.grid_unit_component,\n  size_large:   6 * vars.grid_unit_component,\n  size_fab:     7 * vars.grid_unit_component,\n\n  raisedSize: size => {\n    const padding = size * 0.25;\n    const paddedSize = size + padding * 2;\n    return { padding, paddedSize };\n  },\n\n  color_light_raised_background: rgba(vars.color_light_background),\n  // also use light background with dark theme\n  color_dark_raised_background: rgba(vars.color_light_background)\n};\n","\nconst sizes = size => ({\n  width: size + \"px\",\n  height: size + \"px\"\n});\n\nconst raisedSize = (size, componentVars) => {\n  const { padding, paddedSize } = componentVars.raisedSize(size);\n  return {\n    width:   paddedSize + \"px\",\n    height:  paddedSize + \"px\",\n    padding: padding    + \"px\"\n  };\n};\n\nexport default (selector, componentVars) => [{\n  [selector]: {\n    transitionTimingFunction: \"ease-out\",\n    transitionProperty: \"opacity\",\n    opacity: 0,\n\n    \".pe-spinner--visible, &.pe-spinner--permanent\": {\n      opacity: 1\n    },\n\n    \".pe-spinner--small\":   sizes(componentVars.size_small),\n    \".pe-spinner--regular\": sizes(componentVars.size_regular),\n    \".pe-spinner--medium\":  sizes(componentVars.size_medium),\n    \".pe-spinner--large\":   sizes(componentVars.size_large),\n    \".pe-spinner--fab\":     sizes(componentVars.size_fab),\n\n    \".pe-spinner--raised\": {\n      position: \"relative\",\n      borderRadius: \"50%\",\n\n      \".pe-spinner--small\":   raisedSize(componentVars.size_small,   componentVars),\n      \".pe-spinner--regular\": raisedSize(componentVars.size_regular, componentVars),\n      \".pe-spinner--medium\":  raisedSize(componentVars.size_medium,  componentVars),\n      \".pe-spinner--large\":   raisedSize(componentVars.size_large,   componentVars),\n      \".pe-spinner--fab\":     raisedSize(componentVars.size_fab,     componentVars)\n    }\n  }\n}];\n","\nconst style = (scopes, selector, componentVars, tint) => [{\n  [scopes.map(s => s + selector).join(\",\")]: {\n    \".pe-spinner--raised\": {\n      backgroundColor: componentVars[\"color_\" + tint + \"_raised_background\"],\n    }\n  }\n}];\n\nexport default (selector, componentVars) => [\n  style([\".pe-dark-tone\", \".pe-dark-tone \"], selector, componentVars, \"dark\"), // has/inside dark theme\n  style([\"\", \".pe-light-tone\", \".pe-light-tone \"], selector, componentVars, \"light\"), // normal, has/inside light tone\n];\n","import { styler } from \"polythene-core-css\";\nimport classes from \"../classes\";\nimport vars from \"./vars\";\nimport layout from \"./layout\";\nimport color from \"./color\";\n\nconst fns = [layout, color];\nconst selector = `.${classes.component}`;\n\nexport const customTheme = (customSelector, customVars) => \n  styler.generateStyles([customSelector, selector], {...vars, ...customVars}, fns);\n\nstyler.generateStyles([selector], vars, fns);\n","import m from \"mithril\";\nimport { filterSupportedAttributes } from \"polythene-core\";\nimport { show, hide } from \"polythene-core\";\nimport { shadow } from \"polythene-mithril\";\nimport { customTheme } from \"./theme\";\nimport classes from \"./classes\";\n\nconst typeClasses = {\n  small:   classes.small,\n  regular: classes.regular,\n  medium:  classes.medium,\n  large:   classes.large,\n  fab:     classes.fab\n};\n\nconst classForType = (mode = \"regular\") => typeClasses[mode];\n\nconst showSpinner = (state, attrs) => {\n  if (state.isTransitioning) {\n    return;\n  }\n  state.isTransitioning = true;\n  return show(Object.assign(\n    {},\n    attrs, {\n      el: state.el,\n      showClass: classes.visible\n    }\n  )).then(() => {\n    state.isTransitioning = false;\n    state.visible = true;\n  });\n};\n\nconst hideSpinner = (state, attrs) => {\n  if (state.isTransitioning) {\n    return;\n  }\n  state.isTransitioning = true;\n  return hide(Object.assign(\n    {},\n    attrs, {\n      el: state.el,\n      afterHide: () => (state.el.style.display = \"none\"),\n      showClass: classes.visible\n    }\n  )).then(() => {\n    state.isTransitioning = false;\n    state.visible = false;\n    state.hide = false;\n    m.redraw(); // removes remainder of drawn component\n  });\n};\n\nconst delay = (attrs, mode) => {\n  const value = attrs[mode];\n  return ((value !== true) && !isNaN(value))\n    ? parseFloat(value, 10) * 1000\n    : false;\n};\n\nconst notifyState = (state, attrs) => {\n  if (attrs.percentage && attrs.getPercentage) {\n    const percentage = (typeof attrs.percentage === \"function\")\n      ? attrs.percentage()\n      : attrs.percentage;\n    attrs.getPercentage(percentage, state, attrs);\n  }\n};\n\nconst createView = (state, attrs) => {\n  const element = attrs.element || \"div\";\n  const props = Object.assign({},\n    filterSupportedAttributes(attrs),\n    {\n      class: [\n        classes.component,\n        attrs.instanceClass,\n        classForType(attrs.type),\n        attrs.singleColor ? classes.singleColor: null,\n        attrs.raised ? classes.raised : null,\n        attrs.animated ? classes.animated : null,\n        attrs.permanent ? classes.permanent : null,\n        attrs.class\n      ].join(\" \"),\n      oncreate: ({ dom }) => {\n        state.el = dom;\n        notifyState(state, attrs);\n        if (!attrs.permanent) {\n          setTimeout(() => showSpinner(state, attrs), 0);\n        }\n      }\n    },\n    attrs.events ? attrs.events : null\n  );\n\n  notifyState(state, attrs);\n\n  if (state.hide) {\n    setTimeout(() => { hideSpinner(state, attrs); }, 0);\n  }\n\n  const content = [\n    attrs.raised && attrs.content\n      ? m(shadow, { z: attrs.z })\n      : null,\n    attrs.content || m(\"div\", { class: classes.animation }, \"Specific spinner missing\")\n  ];\n\n  return m(element, props, [attrs.before, content, attrs.after]);\n};\n\nconst view = ({ state, attrs }) => {\n  if (!state.visible) {\n    if ((attrs.hide !== undefined && !attrs.hide) || attrs.show) {\n      const showDelay = delay(attrs, \"show\");\n      if (showDelay) {\n        setTimeout(() => {\n          state.visible = true;\n          m.redraw();\n        }, showDelay);\n      } else {\n        state.visible = true;\n      }\n    }\n  } else {\n    if ((attrs.show !== undefined && !attrs.show) || attrs.hide) {\n      const hideDelay = delay(attrs, \"hide\");\n      if (hideDelay) {\n        setTimeout(() => {\n          state.hide = true;\n          m.redraw();\n        }, hideDelay);\n      } else {\n        state.hide = true;\n      }\n    }\n  }\n  return state.visible\n    ? createView(state, attrs)\n    : m(\"span\", { class: classes.placeholder });\n};\n\nexport default {\n  theme: customTheme, // accepts (selector, vars)\n  oninit: vnode => {\n    vnode.state = Object.assign(\n      vnode.state, \n      {\n        el: null,\n        isTransitioning: false,\n        visible: vnode.attrs.permanent || false,\n        hide: false,\n        percentage: 0\n      }\n    );\n  },\n  view\n};\n"],"names":["rgba","vars","grid_unit_component","padding","size","paddedSize","color_light_background","sizes","raisedSize","componentVars","selector","size_small","size_regular","size_medium","size_large","size_fab","style","scopes","tint","map","s","join","fns","layout","color","classes","component","customTheme","customSelector","customVars","styler","generateStyles","typeClasses","small","regular","medium","large","fab","classForType","showSpinner","state","attrs","isTransitioning","show","_extends","el","visible","then","hideSpinner","hide","display","redraw","delay","mode","value","isNaN","parseFloat","notifyState","percentage","getPercentage","createView","element","props","filterSupportedAttributes","instanceClass","type","singleColor","raised","animated","permanent","class","dom","events","content","m","shadow","z","animation","before","after","view","undefined","hideDelay","showDelay","placeholder","vnode"],"mappings":"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"}