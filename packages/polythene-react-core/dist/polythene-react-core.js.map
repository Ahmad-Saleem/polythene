{"version":3,"file":"polythene-react-core.js","sources":["../src/index.js"],"sourcesContent":["// import React from \"react\";\nimport h from \"react-hyperscript\";\n\nconst keys = {\n  class:       \"className\",\n  onblur:      \"onBlur\",\n  onclick:     \"onClick\",\n  onfocus:     \"onFocus\",\n  onkeydown:   \"onKeyDown\",\n  onkeyup:     \"onKeyUp\",\n  onmousedown: \"onMouseDown\",\n  onmouseout:  \"onMouseOut\",\n  onmouseover: \"onMouseOver\",\n  onmouseup:   \"onMouseUp\",\n  tabindex:    \"tabIndex\",\n};\n\nexport const keyer = keys;\n\n\n// Copied from mithril.js: function hyperscript(selector)\n//\n// Takes:\n// renderer(selector, args, children)\n// renderer(selector, children)\n\n// const _renderer = function(selector, args, children) {\n//   let _children = children;\n//   if (!Array.isArray(_children)) _children = [children];\n//   return React.createElement(selector, args, _children);\n// };\n\n// export const renderer = function() {\n//   console.log(\"arguments\", arguments, arguments.length);\n//   if (arguments.length === 3) {\n//     return _renderer(arguments[0], arguments[1], arguments[2]);\n//   } else if (arguments.length === 2) {\n//     return _renderer(arguments[0], null, arguments[1]);\n//   } else if (arguments.length === 1) {\n//     return _renderer(arguments[0], null, null);\n//   } else {\n//     return _renderer(null, null, null);\n//   }\n// };\n\nexport const renderer = h;\n\n// export const renderer = function(selector) {\n//   console.log(\"renderer\", arguments);\n//   console.log(\"selector\", selector);\n//   let attrs = arguments[1], start = 2, children = null;\n//   if (!attrs) {\n//     attrs = null;\n//   } else if (typeof attrs !== \"object\" || attrs.tag != null || Array.isArray(attrs)) {\n//     attrs = null;\n//     start = 1;\n//   }\n//   if (arguments.length === start + 1) {\n//     children = arguments[start];\n//     if (!Array.isArray(children)) children = [children];\n//   } else if (arguments.length > start + 1) {\n//     children = [];\n//     while (start < arguments.length) children.push(arguments[start++]);\n//   }\n//   console.log(\"attrs\", attrs, \"children\", children);\n//   return React.createElement(selector, attrs, children);\n// };\n"],"names":["keys","keyer","renderer","h"],"mappings":"8SACA,IAEMA,UACS,mBACA,iBACA,kBACA,oBACA,oBACA,sBACA,yBACA,yBACA,wBACA,qBACA,YAGFC,EAAQD,EA4BRE,EAAWC"}