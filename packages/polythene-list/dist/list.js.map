{"version":3,"file":null,"sources":["../src/theme/vars.js","../src/theme/layout.js","../src/theme/color.js","../src/theme/index.js","../src/list.js"],"sourcesContent":["import { vars } from \"polythene-theme\";\n\nconst rgba = vars.rgba;\n\nexport default {\n  padding:               vars.grid_unit_component,\n  padding_compact:       vars.grid_unit_component / 2,\n  border_width_stacked:  1,\n  border_width_bordered: 1,\n\n  color_light_border: rgba(vars.color_light_foreground, vars.blend_light_border_light),\n  color_dark_border:  rgba(vars.color_dark_foreground,  vars.blend_dark_border_light)\n};\n\n","import { mixin, styler } from \"polythene-css\";\n\nconst borderStyle = componentVars => (mixin.hairline(\"border-bottom\"), {\n  \"border-style\": \"none none solid none\",\n  \"border-width\": componentVars.border_width_bordered + \"px\"\n});\n\nconst createStyles = (componentVars, className = \"\") => {\n  const selector = `${className}.pe-list`;\n  return [{\n    [selector]: {\n      padding: componentVars.padding + \"px 0\",\n\n      \"&.pe-list--header\": {\n        \"padding-top\": 0\n      },\n\n      \"&.pe-list--compact\": {\n        padding: componentVars.padding_compact + \"px 0\",\n      },\n\n      \"& + &\": [\n        mixin.hairline(\"border-top\"), {\n          \"border-style\": \"solid none none none\",\n          \"border-width\": componentVars.border_width_stacked + \"px\"\n        }\n      ],\n\n      \"&.pe-list--borders\": {\n        \" .pe-list-tile:not(.pe-list__header)\": {\n          \"&:not(:last-child)\": {\n            \"&\": borderStyle(componentVars)\n          }\n        }\n      },\n\n      \"&.pe-list--borders-indented\": {\n        \"border-top\": \"none\",\n\n        \" .pe-list-tile:not(.pe-list__header)\": {\n          \"&:not(:last-child)\": {\n            \" .pe-list-tile__content:not(.pe-list-tile__content--front)\": borderStyle(componentVars)\n          }\n        }\n      }\n    }\n  }];\n};\n\nexport default componentVars => styler.createStyles(componentVars, createStyles);\n","import { styler } from \"polythene-css\";\n\nconst style = (componentVars, scope, selector, tint) => {\n  return [{\n    [scope + selector]: {\n      \"&.pe-list--borders\": {\n        \" .pe-list-tile:not(.pe-list__header)\": {\n          \"&:not(:last-child)\": {\n            \"border-color\": componentVars[\"color_\" + tint + \"_border\"]\n          }\n        }\n      },\n\n      \"&.pe-list--borders-indented\": {\n        \" .pe-list-tile:not(.pe-list__header)\": {\n          \" .pe-list-tile__content:not(.pe-list-tile__content--front)\": {\n            \"border-color\": componentVars[\"color_\" + tint + \"_border\"]\n          }\n        }\n      }\n    },\n    \" .pe-list + .pe-list\": {\n      \"border-color\": componentVars[\"color_\" + tint + \"_border\"]\n    }\n  }];\n};\n\nconst createStyles = (componentVars, className = \"\") => {\n  const selector = `${className}.pe-list`;\n  return [\n    style(componentVars, \"\",                selector, \"light\"),\n    style(componentVars, \".pe-dark-theme \", selector, \"dark\" ), // inside dark theme\n  ];\n};\n\nexport default componentVars => styler.createStyles(componentVars, createStyles);\n","import { styler } from \"polythene-css\";\nimport { styles } from \"polythene-theme\";\nimport vars from \"./vars\";\nimport layout from \"./layout\";\nimport color from \"./color\";\n\nconst key = \"list\";\nconst className = \"pe-list\";\n\nconst styleComponent = (className, styles) =>\n  styler.styleComponent(className, styles, key, vars, layout, color);\n\nexport const customTheme = (className, vars) =>\n  // Inject additional styles as use the className as key\n  styleComponent(className, styler.addComponentStyle(\n    className, styles, key, vars\n  ));\n\nstyleComponent(className, styles);","import m from \"mithril\";\nimport { listTile } from \"polythene-list-tile\";\nimport { filterSupportedAttributes } from \"polythene-core\";\nimport { customTheme } from \"./theme\";\n\nconst classes = {\n  component: \"pe-list\",\n  header: \"pe-list__header\",\n  borders: \"pe-list--borders\",\n  indentedBorders: \"pe-list--borders-indented\",\n  hasHeader: \"pe-list--header\",\n  isCompact: \"pe-list--compact\",\n  isHoverable: \"pe-list--hoverable\",\n  isSelectable: \"pe-list--selectable\"\n};\n\nconst view = vnode => {\n  const attrs = vnode.attrs;\n  const element = attrs.element || \"div\";\n  const props = Object.assign(\n    {},\n    filterSupportedAttributes(attrs),\n    {\n      class: [\n        classes.component,\n        (attrs.borders ? classes.borders : null),\n        (attrs.indentedBorders ? classes.indentedBorders : null),\n        (attrs.hoverable ? classes.isHoverable : null),\n        (attrs.selectable ? classes.isSelectable : null),\n        (attrs.header ? classes.hasHeader : null),\n        (attrs.compact ? classes.isCompact : null),\n        attrs.class\n      ].join(\" \"),\n    }\n  );\n  let headerOpts;\n  if (attrs.header) {\n    headerOpts = Object.assign({}, attrs.header);\n    headerOpts.class = [\n      classes.header,\n      headerOpts.class || null\n    ].join(\" \");\n  }\n  const children = vnode.children.length && vnode.children || attrs.children;\n  const content = [\n    headerOpts ? m(listTile, headerOpts) : null,\n    attrs.tiles\n      ? attrs.tiles\n      : attrs.content\n        ? attrs.content\n        : children && children[0]\n          ? children\n          : null\n  ];\n  return m(element, props, [attrs.before, content, attrs.after]);\n};\n\nexport const list = {\n  theme: customTheme, // accepts (className, vars)\n  view\n};\n"],"names":["rgba","vars","grid_unit_component","color_light_foreground","blend_light_border_light","color_dark_foreground","blend_dark_border_light","borderStyle","mixin","hairline","componentVars","border_width_bordered","createStyles","className","selector","padding","padding_compact","border_width_stacked","styler","style","scope","tint","key","styleComponent","styles","layout","color","customTheme","addComponentStyle","classes","view","attrs","vnode","element","props","babelHelpers.extends","filterSupportedAttributes","component","borders","indentedBorders","hoverable","isHoverable","selectable","isSelectable","header","hasHeader","compact","isCompact","class","join","headerOpts","children","length","content","m","listTile","tiles","before","after","list"],"mappings":"0hBAEA,IAAMA,GAAOC,OAAKD,gBAGOC,OAAKC,oCACLD,OAAKC,oBAAsB,uBAC3B,wBACA,qBAEHF,EAAKC,OAAKE,uBAAwBF,OAAKG,4CACvCJ,EAAKC,OAAKI,sBAAwBJ,OAAKK,uTCTvDC,EAAc,kBAAkBC,SAAMC,SAAS,iCACnC,sCACAC,EAAcC,sBAAwB,OAGlDC,EAAe,SAACF,MAAeG,0DAAY,GACzCC,EAAcD,yBAEjBC,WACUJ,EAAcK,QAAU,0CAGhB,iCAINL,EAAcM,gBAAkB,iBAIzCR,QAAMC,SAAS,8BACG,sCACAC,EAAcO,qBAAuB,+FAO9CV,EAAYG,kDAMP,kIAIoDH,EAAYG,8BAQtDQ,UAAON,aAAaF,EAAeE,IC/C7DO,EAAQ,SAACT,EAAeU,EAAON,EAAUO,0BAE1CD,EAAQN,sGAIeJ,EAAc,SAAWW,EAAO,kKAQhCX,EAAc,SAAWW,EAAO,oBAKxD,uCACkBX,EAAc,SAAWW,EAAO,kBAKhDT,EAAe,SAACF,MAAeG,0DAAY,GACzCC,EAAcD,oBAElBM,EAAMT,EAAe,GAAmBI,EAAU,SAClDK,EAAMT,EAAe,kBAAmBI,EAAU,8BAItBI,UAAON,aAAaF,EAAeE,IC7B7DU,EAAM,OACNT,EAAY,UAEZU,EAAiB,SAACV,EAAWW,SACjCN,UAAOK,eAAeV,EAAWW,EAAQF,EAAKrB,EAAMwB,EAAQC,IAEjDC,EAAc,SAACd,EAAWZ,YAEtBY,EAAWK,SAAOU,kBAC/Bf,EAAWW,SAAQF,EAAKrB,IAG5BsB,GAAeV,EAAWW,SCb1B,IAAMK,cACO,iBACH,0BACC,mCACQ,sCACN,4BACA,+BACE,kCACC,uBAGVC,EAAO,eACLC,GAAQC,EAAMD,MACdE,EAAUF,EAAME,SAAW,MAC3BC,EAAQC,KAEZC,4BAA0BL,WAGtBF,EAAQQ,UACPN,EAAMO,QAAUT,EAAQS,QAAU,KAClCP,EAAMQ,gBAAkBV,EAAQU,gBAAkB,KAClDR,EAAMS,UAAYX,EAAQY,YAAc,KACxCV,EAAMW,WAAab,EAAQc,aAAe,KAC1CZ,EAAMa,OAASf,EAAQgB,UAAY,KACnCd,EAAMe,QAAUjB,EAAQkB,UAAY,KACrChB,EAAMiB,OACNC,KAAK,OAGPC,QACAnB,GAAMa,WACKT,KAAkBJ,EAAMa,UAC1BI,OACTnB,EAAQe,OACRM,EAAWF,OAAS,MACpBC,KAAK,SAEHE,GAAWnB,EAAMmB,SAASC,QAAUpB,EAAMmB,UAAYpB,EAAMoB,SAC5DE,GACJH,EAAaI,EAAEC,WAAUL,GAAc,KACvCnB,EAAMyB,MACFzB,EAAMyB,MACNzB,EAAMsB,QACJtB,EAAMsB,QACNF,GAAYA,EAAS,GACnBA,EACA,YAEHG,GAAErB,EAASC,GAAQH,EAAM0B,OAAQJ,EAAStB,EAAM2B,SAG5CC,SACJhC"}