{"version":3,"file":"polythene-css-icon.js","sources":["../src/layout.js","../src/color.js","../src/index.js"],"sourcesContent":["import { vars } from \"polythene-theme\";\n\nconst iconSizesPx = (size = vars.unit_icon_size) => ({\n  width:  size + \"px\",\n  height: size + \"px\"\n});\n\nexport default (selector, componentVars) => [{\n  [selector]: {\n    display: \"inline-block\",\n    verticalAlign: \"middle\",\n    backgroundRepeat: \"no-repeat\",\n    position: \"relative\",\n    fontSize: 0,\n    lineHeight: 0,\n\n    \".pe-icon--avatar img\": {\n      border: \"none\",\n      borderRadius: \"50%\",\n      width: \"inherit\",\n      height: \"inherit\"\n    },\n\n    \" img\": {\n      height: \"inherit\"\n    },\n\n    \" .pe-svg, .pe-svg > div\": { /* React creates an additional div when wrapping an SVG */\n      width: \"inherit\",\n      height: \"inherit\"\n    },\n\n    \".pe-icon--small\":   iconSizesPx(componentVars.size_small),\n    \".pe-icon--regular\": iconSizesPx(componentVars.size_regular),\n    \".pe-icon--medium\":  iconSizesPx(componentVars.size_medium),\n    \".pe-icon--large\":   iconSizesPx(componentVars.size_large)\n  }\n}];\n","\nconst style = (scopes, selector, componentVars, tint) => [{\n  [scopes.map(s => s + selector).join(\",\")]: {\n    color: componentVars[\"color_\" + tint] || \"currentcolor\"\n  }\n}];\n\nexport default (selector, componentVars) => [\n  style([\".pe-dark-tone\", \".pe-dark-tone \"], selector, componentVars, \"dark\"), // has/inside dark tone\n  style([\"\", \".pe-light-tone\", \".pe-light-tone \"], selector, componentVars, \"light\"), // normal, has/inside light tone\n];\n","import { styler } from \"polythene-core-css\";\nimport { classes, vars } from \"polythene-core-icon\";\nimport layout from \"./layout\";\nimport color from \"./color\";\n\nconst fns = [layout, color];\nconst selector = `.${classes.component}`;\n\nexport const addStyle = (customSelector, customVars) => \n  styler.generateStyles([customSelector, selector], {...vars, ...customVars}, fns);\n\nexport const getStyle = (customSelector, customVars) => \n  customSelector\n    ? styler.createStyleSheets([customSelector, selector], {...vars, ...customVars}, fns)\n    : styler.createStyleSheets([selector], vars, fns);\n\nstyler.generateStyles([selector], vars, fns);\n"],"names":["iconSizesPx","size","vars","unit_icon_size","selector","componentVars","size_small","size_regular","size_medium","size_large","style","scopes","tint","map","s","join","fns","layout","color","classes","component","addStyle","customSelector","customVars","styler","generateStyles","getStyle","createStyleSheets"],"mappings":"6oBAAA,GAEMA,GAAc,cAACC,0DAAOC,OAAKC,4BACvBF,EAAO,YACPA,EAAO,kBAGDG,EAAUC,eACvBD,WACU,6BACM,0BACG,qBACR,oBACA,aACE,iCAGF,oBACM,YACP,iBACC,0BAIA,4CAID,iBACC,6BAGWJ,EAAYK,EAAcC,gCAC1BN,EAAYK,EAAcE,iCAC1BP,EAAYK,EAAcG,+BAC1BR,EAAYK,EAAcI,gBClC7CC,EAAQ,SAACC,EAAQP,EAAUC,EAAeO,eAC7CD,EAAOE,IAAI,kBAAKC,GAAIV,IAAUW,KAAK,YAC3BV,EAAc,SAAWO,IAAS,8BAI7BR,EAAUC,UACxBK,GAAO,gBAAiB,kBAAmBN,EAAUC,EAAe,WAC7D,GAAI,iBAAkB,mBAAoBD,EAAUC,EAAe,+KCJtEW,GAAOC,EAAQC,GACfd,MAAee,UAAQC,UAEhBC,EAAW,SAACC,EAAgBC,SACvCC,UAAOC,gBAAgBH,EAAgBlB,QAAeF,OAASqB,GAAaP,IAEjEU,EAAW,SAACJ,EAAgBC,SACvCD,GACIE,SAAOG,mBAAmBL,EAAgBlB,QAAeF,OAASqB,GAAaP,GAC/EQ,SAAOG,mBAAmBvB,GAAWF,OAAMc,GAEjDQ,UAAOC,gBAAgBrB,GAAWF,OAAMc"}