{"version":3,"file":"polythene-icon.js","sources":["../src/classes.js","../src/theme/vars.js","../src/theme/layout.js","../src/theme/color.js","../src/theme/index.js","../src/icon.js"],"sourcesContent":["\nexport default {\n  component: \"pe-icon\",\n  avatar:    \"pe-icon--avatar\",\n  small:     \"pe-icon--small\",\n  regular:   \"pe-icon--regular\",\n  medium:    \"pe-icon--medium\",\n  large:     \"pe-icon--large\"\n};\n","import { vars } from \"polythene-theme\";\n\nexport default {\n  size_small:   vars.unit_icon_size_small,\n  size_regular: vars.unit_icon_size,\n  size_medium:  vars.unit_icon_size_medium,\n  size_large:   vars.unit_icon_size_large,\n  color_light:  \"currentcolor\",\n  color_dark:   \"currentcolor\"\n};\n","import { vars } from \"polythene-theme\";\n\nconst iconSizesPx = (size = vars.unit_icon_size) => ({\n  width:  size + \"px\",\n  height: size + \"px\"\n});\n\nexport default (selector, componentVars) => [{\n  [selector]: {\n    display: \"inline-block\",\n    verticalAlign: \"middle\",\n    backgroundRepeat: \"no-repeat\",\n    position: \"relative\",\n    fontSize: 0,\n    lineHeight: 0,\n\n    \".pe-icon--avatar img\": {\n      border: \"none\",\n      borderRadius: \"50%\",\n      width: \"100%\",\n      height: \"100%\"\n    },\n\n    \" img\": {\n      height: \"100%\"\n    },\n\n    \" svg\": {\n      width: \"100%\",\n      height: \"100%\"\n    },\n\n    \".pe-icon--small\":   iconSizesPx(componentVars.size_small),\n    \".pe-icon--regular\": iconSizesPx(componentVars.size_regular),\n    \".pe-icon--medium\":  iconSizesPx(componentVars.size_medium),\n    \".pe-icon--large\":   iconSizesPx(componentVars.size_large)\n  }\n}];\n","\nconst style = (scopes, selector, componentVars, tint) => [{\n  [scopes.map(s => s + selector).join(\",\")]: {\n    color: componentVars[\"color_\" + tint] || \"currentcolor\"\n  }\n}];\n\nexport default (selector, componentVars) => [\n  style([\".pe-dark-tone\", \".pe-dark-tone \"], selector, componentVars, \"dark\"), // has/inside dark theme\n  style([\"\", \".pe-light-tone\", \".pe-light-tone \"], selector, componentVars, \"light\"), // normal, has/inside light theme\n];\n","import { styler } from \"polythene-css\";\nimport classes from \"../classes\";\nimport vars from \"./vars\";\nimport layout from \"./layout\";\nimport color from \"./color\";\n\nconst fns = [layout, color];\nconst selector = `.${classes.component}`;\n\nexport const customTheme = (customSelector, customVars) => \n  styler.generateStyles([customSelector, selector], {...vars, ...customVars}, fns);\n\nstyler.generateStyles([selector], vars, fns);\n","import m from \"mithril\";\nimport { filterSupportedAttributes } from \"polythene-core\";\nimport svg from \"polythene-svg\";\nimport { customTheme } from \"./theme\";\nimport classes from \"./classes\";\n\nconst typeClasses = {\n  small:   classes.small,\n  regular: classes.regular,\n  medium:  classes.medium,\n  large:   classes.large\n};\n\nconst classForType = (mode = \"regular\") => typeClasses[mode];\n\nconst view = vnode => {\n  const attrs = vnode.attrs;\n  const element = attrs.element || \"div\";\n  const props = Object.assign(\n    {},\n    filterSupportedAttributes(attrs),\n    {\n      class: [\n        classes.component,\n        classForType(attrs.type),\n        attrs.avatar ? classes.avatar : null,\n        attrs.tone === \"dark\" ? \"pe-dark-tone\" : null,\n        attrs.tone === \"light\" ? \"pe-light-tone\" : null,\n        attrs.class\n      ].join(\" \"),\n    },\n    attrs.events ? attrs.events : null\n  );\n  const content = attrs.content\n    ? attrs.content\n    : attrs.svg\n      ? m(svg, {...attrs.svg})\n      : attrs.msvg\n        ? m(svg, attrs.msvg)\n        : attrs.src\n          ? m(\"img\", {src: attrs.src})\n          : attrs.children || vnode.children;\n  return m(element, props, [attrs.before, content, attrs.after]);\n};\n\nexport default {\n  theme: customTheme, // accepts (selector, vars)\n  view\n};\n"],"names":["vars","unit_icon_size_small","unit_icon_size","unit_icon_size_medium","unit_icon_size_large","iconSizesPx","size","selector","componentVars","size_small","size_regular","size_medium","size_large","style","scopes","tint","map","s","join","fns","layout","color","classes","component","customTheme","customSelector","customVars","styler","generateStyles","typeClasses","small","regular","medium","large","classForType","view","attrs","vnode","element","props","_extends","filterSupportedAttributes","type","avatar","tone","class","events","content","svg","m","msvg","src","children","before","after"],"mappings":"oxBACA,kBACa,iBACA,wBACA,yBACA,0BACA,wBACA,gCCJGA,OAAKC,kCACLD,OAAKE,2BACLF,OAAKG,iCACLH,OAAKI,iCACL,0BACA,gBCNVC,EAAc,cAACC,0DAAON,OAAKE,4BACvBI,EAAO,YACPA,EAAO,kBAGDC,EAAUC,eACvBD,WACU,6BACM,0BACG,qBACR,oBACA,aACE,iCAGF,oBACM,YACP,cACC,uBAIA,sBAID,cACC,0BAGWF,EAAYG,EAAcC,gCAC1BJ,EAAYG,EAAcE,iCAC1BL,EAAYG,EAAcG,+BAC1BN,EAAYG,EAAcI,gBClC7CC,EAAQ,SAACC,EAAQP,EAAUC,EAAeO,eAC7CD,EAAOE,IAAI,kBAAKC,GAAIV,IAAUW,KAAK,YAC3BV,EAAc,SAAWO,IAAS,8BAI7BR,EAAUC,UACxBK,GAAO,gBAAiB,kBAAmBN,EAAUC,EAAe,WAC7D,GAAI,iBAAkB,mBAAoBD,EAAUC,EAAe,+KCHtEW,GAAOC,EAAQC,GACfd,MAAee,EAAQC,UAEhBC,EAAc,SAACC,EAAgBC,SAC1CC,UAAOC,gBAAgBH,EAAgBlB,QAAeP,EAAS0B,GAAaP,GAE9EQ,UAAOC,gBAAgBrB,GAAWP,EAAMmB,2KCNlCU,SACKP,EAAQQ,cACRR,EAAQS,eACRT,EAAQU,aACRV,EAAQW,OAGbC,EAAe,iBAAsBL,0DAAd,YAEvBM,EAAO,eACLC,GAAQC,EAAMD,MACdE,EAAUF,EAAME,SAAW,MAC3BC,EAAQC,KAEZC,4BAA0BL,WAGtBd,EAAQC,UACRW,EAAaE,EAAMM,MACnBN,EAAMO,OAASrB,EAAQqB,OAAS,KACjB,SAAfP,EAAMQ,KAAkB,eAAiB,KAC1B,UAAfR,EAAMQ,KAAmB,gBAAkB,KAC3CR,EAAMS,OACN3B,KAAK,MAETkB,EAAMU,OAASV,EAAMU,OAAS,MAE1BC,EAAUX,EAAMW,QAClBX,EAAMW,QACNX,EAAMY,IACJC,EAAED,OAASZ,EAAMY,MACjBZ,EAAMc,KACJD,EAAED,EAAKZ,EAAMc,MACbd,EAAMe,IACJF,EAAE,OAAQE,IAAKf,EAAMe,MACrBf,EAAMgB,UAAYf,EAAMe,eAC3BH,GAAEX,EAASC,GAAQH,EAAMiB,OAAQN,EAASX,EAAMkB,kBAIhD9B"}