{"version":3,"file":"polythene-react-base.js","sources":["../src/keys.js","../src/MithrilToReact.js","../src/renderer.js","../src/statefulComponent.js","../src/viewComponent.js","../src/Toggle.js"],"sourcesContent":["\nexport const keys = {\n  class:       \"className\",\n  formaction:  \"formAction\",\n  onblur:      \"onBlur\",\n  onclick:     \"onClick\",\n  onfocus:     \"onFocus\",\n  onkeydown:   \"onKeyDown\",\n  onkeyup:     \"onKeyUp\",\n  onmousedown: \"onMouseDown\",\n  onmouseout:  \"onMouseOut\",\n  onmouseover: \"onMouseOver\",\n  onmouseup:   \"onMouseUp\",\n  tabindex:    \"tabIndex\",\n};\n\nexport const normalizeKey = key => keys[key.toLowerCase()];\n","/*\nTakes a Mithril component object and returns a React component (for keys oninit and view).\nAutomatically redraws when vnode.state.stream exists, and the stream is updated.\n\nExample: \n\nimport stream from \"mithril/stream\";\nimport { renderer as h, RaisedButton } from \"polythene-react\";\n\nconst StateComponent = {\n  oninit: vnode => {\n    const checked = stream(false);\n    const label = stream(\"State\");\n    vnode.state = {\n      checked,\n      label,\n      stream: stream.merge([checked, label])\n    };\n  },\n  view: vnode => {\n    const state = vnode.state;\n    const attrs = vnode.attrs;\n    const checked = state.checked();\n    return h(RaisedButton, {\n      label: `${state.label()} of ${attrs.subject} is ${checked ? \"On\" : \"Off\"}`,\n      events: {\n        [keys.onclick]: () => state.checked(!checked)\n      }\n    });\n  }\n};\n\nh(StateComponent, { subject: \"airco\"});\n*/\n\nimport { Component } from \"react\";\n\nexport const MithrilToReact = component => (\n\n  class extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = Object.assign(\n        {},\n        component,\n        { state: {} }\n      );\n      this.state.oninit && this.state.oninit(this.state);\n    }\n    \n    componentDidMount() {\n      this.state.state.stream && this.state.state.stream.map(() => (\n        this.forceUpdate()\n      ));\n    }\n\n    render() {\n      return this.state.view({ state: this.state.state, attrs: this.props }, this.props.children);\n    }\n  }\n);\n","import h from \"react-hyperscript\";\nimport { MithrilToReact } from \"./MithrilToReact\";\n\nexport const renderer = (...args) =>\n  typeof args[0] === \"object\"\n    ? h.call(null, MithrilToReact(args[0]), ...args.slice(1))\n    : h.call(null, ...args);\n\nrenderer.trust = (html, element = \"div\") => {\n  if (html == null) html = \"\";\n  return h(element, {\n    dangerouslySetInnerHTML: { __html: html }\n  });\n};\n","import { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { renderer } from \"./renderer\";\nimport { keys } from \"./keys\";\n\nconst requiresKeys = true;\n\nexport const statefulComponent = ({\n  createContent,\n  createProps,\n  element,\n  getInitialState = () => ({}),\n  onMount = () => {},\n  onUnmount = () => {},\n  state = {},\n}) => {\n  \n  return class extends Component {\n    \n    constructor(props) {\n      super(props);\n      this.state = {\n        now: Date.now()\n      };\n      // Store the state we are interested in in a private property\n      this._state = Object.assign({}, state, getInitialState(props));\n    }\n\n    componentDidMount() {\n      onMount(this.createVirtualNode());\n    }\n\n    componentWillUnmount() {\n      onUnmount(this.createVirtualNode());\n    }\n\n    updateState(attr, value, callback) {\n      this._state[attr] = value;\n      // Force new render\n      this.setState({\n        now: Date.now()\n      }, callback);\n    }\n\n    createVirtualNode() {\n      const props = Object.assign({}, this.props);\n      return {\n        state: this._state,\n        attrs: props,\n        children: props.children,\n        dom: this.dom,\n        updateState: this.updateState.bind(this)\n      };\n    }\n\n    render() {\n      const vnode = this.createVirtualNode();\n      return renderer(\n        vnode.attrs.element || element,\n        Object.assign(\n          {},\n          createProps(vnode, { renderer, requiresKeys, keys }),\n          { ref: reactComponent => {\n            if (!this.dom) {\n              this.dom = ReactDOM.findDOMNode(reactComponent);\n            }\n          }}\n        ),\n        [\n          vnode.attrs.before,\n          createContent(vnode, { renderer, requiresKeys, keys }),\n          vnode.attrs.after\n        ]\n      );\n    }\n  };\n};\n","import { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { renderer } from \"./renderer\";\nimport { keys } from \"./keys\";\n\nconst requiresKeys = true;\n\nexport const viewComponent = ({\n  createContent,\n  createProps,\n  element,\n}) => {\n  \n  return class extends Component {\n\n    createVirtualNode() {\n      const props = Object.assign({}, this.props);\n      return {\n        attrs: props,\n        children: props.children,\n        dom: this.dom\n      };\n    }\n\n    render() {\n      const vnode = this.createVirtualNode();\n      return renderer(\n        vnode.attrs.element || element,\n        Object.assign(\n          {},\n          createProps(vnode, { renderer, requiresKeys, keys }),\n          { ref: reactComponent => {\n            if (!this.dom) {\n              this.dom = ReactDOM.findDOMNode(reactComponent);\n            }\n          }}\n        ),\n        [\n          vnode.attrs.before,\n          createContent(vnode, { renderer, requiresKeys, keys }),\n          vnode.attrs.after\n        ]\n      );\n    }\n  };\n};\n","import { Component } from \"react\";\nimport { renderer } from \"./renderer\";\n\nclass Toggle extends Component {\n    \n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: props.permanent || props.show || false,\n      transitioning: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.permanent || this.state.transitioning) {\n      return;\n    }\n    if (!this.state.visible && nextProps.show) {\n      this.setState({\n        visible: true\n      });\n    } else if (this.state.visible && nextProps.hide) {\n      this.setState({\n        visible: false\n      });\n    }\n  }\n\n  updateState() {\n    if (this.props.getState) {\n      this.props.getState({\n        visible: this.state.visible,\n        transitioning: this.state.transitioning\n      });\n    }\n  }\n\n  render() {\n    return this.state.visible\n      ? renderer(this.props.instance,\n          Object.assign(\n            {},\n            this.props,\n            {\n              setVisible: value => this.setState({ visible: value }, this.updateState ),\n              setTransitioning: value => this.setState({ transitioning: value }, this.updateState)\n            }\n          )\n        )\n      : renderer(\"span\", { className: this.props.placeholderClassName });\n  }\n}\n\nexport { Toggle };\n"],"names":["keys","MithrilToReact","props","state","_extends","component","oninit","_this","stream","this","map","_this2","forceUpdate","view","attrs","children","Component","renderer","args","_typeof","h","call","slice","trust","html","element","__html","statefulComponent","createContent","createProps","getInitialState","onMount","onUnmount","Date","now","_state","createVirtualNode","attr","value","callback","setState","dom","updateState","bind","vnode","requiresKeys","ref","ReactDOM","findDOMNode","reactComponent","before","after","viewComponent","Toggle","permanent","show","nextProps","transitioning","visible","hide","getState","instance","className","placeholderClassName"],"mappings":"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"}