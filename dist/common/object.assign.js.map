{"version":3,"sources":["../../src/common/object.assign.js"],"names":["Object","defineProperty","enumerable","configurable","writable","value","target","undefined","TypeError","to","i","arguments","length","nextSource","keysArray","nextIndex","len","nextKey","desc"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;AAGA,IAAI,iBAAJ,EAAoB;AAChBA,WAAOC,cAAP,CAAsBD,MAAtB,EAA8B,QAA9B,EAAwC;AACpCE,oBAAY,KADwB;AAEpCC,sBAAc,IAFsB;AAGpCC,kBAAU,IAH0B;AAIpCC,eAAO,eAASC,MAAT,EAAiB;AACpB,gBAAIA,WAAWC,SAAX,IAAwBD,WAAW,IAAvC,EAA6C;AACzC,sBAAM,IAAIE,SAAJ,CAAc,yCAAd,CAAN;AACH;;AAED,gBAAIC,KAAKT,OAAOM,MAAP,CAAT;AACA,iBAAK,IAAII,IAAI,CAAb,EAAgBA,IAAIC,UAAUC,MAA9B,EAAsCF,GAAtC,EAA2C;AACvC,oBAAIG,aAAaF,UAAUD,CAAV,CAAjB;AACA,oBAAIG,eAAeN,SAAf,IAA4BM,eAAe,IAA/C,EAAqD;AACjD;AACH;AACDA,6BAAab,OAAOa,UAAP,CAAb;;AAEA,oBAAIC,YAAY,oBAAYD,UAAZ,CAAhB;AACA,qBAAK,IAAIE,YAAY,CAAhB,EAAmBC,MAAMF,UAAUF,MAAxC,EAAgDG,YAAYC,GAA5D,EAAiED,WAAjE,EAA8E;AAC1E,wBAAIE,UAAUH,UAAUC,SAAV,CAAd;AACA,wBAAIG,OAAO,wCAAgCL,UAAhC,EAA4CI,OAA5C,CAAX;AACA,wBAAIC,SAASX,SAAT,IAAsBW,KAAKhB,UAA/B,EAA2C;AACvCO,2BAAGQ,OAAH,IAAcJ,WAAWI,OAAX,CAAd;AACH;AACJ;AACJ;AACD,mBAAOR,EAAP;AACH;AA3BmC,KAAxC;AA6BH","file":"object.assign.js","sourcesContent":["/*\nPolyfill\n*/\nif (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function(target) {\n            if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert first argument to object');\n            }\n\n            var to = Object(target);\n            for (var i = 1; i < arguments.length; i++) {\n                var nextSource = arguments[i];\n                if (nextSource === undefined || nextSource === null) {\n                    continue;\n                }\n                nextSource = Object(nextSource);\n\n                var keysArray = Object.keys(nextSource);\n                for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n                    var nextKey = keysArray[nextIndex];\n                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n                    if (desc !== undefined && desc.enumerable) {\n                        to[nextKey] = nextSource[nextKey];\n                    }\n                }\n            }\n            return to;\n        }\n    });\n}\n"]}