{"version":3,"file":"polythene-core-material-design-progress-spinner.js","sources":["../src/vars.js","../../polythene-css-classes/material-design-progress-spinner.js","../src/spinner.js"],"sourcesContent":["import { vars } from \"polythene-theme\";\nimport { vars as baseVars } from \"polythene-core-base-spinner\";\n\nconst rgba = (colorStr, opacity = 1) =>\n  `rgba(${colorStr}, ${opacity})`;\n  \nexport default Object.assign(\n  {},\n  baseVars,\n  {\n    border_width_small:   baseVars.size_small / baseVars.size_regular * 3,\n    border_width_regular: 3,\n    border_width_medium:  baseVars.size_medium / baseVars.size_regular * 3,\n    border_width_large:   baseVars.size_large / baseVars.size_regular * 3,\n    border_width_fab:     baseVars.size_fab / baseVars.size_regular * 3,\n    animation_duration:   \"1.5s\",\n\n    color_light:          rgba(vars.color_primary),\n    color_dark:           rgba(vars.color_primary)\n  }\n);\n","\nexport default {\n  component:          \"pe-md-progress-spinner\",\n\n  // elements\n  animation:          \"pe-md-progress-spinner__animation\",\n  circle:             \"pe-md-progress-spinner__circle\",\n  circleRight:        \"pe-md-progress-spinner__circle-right\",\n  circleLeft:         \"pe-md-progress-spinner__circle-left\"\n};\n","import { unpackAttrs } from \"polythene-core\";\nimport { easing } from \"polythene-utilities\";\nimport themeVars from \"./vars\";\nimport classes from \"polythene-css-classes/material-design-progress-spinner\";\n\nconst DEFAULT_UPDATE_DURATION = .8;\n\nconst sizeFromName = (size = \"regular\") => themeVars[\"size_\" + size];\n\nconst percentageValue = (min, max, percentage = 0) => min + ((max - min) * percentage);\n\nconst rotateCircle = (el, min, max, percentage) => {\n  const style = el.style;\n  style[\"transform\"] =\n    style[\"-webkit-transform\"] =\n    style[\"-moz-transform\"] =\n    style[\"-ms-transform\"] =\n    style[\"-o-transform\"] = \"rotate(\" + percentageValue(min, max, percentage) + \"deg)\";\n};\n\nconst animate = (stateEl, size, percentage) => {\n  const animationEl = stateEl.querySelector(\".\" + classes.animation);\n  const animationElStyle = animationEl.style;\n  if (percentage < 0.5) {\n    animationElStyle.clip = \"rect(0px, \" + size + \"px, \" + size + \"px, \" + size / 2 + \"px)\";\n  } else {\n    animationElStyle.clip = \"rect(auto, auto, auto, auto)\";\n  }\n  const leftCircle = stateEl.querySelector(\".\" + classes.circleLeft);\n  const rightCircle = stateEl.querySelector(\".\" + classes.circleRight);\n  leftCircle.style.clip = rightCircle.style.clip = \"rect(0px, \" + size / 2 + \"px, \" + size + \"px, \" + \"0px)\";\n  rotateCircle(rightCircle, 0, 180, Math.min(1, percentage * 2));\n  rotateCircle(leftCircle, 0, 360, percentage);\n};\n\nconst handlePercentage = (percentage, state, size, attrs) => {\n  if (!state.dom()) {\n    return;\n  }\n  if (state.animating()) {\n    return;\n  }\n  const previousPercentage = state.percentage();\n  if (attrs.animated && previousPercentage !== percentage) {\n    const animationDuration = (attrs.updateDuration || DEFAULT_UPDATE_DURATION) * 1000;\n    const el = state.dom();\n    let start = null;\n    const step = timestamp => {\n      if (!start) start = timestamp;\n      const progress = timestamp - start;\n      const stepPercentage = 1.0 / animationDuration * progress;\n      const newPercentage = previousPercentage + stepPercentage * (percentage - previousPercentage);\n      animate(el, size, easing.easeInOutQuad(newPercentage));\n      if (start && progress < animationDuration) {\n        window.requestAnimationFrame(step);\n      } else {\n        start = null;\n        state.percentage(percentage);\n        state.animating(false);\n      }\n    };\n    state.animating(true);\n    window.requestAnimationFrame(step);\n  } else {\n    animate(state.dom(), size, percentage);\n    state.percentage(percentage);\n  }\n};\n\nconst notifyState = (state, attrs, size) => {\n  if (attrs.percentage !== undefined) {\n    const percentage = unpackAttrs(attrs.percentage);\n    handlePercentage(percentage, state, size, attrs);\n  }\n};\n\nconst getSize = attrs => {\n  const rawSize = sizeFromName(attrs.size);\n  const { padding, paddedSize } = themeVars.raisedSize(rawSize);\n  return attrs.raised\n    ? paddedSize - 2 * padding\n    : rawSize;\n};\n\nexport const getInitialState = (vnode, createStream) => {\n  const percentage = createStream(0);\n  const dom = createStream(null);\n  const animating = createStream(false);\n  return {\n    dom,\n    percentage,\n    animating\n  };\n};\n\nexport const onMount = vnode => {\n  if (!vnode.dom) {\n    return;\n  }\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  state.dom(vnode.dom);\n  const size = getSize(attrs);\n  notifyState(state, attrs, size);\n};\n\nexport const createProps = (vnode, { renderer: h }) => {\n  const state = vnode.state;\n  const attrs = vnode.attrs;\n  const size = getSize(attrs);\n  notifyState(state, attrs, size);\n\n  const content = h(\"div\",\n    {\n      key: \"content\",\n      className: classes.animation,\n      style: {\n        width: size + \"px\",\n        height: size + \"px\"\n      }\n    },\n    [\n      h(\"div\", {\n        key: \"left\",\n        className: [classes.circle, classes.circleLeft].join(\" \")\n      }),\n      h(\"div\", {\n        key: \"right\",\n        className: [classes.circle, classes.circleRight].join(\" \")\n      })\n    ]\n  );\n\n  return Object.assign(\n    {},\n    attrs,\n    {\n      className: [classes.component, attrs.className].join(\" \"),\n      content\n    }\n  );\n};\n"],"names":["rgba","colorStr","baseVars","size_small","size_regular","size_medium","size_large","size_fab","vars","color_primary","sizeFromName","size","themeVars","percentageValue","min","max","rotateCircle","el","percentage","style","animate","stateEl","animationElStyle","querySelector","classes","animation","clip","leftCircle","circleLeft","rightCircle","circleRight","Math","handlePercentage","state","attrs","dom","animating","previousPercentage","animated","animationDuration","updateDuration","start","step","timestamp","progress","newPercentage","easing","easeInOutQuad","requestAnimationFrame","notifyState","undefined","unpackAttrs","getSize","rawSize","raisedSize","padding","paddedSize","raised","getInitialState","vnode","createStream","onMount","createProps","h","renderer","content","circle","join","_extends","component","className"],"mappings":"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"}